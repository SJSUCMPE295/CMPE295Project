{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/shared/store/constants/action-types.ts","webpack:///./src/shared/store/user/reducer.ts","webpack:///./src/shared/store/appReducer.ts","webpack:///./src/shared/store/rootReducer.ts","webpack:///./src/shared/store/index.ts","webpack:///./src/shared/components/dashboard/HealthNews.tsx","webpack:///./src/shared/utils/json.ts","webpack:///./src/shared/components/dashboard/Statistics.tsx","webpack:///./src/shared/pages/Dashboard/Dashboard.tsx","webpack:///./src/shared/utils/config.ts","webpack:///./src/shared/components/account/AccountProfile.tsx","webpack:///./src/shared/components/account/AccountProfileDetails.tsx","webpack:///./src/shared/pages/Account/Account.tsx","webpack:///./src/shared/store/actions.ts","webpack:///./src/shared/pages/MedicalAssistance/MedicalAssistance.tsx","webpack:///./src/shared/pages/MedicalAssistance/LookForMedicalAssistance.tsx","webpack:///./src/shared/components/settings/SettingsProfileStatus.tsx","webpack:///./src/shared/components/settings/SettingsPassword.tsx","webpack:///./src/shared/components/settings/SettingsDoctor.tsx","webpack:///./src/shared/pages/Settings/Settings.tsx","webpack:///./src/shared/icons/Google.tsx","webpack:///./src/shared/pages/hooks/useMounted.tsx","webpack:///./src/shared/pages/Login/Login.tsx","webpack:///./src/shared/pages/Login/RegisterThruLogin.tsx","webpack:///./src/shared/pages/Register/RegisterFirstPage.tsx","webpack:///./src/shared/pages/Register/RegisterSecondPage.tsx","webpack:///./src/shared/pages/ForgotPassword/ForgotPassword.tsx","webpack:///./src/shared/pages/ForgotPassword/ResetPassword.tsx","webpack:///./src/shared/pages/NotFound.tsx","webpack:///./src/shared/pages/GetHelp/GetHelp.tsx","webpack:///./src/shared/pages/GetHelpItem/GetHelpItem.tsx","webpack:///./src/shared/theme.tsx","webpack:///./static/images/logo.png","webpack:///./src/shared/components/Logo.tsx","webpack:///./src/shared/components/MainNavbar.tsx","webpack:///./src/shared/components/MainLayout.tsx","webpack:///./src/shared/components/DashboardNavbar.tsx","webpack:///./src/shared/components/RegisterDoctorModal.tsx","webpack:///./src/shared/components/NavItem.tsx","webpack:///./src/shared/components/DashboardSidebar.tsx","webpack:///./src/shared/components/DashboardLayout.tsx","webpack:///./src/shared/components/givehelp/AddServiceCard.tsx","webpack:///./src/shared/pages/GiveHelp/AddService.tsx","webpack:///./src/shared/components/givehelp/LandingPageCard.tsx","webpack:///./src/shared/pages/GiveHelp/LandingPage.tsx","webpack:///./src/shared/components/givehelp/AddResourceCard.tsx","webpack:///./src/shared/pages/GiveHelp/AddResource.tsx","webpack:///./src/shared/components/mytransactions/ManageTransactionsCard.tsx","webpack:///./src/shared/pages/MyTransactions/MyTransactions.tsx","webpack:///./src/shared/App.tsx","webpack:///./src/client/index.tsx","webpack:///./src/shared/contexts/AuthContext.tsx","webpack:///./src/shared/utils/firebase.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","SETGETHELP","saveUserName","initialState","freeze","locale","appReducer","combineReducers","userProfileReducer","state","action","type","payload","user","ActionTypes","help","doctor","firstName","lastName","userName","id","userMetaData","profile","address","email","rootReducer","undefined","persistConfig","storage","localStorage","persistedReducer","persistReducer","createRootReducer","configureStore","middleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","actionsBlacklist","compose","store","createStore","applyMiddleware","thunk","concat","persistor","persistStore","HealthNews","useState","articles","setArticles","useEffect","fetch","then","res","json","items","filter","item","title","newArticles","Card","CardHeader","Divider","List","map","article","ListItemButton","component","href","link","divider","guid","ListItemIcon","sx","paddingRight","img","alt","src","enclosure","style","height","width","ListItemText","primary","React","Typography","color","variant","secondary","pubDate","objectWithBoolean","obj","keys","reduce","acc","curr","formatDate","dateString","utcTime","dateNow","Date","year","getFullYear","monthWithOffset","getUTCMonth","month","toString","date","getDate","hour","getUTCHours","getHours","minutes","String","getMinutes","padStart","time","prettyDate","selectedTime","toLocaleDateString","day","toLocaleTimeString","ConnectedStatistics","connect","props","UserId","console","log","setData","setError","token","getItem","axios","defaults","withCredentials","params","headers","authtoken","response","error","resourcename","resourcesku","transactiontype","transactioncount","totalusertrans","totalresources","usertransactions","userappointments","theme","useTheme","resources","forEach","element","_id","resource_SKU","number","count","data_donut","datasets","backgroundColor","colors","indigo","orange","borderWidth","borderColor","common","white","hoverBorderColor","labels","options_donut","animation","cutoutPercentage","layout","padding","legend","display","maintainAspectRatio","responsive","tooltips","palette","background","paper","bodyFontColor","text","enabled","footerFontColor","intersect","titleFontColor","datab","barPercentage","barThickness","borderRadius","categoryPercentage","label","maxBarThickness","options","cornerRadius","scales","xAxes","ticks","Color","gridLines","drawBorder","yAxes","fontColor","beginAtZero","min","borderDash","borderDashOffset","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","page","setPage","rowsPerPage","setRowsPerPage","Grid","container","spacing","lg","sm","xl","xs","CardContent","justifyContent","gutterBottom","transactions","Avatar","red","MoneyIcon","Box","pt","alignItems","green","mr","InsertChartIcon","users","PeopleIcon","services","AutoAwesomeIcon","align","direction","md","paddingBottom","position","Bar","Button","endIcon","ArrowRightIcon","size","PerfectScrollbar","minWidth","Table","TableHead","TableRow","TableCell","TableSortLabel","TableBody","service","hover","Service_Name","Category","moment","availableDate","format","Zipcode","TablePagination","rowsPerPageOptions","onPageChange","event","newPage","onRowsPerPageChange","parseInt","target","Doughnut","doctor_name","AppointmentDetails","b","maxHeight","overflow","Dashboard","Helmet","minHeight","py","Container","maxWidth","Statistics","serverUrl","Input","styled","ConnectedAccountProfile","userMetadata","dispatch","useDispatch","setSaveMsg","profilePic","avatar","setAvatar","setShowErrorMsg","getStorage","storageRef","ref","image","findImage","setFindImage","setFileUploadTitle","progress","setProgress","uploadPicture","imageName","files","file","uploadBytesResumable","on","snapshot","bytesTransferred","totalBytes","downloadProfilePic","getDownloadURL","url","updateProfilePic","catch","code","phoneNumber","profileActive","updateProfilePicApiCall","post","status","flexDirection","CircularProgress","city","CardActions","htmlFor","accept","multiple","onChange","fullWidth","input","hidden","onClick","deleteObject","ConnectedAccountProfileDetails","location","country","values","setValues","saveMsg","phone","setPhone","phoneNumbeErr","setPhoneNumberErr","phoneNumbeErrMsg","setPhoneNumberErrMsg","zipCode","zipcode","setZipcode","zipcodeErr","setZipcodeErr","zipcodeErrMsg","setZipcodeErrMsg","countries","registerLocale","require","countryObj","getNames","select","countryArray","entries","handleChange","form","autoComplete","noValidate","subheader","TextField","helperText","InputProps","inputProps","max","required","SelectProps","native","option","Alert","severity","Account","AccountProfile","AccountProfileDetails","api","interceptors","request","use","config","setGetHelp","updateUserProfile","jsonToQueryString","str","encodeURIComponent","join","getAvailableDoctors","createAppointment","getProfile","userId","profileUpdate","put","getProfileData","columns","field","headerName","flex","valueGetter","description","sortable","getValue","gender","mapDispatchToProps","ConnectedDoctorSchedule","activeUser","open","setOpen","setActiveUser","successAlert","setSuccessAlert","available","setAvailable","availability","handleRowClick","row","setSuccessAlertWithTimer","msg","setTimeout","handleClose","DataTable","rows","div","DataGrid","pageSize","disableSelectionOnClick","onRowClick","mt","mb","appointments","Dialog","onClose","className","onSubmit","e","preventDefault","formData","FormData","formProps","fromEntries","err","DialogTitle","DialogContent","DialogContentText","my","TextareaAutosize","minRows","defaultValue","notes","DialogActions","FormControlLabel","control","Switch","defaultChecked","checked","InputLabelProps","shrink","steps","ConnectedLookForMedicalAssistance","activeStep","setActiveStep","daysFromToday","today","future","setDate","setSelectedTime","doctors","setDoctors","selectedDoctor","setSelectedDoctor","alert","setAlert","notesInput","setNotes","Set","skipped","setSkipped","hasDuplicateAppointment","find","x","indexOf","setTime","isStepOptional","step","isStepSkipped","has","StepContainer","currentTarget","Select","labelId","MenuItem","disabled","em","textarea","aria-label","Stepper","index","stepProps","labelProps","optional","completed","Step","StepLabel","prevActiveStep","Error","prevSkipped","newSkipped","add","last","setDoctorStep","delete","doctorId","appointmentDetails","notesValue","current","saveNotes","ConnectedSettingsProfileStatus","rest","wrap","Checkbox","oldpassword","password","confirm","margin","ConnectedSettingsDoctor","emailNotifications","appNotifications","phoneCalls","ConnectedSettingsView","isDoctor","SettingsDoctor","SettingsProfileStatus","Google","SvgIcon","path","useMounted","mounted","useRef","Login","history","useHistory","useAuth","login","signinWithGoogle","apiCall","loginApi","replace","marginTop","marginBottom","Formik","initialValues","isSubmitting","validationSchema","Yup","shape","accessToken","setItem","finally","errors","handleBlur","handleSubmit","touched","startIcon","GoogleIcon","pb","Boolean","onBlur","Link","RouterLink","to","underline","ConnectedRegisterThruLoginDetails","genderOptions","setChecked","address1","phonenumber","matches","ml","marginLeft","RegisterFirstPage","register","message","_tokenResponse","RegisterSecondPage","useSelector","ForgotPassword","useLocation","errorAlert","setErrorAlert","setMessage","forgotPassword","ResetPassword","resetPassword","query","URLSearchParams","search","NotFound","textAlign","containerStyle","ConnectedGetHelp","CityError","setCityError","setName","setCity","miles","setMiles","currentloc","setCurrentloc","directions","setDirections","datafilter","setDataFilter","ignoreStat","origin","UserCompleteAddress","setUserCompleteAddress","setCount","totalitem","setTotalItem","setPageSize","isLoaded","useJsApiLoader","googleMapsApiKey","getCurrentUserLocation","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","lat","lng","geocoder","google","maps","Geocoder","geocode","results","GeocoderStatus","OK","address_components","element2","types","element3","long_name","formatted_address","user_location","Math","ceil","handlePageLoad","setMap","onLoad","useCallback","bounds","LatLngBounds","fitBounds","onUnmount","span","RadioGroup","Radio","br","startAdornment","InputAdornment","fontSize","SearchIcon","placeholder","NavigationIcon","CircleIcon","resource","ImageUrl","CardMedia","Name","Description","SKU","distance","textTransform","directionsService","DirectionsService","destination","route","travelMode","TravelMode","DRIVING","DirectionsStatus","getDirections","Pagination","paddingTop","GoogleMap","mapContainerStyle","center","zoom","Marker","markertitle","DirectionsRenderer","defaultOptions","suppressMarkers","withRouter","init","ConnectedGetHelpItem","item_type","param","useParams","user_email","errorText","setErrorText","quantity","setQuantity","pagetype","setPageType","substring","handlepageload","handleItemQuantityChange","sendEmail","templateId","variables","emailjs","send","titleTypographyProps","border","boxShadow","TableContainer","Paper","scope","owner_name","Phone_Number","owner_email","resource_email_quantity","qua_date","email_subject","to_user_email","resource_name","resource_description","resource_address","resource_quantity","phone_num","from_name","to_name","subject","to_email","victim_name","victim_phone_num","user_id","aria-labelledby","aria-describedby","autoFocus","createTheme","default","contrastText","main","shadows","typography","h1","fontWeight","letterSpacing","h2","h3","h4","h5","h6","overline","Logo","logo","MainNavbar","AppBar","elevation","Toolbar","MainLayoutRoot","MainLayoutWrapper","MainLayoutContainer","MainLayoutContent","MainLayout","children","DashboardNavbar","onMobileNavOpen","logout","notifications","flexGrow","Hidden","mdDown","IconButton","Badge","badgeContent","NotificationsIcon","clear","InputIcon","mdUp","MenuIcon","BorderLinearProgress","withStyles","root","colorPrimary","bar","LinearProgress","getModalStyle","top","left","transform","bgcolor","RegisterDoctorModal","closeModal","modalStyle","setLoading","fileErr","setFileErr","fileErrMsg","setFileErrMsg","licenseUrl","doctorProfile","fileName","fileUrl","setFileUrl","fileUploadTitle","fileLink","setFileLink","specialityOptions","setSpecialityOptions","errMessage","setErrMessage","saveFile","speciality","license","qualification","experience","when","is","Modal","marginRight","font","round","rel","ConnectedRegisterDoctorDetails","NavItem","Icon","icon","active","matchPath","end","pathname","ListItem","disableGutters","propTypes","PropTypes","string","elementType","ConnectedDashboardSidebar","onMobileClose","openMobile","jobTitle","BarChartIcon","isHidden","PackageIcon","ShoppingBagIcon","PlusCircleIcon","UserIcon","CreditCardIcon","SettingsIcon","content","cursor","Drawer","anchor","PaperProps","DashboardLayoutRoot","DashboardLayoutWrapper","breakpoints","up","paddingLeft","DashboardLayoutContainer","DashboardLayoutContent","DashboardLayout","isMobileNavOpen","setMobileNavOpen","DashboardSidebar","getStates","getCode","ConnectedAddServiceCard","check","setCheck","serviceName","setServiceName","category","setCategory","setDescription","phoneNum","setPhoneNum","dialCode","setDialCode","setAddress","setState","setCountry","CountryData","countryNames","setCode","setAvailability","datePickerIsOpen","togglePicker","setImage","setUrl","serviceNameError","setServiceNameError","ifServiceError","setIfServiceError","availabilityError","setAvailabilityError","setIfAvailabilityError","categoryError","setCategoryError","ifCategoryError","setIfCategoryError","descriptionError","setDescriptionError","ifDescriptionError","setIfDescriptionError","phoneNumError","setPhoneNumError","ifPhoneNumError","setIfPhoneNumError","addressError","setAddressError","ifAddressError","setIfAddressError","cityError","ifCityError","setIfCityError","setStateError","zipcodeError","setZipcodeError","ifZipcodeError","setIfZipcodeError","setCountryError","validateForm","getTime","stateObj","toLowerCase","stateArray","handleTogglePicker","a","method","body","JSON","stringify","Address","City","State","Country","reload","rowSpacing","columnSpacing","FormHelperText","DatePicker","popperProps","positionFixed","selected","onClickOutside","showOverlay","confirmBtnText","cancelBtnText","zIndex","justify-content","FormGroup","dial_code","uploadBytes","metadata","AddService","AddServiceCard","LandingPageCard","verticalAlign","LandingPage","ConnectedAddResourceCard","resourceName","setResourceName","sku","setSku","resourceNameError","setResourceNameError","ifResourceError","setIfResourceError","skuError","setSkuError","ifSkuError","setIfSkuError","isValid","Resource_Name","AddResource","AddResourceCard","ConnectedManageTransactionsCard","givedata","setGiveData","getdata","setGetData","setService","stateError","countryError","handleImageChange","handleCategoryChange","handleDescriptionChange","handlePhoneNumChange","handleAddressChange","handleCityChange","handleStateChange","handleZipcodeChange","handleCountryChange","handleTransactionSearch","openresource","setOpenresource","openservice","setOpenservice","userid","Availability","getresources","handleCancel","pageGive","setPageGive","rowsPerPageGive","setRowsPerPageGive","toISOString","handleEdit","handleDelete","alignSelf","GiveHelp","ManageTransactionsCard","ConnectedApp","AuthContextProvider","StyledEngineProvider","injectFirst","ThemeProvider","Route","GetHelpItem","GetHelp","MyTransactions","MedicalAssistance","LookForMedicalAssistance","AddServiceScreen","AddResourceScreen","GiveHelpScreen","Settings","RegisterThruLogin","Register1","Register2","exact","Redirect","preloadedState","__PRELOADED_STATE__","hydrate","Provider","BrowserRouter","HelmetProvider","PersistGate","loading","App","document","getElementById","AuthContext","createContext","currentUser","Promise","resolve","reject","oobCode","newPassword","useContext","setCurrentUser","unsubscribe","onAuthStateChanged","auth","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","provider","GoogleAuthProvider","signInWithPopup","sendPasswordResetEmail","confirmPasswordReset","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getAuth"],"mappings":"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","file":"bundle.9f7220f5.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/static/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export const SETLOCALE = 'app/set-locale';\nexport const SETGETHELP = 'app/set-get-help';\nexport const SETDOCTORDATA = 'app/set-doctor-data';\nexport const saveUserName = 'save-user-name';\nexport const createUserProfile = 'create-user-profile';\nexport const loginAction = 'login-action';\nexport const logoutAction = 'logout-action';\nexport const updateUser = 'updateUser';\nexport const resetState = 'reset-state';\n","import * as ActionTypes from '../constants/action-types';\nimport { Action } from './types';\n\nexport const initialState = Object.freeze<any>({\n    locale: 'en_US',\n});\n\nexport default (state: any = initialState, action: Action | any): any => {\n    switch (action?.type) {\n        case 'persist/REHYDRATE': {\n            return { ...state, ...action?.payload?.user, ...action?.payload?.userProfileReducer };\n        }\n        case ActionTypes.SETGETHELP: {\n            return { ...state, help: true };\n        }\n        case ActionTypes.updateUser: {\n            return { ...state, ...action?.payload };\n        }\n        case ActionTypes.SETDOCTORDATA: {\n            return { ...state, doctor: action?.payload?.doctor || action?.payload };\n        }\n        case ActionTypes.saveUserName: {\n            return {\n                ...state,\n                firstName: action?.firstName,\n                lastName: action?.lastName,\n                userName: action?.userName,\n            };\n        }\n        case ActionTypes.createUserProfile: {\n            return {\n                ...state,\n                ...action?.payload,\n                id: action?.id,\n                userMetaData: action?.userMetaData,\n                profile: action?.profile,\n                address: action?.address,\n            };\n        }\n        case ActionTypes.loginAction:\n            return {\n                ...state,\n                email: action.email,\n            };\n\n        case ActionTypes.logoutAction:\n            return {};\n        default:\n            return state;\n    }\n};\n","import { combineReducers } from 'redux';\nimport user from './user/reducer';\n\nconst appReducer = combineReducers({\n    userProfileReducer: user,\n});\n\nexport default appReducer;\n","import { resetState } from './constants/action-types';\nimport appReducer from './appReducer';\n\nconst rootReducer = (state, action) => {\n    if (action.type === resetState) {\n        // storage.removeItem(\"persist:root\");\n\n        return appReducer(undefined, action);\n    }\n    return appReducer(state, action);\n};\n\nexport default rootReducer;\nexport type RootState = ReturnType<typeof rootReducer>;\n","import thunk from 'redux-thunk';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport createRootReducer from './rootReducer';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport localStorage from 'redux-persist/lib/storage';\n\ntype StoreParams = {\n    initialState?: { [key: string]: any };\n    middleware?: any[];\n};\n\nconst persistConfig = {\n    key: 'root',\n    storage: localStorage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, createRootReducer);\n\nexport const configureStore = ({ initialState, middleware = [] }: StoreParams) => {\n    const devtools =\n        typeof window !== 'undefined' &&\n        typeof window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ === 'function' &&\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({ actionsBlacklist: [] });\n\n    const composeEnhancers = devtools || compose;\n\n    const store = createStore(\n        persistedReducer,\n        initialState,\n        composeEnhancers(applyMiddleware(...[thunk].concat(...middleware)))\n    );\n\n    if (process.env.NODE_ENV !== 'production') {\n        if (module.hot) {\n            module.hot.accept('./rootReducer', () =>\n                store.replaceReducer(require('./rootReducer').default)\n            );\n        }\n    }\n\n    let persistor = persistStore(store);\n    if (typeof window !== `undefined`) {\n        window.persistor = persistor;\n    }\n\n    return { store, persistor };\n};\n\nexport default configureStore;\n","import * as React from 'react';\nimport { Component, useRef, useEffect, useState, FunctionComponent } from 'react';\nimport moment from 'moment';\nimport {\n    Box,\n    Button,\n    Card,\n    CardHeader,\n    Divider,\n    IconButton,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemButton,\n    ListItemIcon,\n    CardActionArea,\n    CardMedia,\n    CardContent,\n    Typography,\n    ListItemText,\n    Table,\n    TableHead,\n    TableBody,\n    TableRow,\n    TableCell,\n} from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nimport PerfectScrollbar from 'react-perfect-scrollbar';\n\nconst HealthNews = () => {\n    // { headers: { Accept: “application/json” } }\n    const newsRssFeed =\n        'https://api.rss2json.com/v1/api.json?rss_url=https%3A%2F%2Fwww.news-medical.net%2Fsyndication.axd%3Fformat%3Drss';\n    const medicalNewsLink = 'https://www.news-medical.net/syndication.axd';\n    const MAX_ARTICLES = 10;\n    const [articles, setArticles] = useState(null);\n\n    useEffect(() => {\n        //const loadArticles = async () => {\n        fetch(newsRssFeed)\n            .then((res) => res.json())\n            .then((data) => data.items.filter((item) => item.title.length > 0))\n            .then((newArticles) => newArticles.slice(0, MAX_ARTICLES))\n            .then((articles) => setArticles(articles));\n        //.catch((error) => console.log(error))\n        //.then(data => console.log(data))\n        //};\n        //loadArticles();\n    }, [MAX_ARTICLES]);\n\n    /* - SR\nvar convert = require('xml-js');\nfetch(medicalNewsLink)\n.then((resXML) => console.log(resXML))\n\nuseEffect(() => {\n    fetch(medicalNewsLink)\n    .then((res) => res.json())\n    //.then((resJson) => convert.xml2json(resJson, {compact: true, spaces: 4}))\n    .then((data) => data.items.filter((item) => item.title.length > 0))\n    .then((articles) => setArticles(articles))\n    }, [MAX_ARTICLES]);\n\nSR-End */\n\n    //console.log(articles);\n\n    //}, [MAX_ARTICLES]);\n\n    return (\n        <Card>\n            <CardHeader title=\"Health News\" />\n            <Divider />\n\n            {articles != null ? (\n                <List>\n                    {' '}\n                    {articles.map((article, i) => (\n                        <ListItemButton\n                            component=\"a\"\n                            href={article.link}\n                            divider={i < articles.length - 1}\n                            key={article.guid}\n                        >\n                            <ListItemIcon sx={{ paddingRight: 2 }}>\n                                <img\n                                    alt={article.title}\n                                    src={article.enclosure.link}\n                                    style={{\n                                        height: 100,\n                                        width: 70,\n                                    }}\n                                />\n                            </ListItemIcon>\n                            <ListItemText\n                                primary={\n                                    <React.Fragment>\n                                        <Typography color=\"textPrimary\" variant=\"body2\">\n                                            {article.title}\n                                        </Typography>\n                                    </React.Fragment>\n                                }\n                                secondary={\n                                    <Typography color=\"textSecondary\" variant=\"caption\">\n                                        {article.pubDate}\n                                    </Typography>\n                                }\n                            />\n                        </ListItemButton>\n                    ))}\n                </List>\n            ) : null}\n            <Divider />\n        </Card>\n    );\n};\nexport default HealthNews;\n","export const objectWithBoolean = (obj = {}) => ({\n    ...Object.keys(obj).reduce(\n        (acc, curr) => ({\n            ...acc,\n            [curr]: obj[curr] === 'true' ? true : obj[curr],\n        }),\n        {}\n    ),\n});\nexport const getDate = (daysFromToday = 0) => {\n    let dateNow = new Date(); // Creating a new date object with the current date and time\n    if (daysFromToday) {\n        const today = new Date();\n        const future = new Date(today);\n        future.setDate(future.getDate() + daysFromToday);\n        dateNow = future;\n    }\n    const year = dateNow.getFullYear(); // Getting current year from the created Date object\n    const monthWithOffset = dateNow.getUTCMonth() + 1; // January is 0 by default in JS. Offsetting +1 to fix date for calendar.\n    const month = // Setting current Month number from current Date object\n        monthWithOffset.toString().length < 2 // Checking if month is < 10 and pre-prending 0 to adjust for date input.\n            ? `0${monthWithOffset}`\n            : monthWithOffset;\n    const date =\n        dateNow.getDate().toString().length < 2 // Checking if date is < 10 and pre-prending 0 if not to adjust for date input.\n            ? `0${dateNow.getDate()}`\n            : dateNow.getDate();\n    return `${year}-${month}-${date}`; // combining to format for defaultValue or value attribute of material <TextField>\n};\nexport const formatDate = (dateString, utcTime = false) => {\n    const dateNow = new Date(dateString); // Creating a new date object with the current date and time\n    const year = dateNow.getFullYear(); // Getting current year from the created Date object\n    const monthWithOffset = dateNow.getUTCMonth() + 1; // January is 0 by default in JS. Offsetting +1 to fix date for calendar.\n    const month = // Setting current Month number from current Date object\n        monthWithOffset.toString().length < 2 // Checking if month is < 10 and pre-prending 0 to adjust for date input.\n            ? `0${monthWithOffset}`\n            : monthWithOffset;\n    const date =\n        dateNow.getDate().toString().length < 2 // Checking if date is < 10 and pre-prending 0 if not to adjust for date input.\n            ? `0${dateNow.getDate()}`\n            : dateNow.getDate();\n    const hour = utcTime ? dateNow.getUTCHours() : dateNow.getHours();\n    const minutes =\n        String(utcTime ? dateNow.getMinutes() : dateNow.getMinutes()).padStart(2, '0') || '00';\n    const time = hour > 0 ? `T${hour}:${minutes}` : '';\n    return `${year}-${month}-${date}${time}`; // combining to format for defaultValue or value attribute of material <TextField>\n};\n\nexport const prettyDate = (selectedTime) => {\n    const d = new Date(selectedTime);\n    const date = d.toLocaleDateString();\n    const day = d.toLocaleTimeString();\n    return d ? `${date}  ${day}` : '';\n};\n","import React, { Component, useRef, useEffect, useState, FunctionComponent } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {\n    Avatar,\n    Box,\n    Card,\n    CardContent,\n    Grid,\n    Typography,\n    Button,\n    CardHeader,\n    Divider,\n    useTheme,\n    colors,\n    Chip,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    TableSortLabel,\n    Tooltip,\n    TablePagination,\n} from '@material-ui/core';\nimport moment from 'moment';\nimport { v4 as uuid } from 'uuid';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport { Doughnut } from 'react-chartjs-2';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport MoneyIcon from '@material-ui/icons/Money';\nimport { red, green, orange, indigo } from '@material-ui/core/colors';\nimport InsertChartIcon from '@material-ui/icons/InsertChartOutlined';\nimport PeopleIcon from '@material-ui/icons/PeopleOutlined';\nimport { Bar } from 'react-chartjs-2';\nimport AutoAwesomeIcon from '@material-ui/icons/AutoAwesomeMosaic';\nimport HealthNews from '../../components/dashboard/HealthNews';\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport axios from 'axios';\nimport { formatDate, prettyDate } from 'utils/json';\nconst Statistics: FunctionComponent<any> = ({ userProfileReducer, props }) => {\n    const UserId = userProfileReducer.id; //'6225e61bf81d2541a4000bc9'//userProfileReducer.id;\n    console.log(UserId);\n    //const [loading, setLoading] = useState(true);\n    const [data, setData] = useState(null);\n    const [error, setError] = useState(null);\n    //'617f2fb40583ba49a0091425';\n    useEffect(() => {\n        // if (typeof myVar !== 'undefined'\n        const token = localStorage.getItem('token');\n        // set the with credentials to true\n        axios.defaults.withCredentials = true;\n        axios\n            .get(\n                '/api/home',\n                { params: { user: UserId } },\n                {\n                    headers: {\n                        authtoken: token,\n                    },\n                }\n            )\n            .then(\n                (response) => {\n                    console.log(response.data);\n                    setData(response?.data);\n                },\n                (error) => {\n                    console.log(error);\n                    setError(error);\n                }\n            );\n        //.finally(()=> {setLoading(false); })\n    }, []);\n    //if (loading) return \"Loading....\"\n    //if (error) return \"Error\"\n    let resourcename = [];\n    let resourcesku = [];\n    let transactiontype = [];\n    let transactioncount = [];\n    let totalusertrans = 0;\n    let totalresources = 0;\n    let usertransactions = {};\n    let userappointments = {};\n    const theme = useTheme();\n    if (data != null) {\n        const resources = data.resources;\n\n        resources.forEach((element) => {\n            resourcename.push(element._id);\n            resourcesku.push(element.resource_SKU);\n        });\n        totalresources = resourcesku.reduce((result, number) => result + number);\n\n        usertransactions = data.usertransactions;\n        if (usertransactions.length > 0) {\n            usertransactions.forEach((element) => {\n                transactiontype.push(element._id);\n                transactioncount.push(element.count);\n            });\n            totalusertrans = transactioncount.reduce((result, number) => result + number);\n        }\n        userappointments = data?.userappointments;\n    }\n    const data_donut = {\n        datasets: [\n            {\n                data: transactioncount,\n                backgroundColor: [colors.indigo[500], colors.orange[600]],\n                borderWidth: 8,\n                borderColor: colors.common.white,\n                hoverBorderColor: colors.common.white,\n            },\n        ],\n        labels: transactiontype,\n    };\n\n    const options_donut = {\n        animation: false,\n        cutoutPercentage: 80,\n        layout: { padding: 0 },\n        legend: {\n            display: false,\n        },\n        maintainAspectRatio: false,\n        responsive: true,\n        tooltips: {\n            backgroundColor: theme.palette.background.paper,\n            bodyFontColor: theme.palette.text.secondary,\n            borderColor: theme.palette.divider,\n            borderWidth: 1,\n            enabled: true,\n            footerFontColor: theme.palette.text.secondary,\n            intersect: false,\n            mode: 'index',\n            titleFontColor: theme.palette.text.primary,\n        },\n    };\n\n    const datab = {\n        datasets: [\n            {\n                backgroundColor: colors.indigo[500],\n                barPercentage: 0.5,\n                barThickness: 12,\n                borderRadius: 4,\n                categoryPercentage: 0.5,\n                data: resourcesku,\n                label: 'Quantity available',\n                maxBarThickness: 13,\n            },\n        ],\n        labels: resourcename,\n    };\n\n    const options = {\n        animation: false,\n        cornerRadius: 20,\n        layout: { padding: 0 },\n        legend: { display: false },\n        maintainAspectRatio: false,\n        responsive: true,\n        scales: {\n            xAxes: {\n                ticks: {\n                    Color: theme.palette.text.secondary,\n                },\n                gridLines: {\n                    display: false,\n                    drawBorder: false,\n                },\n            },\n\n            yAxes: {\n                ticks: {\n                    fontColor: theme.palette.text.secondary,\n                    beginAtZero: true,\n                    min: 0,\n                },\n                gridLines: {\n                    borderDash: [2],\n                    borderDashOffset: [2],\n                    color: theme.palette.divider,\n                    drawBorder: false,\n                    zeroLineBorderDash: [2],\n                    zeroLineBorderDashOffset: [2],\n                    zeroLineColor: theme.palette.divider,\n                },\n            },\n        },\n        tooltips: {\n            backgroundColor: theme.palette.background.paper,\n            bodyFontColor: theme.palette.text.secondary,\n            borderColor: theme.palette.divider,\n            borderWidth: 1,\n            enabled: true,\n            footerFontColor: theme.palette.text.secondary,\n            intersect: false,\n            mode: 'index',\n            titleFontColor: theme.palette.text.primary,\n        },\n    };\n\n    const [page, setPage] = React.useState(0);\n\n    const [rowsPerPage, setRowsPerPage] = React.useState(8);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    return (\n        <Grid container spacing={3}>\n            <Grid item lg={3} sm={6} xl={3} xs={12}>\n                <Card sx={{ height: '100%' }} {...props}>\n                    <CardContent>\n                        <Grid container spacing={3} sx={{ justifyContent: 'space-between' }}>\n                            <Grid item>\n                                <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\n                                    TOTAL TRANSACTIONS\n                                </Typography>\n\n                                {data != null ? (\n                                    <Typography color=\"textPrimary\" variant=\"h3\">\n                                        {data.transactions}\n                                    </Typography>\n                                ) : null}\n                            </Grid>\n                            <Grid item>\n                                <Avatar\n                                    sx={{\n                                        backgroundColor: red[600],\n                                        height: 56,\n                                        width: 56,\n                                    }}\n                                >\n                                    <MoneyIcon />\n                                </Avatar>\n                            </Grid>\n                        </Grid>\n                        <Box\n                            sx={{\n                                pt: 2,\n                                display: 'flex',\n                                alignItems: 'center',\n                            }}\n                        >\n                            <Typography\n                                sx={{\n                                    color: green[900],\n                                    mr: 1,\n                                }}\n                                variant=\"body2\"\n                            ></Typography>\n                            <Typography color=\"textSecondary\" variant=\"caption\"></Typography>\n                        </Box>\n                    </CardContent>\n                </Card>\n            </Grid>\n            <Grid item lg={3} sm={6} xl={3} xs={12}>\n                <Card sx={{ height: '100%' }} {...props}>\n                    <CardContent>\n                        <Grid container spacing={3} sx={{ justifyContent: 'space-between' }}>\n                            <Grid item>\n                                <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\n                                    RESOURCES\n                                </Typography>\n                                {data != null ? (\n                                    <Typography color=\"textPrimary\" variant=\"h3\">\n                                        {totalresources}\n                                    </Typography>\n                                ) : null}\n                            </Grid>\n                            <Grid item>\n                                <Avatar\n                                    sx={{\n                                        backgroundColor: orange[600],\n                                        height: 56,\n                                        width: 56,\n                                    }}\n                                >\n                                    <InsertChartIcon />\n                                </Avatar>\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                </Card>\n            </Grid>\n            <Grid item lg={3} sm={6} xl={3} xs={12}>\n                <Card {...props}>\n                    <CardContent>\n                        <Grid container spacing={3} sx={{ justifyContent: 'space-between' }}>\n                            <Grid item>\n                                <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\n                                    TOTAL USERS\n                                </Typography>\n                                {data != null ? (\n                                    <Typography color=\"textPrimary\" variant=\"h3\">\n                                        {data.users}\n                                    </Typography>\n                                ) : null}\n                            </Grid>\n                            <Grid item>\n                                <Avatar\n                                    sx={{\n                                        backgroundColor: green[600],\n                                        height: 56,\n                                        width: 56,\n                                    }}\n                                >\n                                    <PeopleIcon />\n                                </Avatar>\n                            </Grid>\n                        </Grid>\n                        <Box\n                            sx={{\n                                alignItems: 'center',\n                                display: 'flex',\n                                pt: 2,\n                            }}\n                        >\n                            <Typography\n                                variant=\"body2\"\n                                sx={{\n                                    color: green[900],\n                                    mr: 1,\n                                }}\n                            ></Typography>\n                            <Typography color=\"textSecondary\" variant=\"caption\"></Typography>\n                        </Box>\n                    </CardContent>\n                </Card>\n            </Grid>\n            <Grid item lg={3} sm={6} xl={3} xs={12}>\n                <Card {...props} sx={{ height: '100%' }}>\n                    <CardContent>\n                        <Grid container spacing={3} sx={{ justifyContent: 'space-between' }}>\n                            <Grid item>\n                                <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\n                                    SERVICES\n                                </Typography>\n                                {data != null ? (\n                                    <Typography color=\"textPrimary\" variant=\"h3\">\n                                        {data.services.length}\n                                    </Typography>\n                                ) : null}\n                            </Grid>\n                            <Grid item>\n                                <Avatar\n                                    sx={{\n                                        backgroundColor: indigo[600],\n                                        height: 56,\n                                        width: 56,\n                                    }}\n                                >\n                                    <AutoAwesomeIcon />\n                                </Avatar>\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                </Card>\n            </Grid>\n            <Grid align=\"left\" direction=\"row\" item container spacing={3}>\n                <Grid item lg={9} md={12} xl={9} xs={12}>\n                    <Grid item paddingBottom={3}>\n                        <Card {...props}>\n                            <CardHeader\n                                /*action={\n                    <Button endIcon={<ArrowDropDownIcon />} size=\"small\" variant=\"text\">\n                        Medical\n                    </Button>\n                }*/\n                                title=\"Available Resources\"\n                            />\n                            <Divider />\n                            <CardContent>\n                                <Box\n                                    sx={{\n                                        height: 400,\n                                        position: 'relative',\n                                    }}\n                                >\n                                    <Bar data={datab} options={options} />\n                                </Box>\n                            </CardContent>\n                            <Divider />\n                            <Box\n                                sx={{\n                                    display: 'flex',\n                                    justifyContent: 'flex-end',\n                                    p: 2,\n                                }}\n                            >\n                                <Button\n                                    href=\"/app/gethelp\"\n                                    color=\"primary\"\n                                    endIcon={<ArrowRightIcon />}\n                                    size=\"small\"\n                                    variant=\"text\"\n                                >\n                                    VIEW ALL\n                                </Button>\n                            </Box>\n                        </Card>\n                    </Grid>\n                    <Grid item>\n                        <Card {...props}>\n                            <CardHeader title=\"Available Services\" />\n                            <Divider />\n                            <PerfectScrollbar>\n                                <Box sx={{ minWidth: 800 }}>\n                                    <Table>\n                                        <TableHead>\n                                            <TableRow>\n                                                <TableCell>Service Name</TableCell>\n                                                <TableCell>Category</TableCell>\n                                                <TableCell>\n                                                    <TableSortLabel>Available Date</TableSortLabel>\n                                                </TableCell>\n                                                {/*<TableCell sortDirection=\"desc\">\n                                <Tooltip enterDelay={300} title=\"Sort\">\n                                    <TableSortLabel active direction=\"desc\">\n                                        Available Date\n                                    </TableSortLabel>\n                                </Tooltip>\n                    </TableCell>*/}\n                                                <TableCell>Zip Code</TableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        {data != null ? (\n                                            <TableBody>\n                                                {data.services\n                                                    .slice(\n                                                        page * rowsPerPage,\n                                                        page * rowsPerPage + rowsPerPage\n                                                    )\n                                                    .map((service) => (\n                                                        <TableRow hover key={service._id}>\n                                                            <TableCell>\n                                                                {service.Service_Name}\n                                                            </TableCell>\n                                                            <TableCell>\n                                                                {service.Category}\n                                                            </TableCell>\n                                                            <TableCell>\n                                                                {moment(\n                                                                    service.availableDate\n                                                                ).format('MM/DD/YYYY')}\n                                                            </TableCell>\n                                                            <TableCell>{service.Zipcode}</TableCell>\n                                                        </TableRow>\n                                                    ))}\n                                            </TableBody>\n                                        ) : null}\n                                    </Table>\n                                    <TablePagination\n                                        rowsPerPageOptions={[8, 16, 24]}\n                                        component=\"div\"\n                                        count={data?.services.length}\n                                        rowsPerPage={rowsPerPage}\n                                        page={page}\n                                        onPageChange={handleChangePage}\n                                        onRowsPerPageChange={handleChangeRowsPerPage}\n                                    />\n                                </Box>\n                            </PerfectScrollbar>\n                            <Box\n                                sx={{\n                                    display: 'flex',\n                                    justifyContent: 'flex-end',\n                                    p: 2,\n                                }}\n                            >\n                                <Button\n                                    href=\"/app/gethelp\"\n                                    color=\"primary\"\n                                    endIcon={<ArrowRightIcon />}\n                                    size=\"small\"\n                                    variant=\"text\"\n                                >\n                                    View all\n                                </Button>\n                            </Box>\n                        </Card>\n                    </Grid>\n                </Grid>\n\n                <Grid item lg={3} md={12} xl={3} xs={12}>\n                    {UserId != '' ? (\n                        <Grid item paddingBottom={3}>\n                            <Card {...props}>\n                                <CardHeader title=\"My Activity\" />\n                                <Divider />\n                                <CardContent>\n                                    <Typography variant=\"h6\">\n                                        Total Transactions : {totalusertrans}\n                                    </Typography>\n                                    {data && usertransactions.length > 0 ? (\n                                        <Box\n                                            sx={{\n                                                height: 300,\n                                                position: 'relative',\n                                            }}\n                                        >\n                                            <Doughnut data={data_donut} options={options_donut} />\n                                        </Box>\n                                    ) : null}\n                                    <Divider />\n                                    <Box\n                                        sx={{\n                                            //height: 300,\n                                            position: 'relative',\n                                        }}\n                                    >\n                                        <Typography variant=\"h6\">Upcoming Appointments</Typography>\n                                        {data != null ? (\n                                            userappointments.length > 0 ? (\n                                                userappointments.map(\n                                                    ({\n                                                        doctor_name: doctor_name,\n                                                        AppointmentDetails: AppointmentDetails,\n                                                        time: time,\n                                                        _id: _id,\n                                                    }) => (\n                                                        <Typography\n                                                            color=\"textPrimary\"\n                                                            variant=\"text\"\n                                                            key={_id}\n                                                        >\n                                                            You have an appointment with{' '}\n                                                            <b>{doctor_name}</b> at{' '}\n                                                            <b>{prettyDate(time)}</b>\n                                                        </Typography>\n                                                    )\n                                                )\n                                            ) : (\n                                                <Typography color=\"textPrimary\" variant=\"h7\">\n                                                    You do not have any appointment scheduled.\n                                                </Typography>\n                                            )\n                                        ) : null}\n                                    </Box>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                    ) : null}\n                    <Grid item style={{ maxHeight: '100vh', overflow: 'auto' }}>\n                        <HealthNews />\n                    </Grid>\n                </Grid>\n            </Grid>\n            {/*<Grid item lg={4} md={6} xl={3} xs={12}></Grid>*/}\n        </Grid>\n    );\n};\n\nconst mapStateToProps = ({ userProfileReducer }) => ({\n    userProfileReducer,\n});\n\nconst mapDispatchToProps = {};\n\nconst ConnectedStatistics = connect(mapStateToProps, mapDispatchToProps)(Statistics);\nexport default ConnectedStatistics;\n//export default Statistics;\n","import * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Container, Grid } from '@material-ui/core';\nimport Statistics from '../../components/dashboard/Statistics';\n\nconst Dashboard = () => (\n    <>\n        <Helmet>\n            <title>Dashboard | WeCare</title>\n        </Helmet>\n        <Box\n            sx={{\n                backgroundColor: 'background.default',\n                minHeight: '100%',\n                py: 3,\n            }}\n        >\n            <Container maxWidth={false}>\n                <Statistics />\n            </Container>\n        </Box>\n    </>\n);\n\nexport default Dashboard;\n","//const serverUrl = 'https://ab3b-71-237-235-43.ngrok.io/api/';\nconst serverUrl = 'http://localhost:8500/api/';\n\nexport default serverUrl;\n","import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { styled } from '@mui/material/styles';\n// import MuiAlert from '@mui/material/Alert';\nimport { Alert, Snackbar } from '@mui/material';\nimport {\n    getStorage,\n    ref,\n    uploadBytesResumable,\n    getDownloadURL,\n    deleteObject,\n} from 'firebase/storage';\nimport {\n    Avatar,\n    Box,\n    Button,\n    Card,\n    CardActions,\n    CardContent,\n    Divider,\n    Typography,\n} from '@material-ui/core';\nimport axios from 'axios';\nimport serverUrl from '../../utils/config';\nimport { useDispatch } from 'react-redux';\nimport { createUserProfile, saveUserName } from '../../store/constants/action-types';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nconst metadata = {\n    contentType: 'image/jpg',\n};\n\nconst Input = styled('input')({\n    display: 'none',\n});\n\n// const Alert = React.forwardRef(function Alert(props, ref) {\n//     return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n//   });\n\nconst AccountProfile = ({ userProfileReducer, ...props }) => {\n    const user = {\n        // avatar: userProfileReducer.profile.profile_pic,\n        address: userProfileReducer.address,\n        profile: userProfileReducer.profile,\n        userMetaData: userProfileReducer.userMetadata,\n        lastName: userProfileReducer.lastName,\n        firstName: userProfileReducer.firstName,\n        userName: userProfileReducer.userName,\n    };\n    console.log('user ', user);\n    const dispatch = useDispatch();\n    const [open, setOpen] = React.useState(false);\n    const [saveMsg, setSaveMsg] = useState('');\n    const [avatar, setAvatar] = React.useState(userProfileReducer?.profile?.profilePic);\n    const [showErrorMsg, setShowErrorMsg] = React.useState(false);\n    const storage = getStorage();\n    const storageRef = ref(storage, `/${user.userName}/profilePic/userPic`);\n    const [image, setImage] = React.useState('');\n    const [findImage, setFindImage] = React.useState(false);\n    const [fileUploadTitle, setFileUploadTitle] = React.useState('Upload Profile Pic');\n    const [progress, setProgress] = useState(100);\n    // const handleClose = (event?: React.SyntheticEvent | Event, reason?: string) => {\n    //     if (reason === 'clickaway') {\n    //       return;\n    //     }\n    //     setOpen(false);\n    //   };\n    const uploadPicture = (event) => {\n        if (image == null) return;\n        const imageName = event.target.files[0].name;\n        var file = event.target.files[0];\n        console.log(event.target.files[0]);\n        // const storage = getStorage();\n        // const storageRef = ref(storage, `/${user.userName}/profilePic/userPic`);\n        const uploadTask = uploadBytesResumable(storageRef, file);\n        uploadTask.on(\n            'state_changed',\n            (snapshot) => {\n                setProgress((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\n                setFileUploadTitle(imageName);\n                downloadProfilePic();\n            },\n            (error) => {}\n        );\n    };\n\n    const deletePicture = () => {\n        // Delete the file\n        deleteObject(storageRef)\n            .then(() => {\n                setAvatar('');\n                var profile = {\n                    phoneNumber: user?.profile?.phoneNumber,\n                    profileActive: user?.profile?.profileActive,\n                    profilePic: '',\n                };\n                // dispatch({\n                //     type: createUserProfile,\n                //     userMetaData: user?.userMetaData,\n                //     profile: profile,\n                //     address: user?.address,\n                // });\n                updateProfilePicApiCall(profile);\n            })\n            .catch((error) => {\n                setShowErrorMsg(true);\n            });\n    };\n    const downloadProfilePic = () => {\n        getDownloadURL(storageRef)\n            .then((url) => {\n                console.log(url);\n                setAvatar(url);\n                user.profile.profilePic = url;\n                console.log('user avatar', user);\n                updateProfilePic();\n                setFindImage(true);\n            })\n            .catch((error) => {\n                switch (error.code) {\n                    case 'storage/object-not-found':\n                        setAvatar('');\n                        setFindImage(false);\n                        break;\n                }\n            });\n    };\n\n    const updateProfilePic = () => {\n        const profile = {\n            phoneNumber: user?.profile?.phoneNumber,\n            profileActive: user?.profile?.profileActive,\n            profilePic: user?.profile?.profilePic,\n        };\n        updateProfilePicApiCall(profile);\n    };\n\n    const updateProfilePicApiCall = (profile) => {\n        const payload = {\n            userName: user.userName,\n            profile: profile,\n        };\n        const token = localStorage.getItem('token');\n        axios.defaults.withCredentials = true;\n        // make a post request with the user data\n        axios\n            .post(serverUrl + 'user/profilePicUpdate', payload, {\n                headers: {\n                    authtoken: token,\n                },\n            })\n            .then(\n                (response) => {\n                    console.log('axios call', response);\n                    if (response.status === 200) {\n                        console.log('updated successfully');\n                        dispatch({\n                            type: createUserProfile,\n                            userMetaData: response?.data?.data?.userMetaData,\n                            profile: response?.data?.data?.profile,\n                            address: response?.data?.data?.address,\n                        });\n                        setSaveMsg('Yes');\n                    }\n                    if (response.status === 401) {\n                        setSaveMsg('No');\n                    }\n                },\n                (error) => {\n                    console.log('register error');\n                    setSaveMsg('No');\n                    //   this.setState({\n                    //     errorMessage: error.response.data,\n                    //     signupFailed: true,\n                    //   });\n                }\n            );\n    };\n\n    // useEffect(() => {\n    //     console.log('inside useeffect');\n    //     downloadProfilePic();\n    // }, [1]);\n    return (\n        <Card {...props}>\n            <CardContent>\n                <Box\n                    sx={{\n                        alignItems: 'center',\n                        display: 'flex',\n                        flexDirection: 'column',\n                    }}\n                >\n                    {progress > 0 && progress < 100 && (\n                        <CircularProgress variant=\"determinate\" value={progress} />\n                    )}\n                    {progress == 100 && (\n                        <Avatar\n                            src={avatar}\n                            // src=\"https://firebasestorage.googleapis.com/v0/b/cmpe295-wecare.appspot.com/o/test114%40gmail.com%2FprofilePic%2FuserPic?alt=media&token=eb7bdbea-70e3-4b32-be11-712b56d56985\"\n                            sx={{\n                                height: 100,\n                                width: 100,\n                            }}\n                        />\n                    )}\n                    <Typography color=\"textPrimary\" gutterBottom variant=\"h4\">\n                        {user?.firstName}\n                    </Typography>\n                    <Typography color=\"textSecondary\" variant=\"body1\">\n                        {`${user?.address?.city}, ${user?.address?.state}`}\n                    </Typography>\n                    {/* <Typography color=\"textSecondary\" variant=\"body1\">\n                    {`${moment().format('hh:mm A')} ${user.timezone}`}\n                </Typography> */}\n                </Box>\n            </CardContent>\n            <Divider />\n            <CardActions\n                sx={{\n                    alignItems: 'center',\n                    display: 'flex',\n                    flexDirection: 'column',\n                }}\n            >\n                <label htmlFor=\"contained-button-file\">\n                    <Input\n                        accept=\"image/*\"\n                        id=\"contained-button-file\"\n                        multiple\n                        type=\"file\"\n                        onChange={uploadPicture}\n                    />\n                    <Button color=\"primary\" fullWidth variant=\"text\" component=\"span\">\n                        {findImage ? 'Update picture' : 'Upload picture'}\n                        <input type=\"image\" hidden onChange={uploadPicture} />\n                    </Button>\n                </label>\n            </CardActions>\n            <Button\n                color=\"secondary\"\n                fullWidth\n                variant=\"text\"\n                component=\"span\"\n                onClick={deletePicture}\n                style={{\n                    color: '#d11a2a',\n                }}\n            >\n                Delete Picture\n            </Button>\n            {/* {showErrorMsg? (\n                <Alert severity=\"error\">This is an error message!</Alert>\n            ): ''} */}\n            {/* <div\n                style={{\n                    alignItems: 'center',\n                    display: 'flex',\n                    flexDirection: 'column',\n                }}\n            >\n                {saveMsg == 'Yes' &&\n                <Snackbar autoHideDuration={6000} onClose={handleClose}>\n                 <Alert severity=\"success\">Profile Pic is updated!</Alert>\n                 </Snackbar>}\n                {saveMsg === 'No' && (\n                    <Alert severity=\"error\">Error updating your profile pic.</Alert>\n                )}\n            </div> */}\n        </Card>\n    );\n};\n//`${moment().format('hh:mm A')} ${user.timezone}`\n\nconst mapStateToProps = ({ userProfileReducer }) => ({\n    userProfileReducer,\n});\n\nconst mapDispatchToProps = {};\n\nconst ConnectedAccountProfile = connect(mapStateToProps, mapDispatchToProps)(AccountProfile);\nexport default ConnectedAccountProfile;\n","import * as React from 'react';\nimport { useState } from 'react';\nimport Alert from '@mui/material/Alert';\nimport {\n    Box,\n    Button,\n    Card,\n    CardContent,\n    CardHeader,\n    Divider,\n    Grid,\n    TextField,\n} from '@material-ui/core';\nimport countries from 'i18n-iso-countries';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport serverUrl from '../../utils/config';\nimport { useDispatch } from 'react-redux';\nimport { createUserProfile, saveUserName } from '../../store/constants/action-types';\n\nconst AccountProfileDetails = ({ userProfileReducer, ...props }) => {\n    const [values, setValues] = React.useState({\n        firstName: userProfileReducer.firstName,\n        lastName: userProfileReducer.lastName,\n        userName: userProfileReducer.userName,\n        // phone: userProfileReducer?.profile?.phoneNumber,\n        address: userProfileReducer?.address?.location,\n        // zipcode: userProfileReducer?.address?.zipCode,\n        city: userProfileReducer?.address?.city,\n        state: userProfileReducer?.address?.state,\n        country: userProfileReducer?.address?.country,\n        userMetaData: userProfileReducer.userMetaData,\n        profileActive: userProfileReducer?.profile?.profileActive,\n        profilePic: userProfileReducer?.profile?.profilePic,\n    });\n    console.log('Values', values);\n    const dispatch = useDispatch();\n    const [saveMsg, setSaveMsg] = useState('');\n    const [phone, setPhone] = useState(userProfileReducer?.profile?.phoneNumber);\n    const [phoneNumbeErr, setPhoneNumberErr] = useState(false);\n    const [phoneNumbeErrMsg, setPhoneNumberErrMsg] = useState('');\n    const [zipcode, setZipcode] = useState(userProfileReducer?.address?.zipCode);\n    const [zipcodeErr, setZipcodeErr] = useState(false);\n    const [zipcodeErrMsg, setZipcodeErrMsg] = useState('');\n    countries.registerLocale(require('i18n-iso-countries/langs/en.json'));\n    const countryObj = countries.getNames('en', { select: 'official' });\n    const countryArray = Object.entries(countryObj).map(([key, value]) => {\n        return {\n            label: key,\n            value: value,\n        };\n    });\n    const handleChange = (event) => {\n        setValues({\n            ...values,\n            [event.target.name]: event.target.value,\n        });\n    };\n\n    const validation = () => {\n        console.log('phone length', phone.toString().length);\n        if (phone.toString().length != 10) {\n            setPhoneNumberErr(true);\n            setPhoneNumberErrMsg('Phone Number should be 10 digits');\n            return false;\n        } else if (zipcode.toString().length != 5) {\n            setZipcodeErr(true);\n            setZipcodeErrMsg('ZipCode should be 5 digits');\n            return false;\n        } else {\n            return true;\n        }\n    };\n    const handleChangePhone = (event) => {\n        setPhoneNumberErr(false);\n        setPhoneNumberErrMsg('');\n        setPhone(event.target.value);\n    };\n\n    const handleChangeZipcode = (event) => {\n        setZipcodeErr(false);\n        setZipcodeErrMsg('');\n        setZipcode(event.target.value);\n    };\n\n    const handleSave = () => {\n        const isValid = validation();\n        if (isValid) {\n            const payload = {\n                userName: values.userName,\n                firstName: values.firstName,\n                lastName: values.lastName,\n                userMetaData: values.userMetaData,\n                profile: {\n                    phoneNumber: phone,\n                    profileActive: values?.profileActive,\n                    profilePic: values?.profilePic,\n                },\n                address: {\n                    location: values.address,\n                    city: values.city,\n                    state: values.state,\n                    country: values.country,\n                    zipCode: zipcode,\n                },\n            };\n            const token = localStorage.getItem('token');\n            // set the with credentials to true\n            axios.defaults.withCredentials = true;\n            // make a post request with the user data\n            axios\n                .post(serverUrl + 'user/profileUpdate', payload, {\n                    headers: {\n                        authtoken: token,\n                    },\n                })\n                .then(\n                    (response) => {\n                        console.log('axios call', response);\n                        if (response.status === 200) {\n                            console.log('updated successfully');\n                            dispatch({\n                                type: saveUserName,\n                                firstName: response.data.data.firstName,\n                                lastName: response.data.data.lastName,\n                                userName: response.data.data.userName,\n                            });\n                            dispatch({\n                                type: createUserProfile,\n                                userMetaData: response.data.data.userMetaData,\n                                profile: response.data.data?.profile,\n                                address: response.data.data.address,\n                            });\n                            setSaveMsg('Yes');\n                        }\n                        if (response.status === 401) {\n                            setSaveMsg('No');\n                        }\n                    },\n                    (error) => {\n                        console.log('register error');\n                        setSaveMsg('No');\n                        //   this.setState({\n                        //     errorMessage: error.response.data,\n                        //     signupFailed: true,\n                        //   });\n                    }\n                );\n        }\n    };\n\n    return (\n        <form autoComplete=\"off\" noValidate {...props}>\n            <Card>\n                <CardHeader subheader=\"The information can be edited\" title=\"User Profile\" />\n                <Divider />\n                <CardContent>\n                    <Grid container spacing={3}>\n                        <Grid item md={6} xs={12}>\n                            <TextField\n                                fullWidth\n                                helperText=\"Please specify the first name\"\n                                label=\"First name\"\n                                name=\"firstName\"\n                                onChange={handleChange}\n                                value={values.firstName}\n                                variant=\"outlined\"\n                            />\n                        </Grid>\n                        <Grid item md={6} xs={12}>\n                            <TextField\n                                fullWidth\n                                label=\"Last name\"\n                                name=\"lastName\"\n                                onChange={handleChange}\n                                value={values.lastName}\n                                variant=\"outlined\"\n                            />\n                        </Grid>\n                        <Grid item md={6} xs={12}>\n                            <TextField\n                                fullWidth\n                                label=\"Phone Number\"\n                                error={phoneNumbeErr}\n                                helperText={phoneNumbeErrMsg}\n                                name=\"phone\"\n                                onChange={handleChangePhone}\n                                type=\"number\"\n                                InputProps={{\n                                    inputProps: {\n                                        max: 10,\n                                        min: 10,\n                                    },\n                                }}\n                                value={phone}\n                                variant=\"outlined\"\n                            />\n                        </Grid>\n                        <Grid item md={6} xs={12}>\n                            <TextField\n                                fullWidth\n                                label=\"Address\"\n                                name=\"address\"\n                                onChange={handleChange}\n                                value={values.address}\n                                variant=\"outlined\"\n                            />\n                        </Grid>\n                        <Grid item md={6} xs={12}>\n                            <TextField\n                                fullWidth\n                                label=\"City\"\n                                name=\"city\"\n                                onChange={handleChange}\n                                value={values.city}\n                                variant=\"outlined\"\n                            />\n                        </Grid>\n                        <Grid item md={6} xs={12}>\n                            <TextField\n                                fullWidth\n                                label=\"ZipCode\"\n                                name=\"zipcode\"\n                                type=\"number\"\n                                error={zipcodeErr}\n                                helperText={zipcodeErrMsg}\n                                onChange={handleChangeZipcode}\n                                InputProps={{\n                                    inputProps: {\n                                        max: 5,\n                                        min: 5,\n                                    },\n                                }}\n                                value={zipcode}\n                                variant=\"outlined\"\n                            />\n                        </Grid>\n                        <Grid item md={6} xs={12}>\n                            <TextField\n                                fullWidth\n                                label=\"State\"\n                                name=\"state\"\n                                onChange={handleChange}\n                                value={values.state}\n                                variant=\"outlined\"\n                            />\n                        </Grid>\n                        <Grid item md={6} xs={12}>\n                            <TextField\n                                fullWidth\n                                label=\"Select Country\"\n                                name=\"country\"\n                                onChange={handleChange}\n                                required\n                                select\n                                SelectProps={{ native: true }}\n                                value={values.country}\n                                variant=\"outlined\"\n                            >\n                                {countryArray.map((option) => (\n                                    <option key={option.label} value={option.value}>\n                                        {option.value}\n                                    </option>\n                                ))}\n                            </TextField>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n                <Divider />\n\n                <Box\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        p: 2,\n                    }}\n                >\n                    <Button color=\"primary\" variant=\"contained\" onClick={handleSave}>\n                        Save details\n                    </Button>\n                    {saveMsg == 'Yes' && <Alert severity=\"success\">Profile is updated!</Alert>}\n                    {saveMsg === 'No' && (\n                        <Alert severity=\"error\">Error updating your profile.</Alert>\n                    )}\n                </Box>\n            </Card>\n        </form>\n    );\n};\n\nconst mapStateToProps = ({ userProfileReducer }) => ({\n    userProfileReducer,\n});\n\nconst mapDispatchToProps = {};\n\nconst ConnectedAccountProfileDetails = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AccountProfileDetails);\nexport default ConnectedAccountProfileDetails;\n","import * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Container, Grid } from '@material-ui/core';\nimport AccountProfile from '../../components/account/AccountProfile';\nimport AccountProfileDetails from '../../components/account/AccountProfileDetails';\n\nconst Account = () => (\n    <>\n        <Helmet>\n            <title>WeCare | User Profile</title>\n        </Helmet>\n        <Box\n            sx={{\n                backgroundColor: 'background.default',\n                minHeight: '100%',\n                py: 3,\n            }}\n        >\n            <Container maxWidth=\"lg\">\n                <Grid container spacing={3}>\n                    <Grid item lg={4} md={6} xs={12}>\n                        <AccountProfile />\n                    </Grid>\n                    <Grid item lg={8} md={6} xs={12}>\n                        <AccountProfileDetails />\n                    </Grid>\n                </Grid>\n            </Container>\n        </Box>\n    </>\n);\n\nexport default Account;\n","import axios from 'axios';\nimport * as ActionTypes from './constants/action-types';\nimport { Locale } from './user/types';\nconst api = axios.create({\n    withCredentials: true,\n});\napi.interceptors.request.use((config) => {\n    config.headers.authtoken =\n        (typeof window !== 'undefined' && window.localStorage.getItem('token')) || null;\n    return config;\n});\nexport const setLocale = (locale: Locale) => ({\n    type: ActionTypes.SETLOCALE,\n    payload: locale,\n});\nexport const setGetHelp = (payload = {}) => ({\n    type: ActionTypes.SETGETHELP,\n    payload,\n});\nexport const updateUserProfile = (payload) => ({\n    type: ActionTypes.updateUser,\n    payload: payload?.data?.data || payload?.data || payload || {},\n});\nexport const updateUserProfileDoctorData = (payload = {}) => ({\n    type: ActionTypes.SETDOCTORDATA,\n    payload,\n});\nconst jsonToQueryString = (json = {}) => {\n    const str = Object.keys(json)\n        .map((key) => encodeURIComponent(key) + '=' + encodeURIComponent(json[key]))\n        .join('&');\n    return str ? '?' + str : '';\n};\n\n/* api */\nexport const signUp = (data = {}) => api.post('/api/signup', data);\nexport const loginApi = (data = {}) => api.post('/api/login', data);\nexport const getHome = (data = {}) => api.get('/api/listing' + jsonToQueryString(data));\n\nexport const getAllDoctorsAppointments = (id, data = {}) =>\n    api.get(`/api/appointments/doctors/${id}${jsonToQueryString(data)}`);\nexport const getAvailableDoctors = (data = {}) =>\n    api.get('/api/appointments/doctors' + jsonToQueryString(data));\nexport const setDoctorsAvailability = (data) =>\n    api.post(`/api/appointments/doctors/${data?.userId || data?.id}`, data);\nexport const setAppointment = (id, data) => api.put(`/api/appointments/${id}`, data);\nexport const createAppointment = (data) => api.post('/api/appointments', data);\nexport const getHelp = (data = {}) => api.get('/api/gethelp' + jsonToQueryString(data));\nexport const giveHelp = (data = {}) => api.post('/api/gethelp', data);\nexport const getServiceById = (id, data = {}) =>\n    api.get(`/api/gethelp/services/${id}${jsonToQueryString(data)}`);\nexport const getResourcesById = (id, data = {}) =>\n    api.get(`/api/gethelp/resources/${id}${jsonToQueryString(data)}`);\nexport const getProfile = (data) =>\n    api.get(`/api/user/${data?.userId || data?.id}${jsonToQueryString(data)}`);\nexport const profileUpdate = (data = {}) => api.put('/api/user', data);\n/* Thunk Actions */\nexport const getProfileData = (data = {}) => {\n    return (dispatch) => {\n        getProfile(data).then((r) => {\n            dispatch(updateUserProfile(r));\n        });\n    };\n};\n","import * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport {\n    Box,\n    Button,\n    Container,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    TextField,\n    TextareaAutosize,\n    Typography,\n    Switch,\n    FormControlLabel,\n    Alert,\n} from '@material-ui/core';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { connect } from 'react-redux';\nimport {\n    getAllDoctorsAppointments,\n    setDoctorsAvailability,\n    setGetHelp,\n    getProfileData,\n    setAppointment,\n} from 'store/actions';\nimport { objectWithBoolean, formatDate, prettyDate } from 'utils/json';\n\nconst columns = [\n    {\n        field: 'time',\n        headerName: 'Time',\n        flex: 1,\n        valueGetter: (params) => prettyDate(params?.value),\n    },\n    {\n        field: 'fullName',\n        headerName: 'Full name',\n        description: 'This column has a value getter and is not sortable.',\n        sortable: false,\n        flex: 1,\n        valueGetter: (params) => {\n            const user = params.getValue(params?.id, 'user');\n            return `${user?.firstName || ''} ${user?.lastName || ''}`;\n        },\n    },\n    {\n        field: 'state',\n        headerName: 'State',\n        flex: 1,\n        valueGetter: (params) => params.getValue(params?.id, 'user')?.address?.state,\n    },\n    {\n        field: 'gender',\n        headerName: 'Gender',\n        flex: 1,\n        valueGetter: (params) => params.getValue(params?.id, 'user')?.userMetaData?.gender,\n    },\n    {\n        field: 'notes',\n        headerName: 'notes',\n        flex: 1,\n    },\n];\n\nexport const DoctorSchedule = (props) => {\n    const [open, setOpen] = React.useState(false);\n    const [activeUser, setActiveUser] = React.useState(null);\n    const [successAlert, setSuccessAlert] = React.useState('');\n    const [available, setAvailable] = React.useState(false);\n    React.useEffect(() => {\n        props?.id && props.getProfileData({ id: props?.id });\n    }, []);\n    React.useEffect(() => {\n        setAvailable(!!props?.doctor?.availability);\n    }, [props?.doctor?.availability]);\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n    const handleRowClick = ({ row }) => {\n        setActiveUser(row);\n    };\n    const setSuccessAlertWithTimer = (msg) => {\n        setSuccessAlert(msg);\n        setTimeout(() => {\n            setSuccessAlert('');\n        }, 6000);\n    };\n    const handleClose = () => {\n        setActiveUser(null);\n        setOpen(false);\n    };\n    const handleToggleAvailability = (e, checked) => {\n        setAvailable(checked);\n    };\n    const handleSubmitActiveUser = (e) => {\n        e.preventDefault();\n        const formData = new FormData(e.target);\n        const formProps = objectWithBoolean(Object.fromEntries(formData));\n        console.log(formProps, activeUser);\n        setAppointment(activeUser?.id, formProps)\n            .then((data) => {\n                setSuccessAlertWithTimer('Updated');\n                props?.id && props.getProfileData({ id: props?.id });\n                handleClose(false);\n            })\n            .catch((err) => {\n                console.log('Db issue');\n            });\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const formData = new FormData(e.target);\n        const formProps = objectWithBoolean(Object.fromEntries(formData));\n        if (!formProps?.available) {\n            formProps.availability = '';\n        }\n        console.log(formProps);\n        setDoctorsAvailability({ ...formProps, id: props?.id })\n            .then((data) => {\n                setAvailable(formProps?.availability);\n                setSuccessAlertWithTimer('Updated Availability');\n                props?.id && props.getProfileData({ id: props?.id });\n                setOpen(false);\n            })\n            .catch((err) => {\n                console.log('Db issue');\n            });\n    };\n    const DataTable = ({ rows }) => {\n        if (rows) {\n            return (\n                <div style={{ height: '100vh', width: '100%' }}>\n                    {!rows.length ? (\n                        <Typography sx={{ mt: 2, mb: 1 }}>No Appointments</Typography>\n                    ) : (\n                        <DataGrid\n                            rows={rows}\n                            columns={columns}\n                            pageSize={15}\n                            disableSelectionOnClick\n                            onRowClick={handleRowClick}\n                        />\n                    )}\n                </div>\n            );\n        }\n        return <Typography sx={{ mt: 2, mb: 1 }}>Loading</Typography>;\n    };\n    return (\n        <>\n            <Helmet>\n                <title>WeCare</title>\n            </Helmet>\n            <Box\n                sx={{\n                    backgroundColor: 'background.default',\n                    minHeight: '100vh',\n                    py: 3,\n                }}\n            >\n                <Container maxWidth={false}>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'flex-end',\n                        }}\n                    >\n                        <Button color=\"primary\" variant=\"contained\" onClick={handleClickOpen}>\n                            Update Availibility\n                        </Button>\n                    </Box>\n                    {successAlert && <Alert severity=\"success\">{successAlert}</Alert>}\n                    <Box sx={{ pt: 3 }}>\n                        <DataTable rows={props?.appointments} />\n                    </Box>\n                </Container>\n            </Box>\n            <Dialog open={!!activeUser} onClose={handleClose} fullWidth>\n                <form className=\"\" noValidate onSubmit={handleSubmitActiveUser}>\n                    <DialogTitle>{activeUser?.user?.firstName}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>Notes</DialogContentText>\n                        <Box sx={{ my: 2 }}>\n                            <TextareaAutosize\n                                id=\"datetime-local\"\n                                name=\"notes\"\n                                minRows={10}\n                                defaultValue={activeUser?.notes}\n                                className=\"full-width\"\n                            />\n                        </Box>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleClose}>Cancel</Button>\n                        <Button type=\"submit\">Save Details</Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n            <Dialog open={open} onClose={handleClose}>\n                <form className=\"\" noValidate onSubmit={handleSubmit}>\n                    <DialogTitle>Provide Medical Assistance</DialogTitle>\n                    <DialogContent>\n                        <FormControlLabel\n                            control={\n                                <Switch\n                                    defaultChecked={available}\n                                    onChange={handleToggleAvailability}\n                                    name=\"available\"\n                                    value=\"true\"\n                                />\n                            }\n                            label=\"Available\"\n                        />\n                        {available && (\n                            <>\n                                <DialogContentText>Set up your availability</DialogContentText>\n                                <Box sx={{ my: 2 }}>\n                                    <TextField\n                                        id=\"datetime-local\"\n                                        name=\"availability\"\n                                        label=\"To\"\n                                        type=\"datetime-local\"\n                                        defaultValue={\n                                            (props?.doctor?.availability &&\n                                                formatDate(props?.doctor?.availability)) ||\n                                            '2017-06-04T10:30'\n                                        }\n                                        className=\"mb-2\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    />\n                                </Box>\n                            </>\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleClose}>Cancel</Button>\n                        <Button type=\"submit\">Save Details</Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        </>\n    );\n};\n\nconst mapStateToProps = ({ userProfileReducer }) => ({\n    ...userProfileReducer,\n});\n\nconst mapDispatchToProps = { setGetHelp, getProfileData };\n\nconst ConnectedDoctorSchedule = connect(mapStateToProps, mapDispatchToProps)(DoctorSchedule);\nexport default ConnectedDoctorSchedule;\n","import * as React from 'react';\nimport {\n    Alert,\n    Box,\n    Button,\n    Container,\n    Stepper,\n    Step,\n    StepLabel,\n    Typography,\n    TextField,\n    MenuItem,\n    Select,\n    Avatar,\n    CardHeader,\n    CardContent,\n    Card,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n} from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { createAppointment, getAvailableDoctors, setGetHelp, getProfileData } from 'store/actions';\nimport { getDate, formatDate, prettyDate } from 'utils/json';\nconst steps = ['Select time', 'Select Doctor', 'Notes', 'Overview'];\nexport const LookForMedicalAssistance = (props) => {\n    const [open, setOpen] = React.useState(false);\n    const [activeStep, setActiveStep] = React.useState(0);\n    const [selectedTime, setSelectedTime] = React.useState(getDate(1) + 'T10:30');\n    const [doctors, setDoctors] = React.useState([]);\n    const [selectedDoctor, setSelectedDoctor] = React.useState(null);\n    const [successAlert, setSuccessAlert] = React.useState('');\n    const [alert, setAlert] = React.useState('');\n    const notesInput = React.useRef();\n    const [notes, setNotes] = React.useState('');\n    const [skipped, setSkipped] = React.useState(new Set());\n    const hasDuplicateAppointment = (props?.appointments || []).find(\n        (x) =>\n            selectedTime === x?.time ||\n            selectedTime === formatDate(x?.time) ||\n            x?.time?.indexOf(selectedTime) > 0\n    );\n    const handleClickOpen = () => {\n        setActiveStep(0);\n        setAlert('');\n        setOpen(true);\n    };\n    const handleClose = () => {\n        setNotes('');\n        setSelectedDoctor('');\n        setActiveStep(0);\n        setAlert('');\n        setOpen(false);\n    };\n    const setSuccessAlertWithTimer = (msg) => {\n        setSuccessAlert(msg);\n        setAlert('');\n        setTimeout(() => {\n            setSuccessAlert('');\n        }, 6000);\n    };\n    React.useEffect(() => {\n        props?.id && props.getProfileData({ id: props?.id });\n        setTime();\n    }, []);\n    const isStepOptional = (step) => {\n        return step === 2;\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n    const saveNotes = () => {\n        // @ts-ignore\n        const notesValue = notesInput?.current?.value;\n        if (notesValue && notesValue !== notes) {\n            setNotes(notesValue);\n        }\n    };\n    const handleNext = () => {\n        const last = activeStep === steps.length - 1;\n        const setDoctorStep = activeStep === 1;\n        let newSkipped = skipped;\n        if (isStepSkipped(activeStep)) {\n            newSkipped = new Set(newSkipped.values());\n            newSkipped.delete(activeStep);\n        }\n        if (last) {\n            const data = {\n                userId: props?.id,\n                time: selectedTime,\n                doctorId: selectedDoctor?._id,\n                notes,\n                status: false,\n                appointmentDetails: 'Appointment',\n            };\n            if (data.userId && data.time && data.doctorId) {\n                createAppointment(data)\n                    .then((r) => {\n                        handleClose();\n                        setSuccessAlertWithTimer('Appointment Set');\n                        props?.id && props.getProfileData({ id: props?.id });\n                    })\n                    .catch((e) => setAlert('something went wrong'));\n            } else {\n                setAlert('missing data');\n            }\n            setAlert('');\n        } else {\n            if (activeStep === 0 && hasDuplicateAppointment) {\n                setAlert('Conflict with another appointment');\n                return;\n            }\n            if (setDoctorStep && !selectedDoctor) {\n                setAlert('Please select a different Time');\n                return;\n            }\n            setActiveStep((prevActiveStep) => prevActiveStep + 1);\n            setSkipped(newSkipped);\n            saveNotes();\n            setAlert('');\n        }\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n    const setTime = (time = '') => {\n        time && setSelectedTime(time);\n        getAvailableDoctors({ availability: time ? time : selectedTime })\n            .then((response) => setDoctors(response.data))\n            .catch(console.log);\n    };\n    const handleSkip = () => {\n        if (!isStepOptional(activeStep)) {\n            // You probably want to guard against something like this,\n            // it should never occur unless someone's actively trying to break something.\n            throw new Error(\"You can't skip a step that isn't optional.\");\n        }\n\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        setSkipped((prevSkipped) => {\n            const newSkipped = new Set(prevSkipped.values());\n            newSkipped.add(activeStep);\n            return newSkipped;\n        });\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n    const StepContainer = ({ step }: any) => {\n        switch (step) {\n            case 0: {\n                return (\n                    <TextField\n                        id=\"datetime-local\"\n                        label=\"Time\"\n                        type=\"datetime-local\"\n                        defaultValue={selectedTime}\n                        className=\"mb-2\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        onChange={({ currentTarget }) => {\n                            setTime(currentTarget?.value);\n                        }}\n                    />\n                );\n            }\n            case 1: {\n                if (doctors.length) {\n                    return (\n                        <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            value={selectedDoctor?._id || '-1'}\n                            label=\"Doctors\"\n                            onChange={({ target }) => {\n                                setSelectedDoctor(\n                                    doctors.find((x) => x?._id === target?.value) || null\n                                );\n                            }}\n                        >\n                            <MenuItem disabled value=\"-1\">\n                                <em>Select Doctor</em>\n                            </MenuItem>\n                            {doctors.map((doctor, id) => (\n                                <MenuItem key={id} value={doctor?._id}>\n                                    {doctor?.firstName}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    );\n                }\n                return (\n                    <Typography sx={{ mt: 2, mb: 1 }}>\n                        No Doctors Available Please Select a new time\n                    </Typography>\n                );\n            }\n            case 2: {\n                const props = {\n                    ref: notesInput,\n                    id: 'datetime-local',\n                    rows: 10,\n                    defaultValue: notes,\n                    className: 'full-width',\n                };\n                // @ts-ignore\n                return <textarea {...props} />;\n            }\n            case 3: {\n                const date = new Date(selectedTime).toLocaleDateString();\n                const day = new Date(selectedTime).toLocaleTimeString();\n                const formattedDate = `${date}  ${day}`;\n                return (\n                    <Card sx={{ maxWidth: 345 }}>\n                        <CardHeader\n                            avatar={<Avatar src=\"\" aria-label=\"\" />}\n                            title={selectedDoctor?.firstName}\n                            subheader={prettyDate(selectedTime)}\n                        />\n                        <CardContent>\n                            <Typography variant=\"body2\" color=\"text.secondary\">\n                                {notes || 'appointment'}\n                            </Typography>\n                        </CardContent>\n                    </Card>\n                );\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n    const DataTable = ({ rows }) => {\n        const columns = [\n            {\n                field: 'time',\n                headerName: 'Time',\n                flex: 1,\n                valueGetter: (params) => prettyDate(params?.value),\n            },\n            {\n                field: 'fullName',\n                headerName: 'Full name',\n                description: 'This column has a value getter and is not sortable.',\n                sortable: false,\n                flex: 1,\n                valueGetter: (params) => {\n                    const user = params.getValue(params?.id, 'doctor');\n                    return `${user?.firstName || ''} ${user?.lastName || ''}`;\n                },\n            },\n            {\n                field: 'state',\n                headerName: 'State',\n                flex: 1,\n                valueGetter: (params) => params.getValue(params?.id, 'doctor')?.address?.state,\n            },\n            {\n                field: 'gender',\n                headerName: 'Gender',\n                flex: 1,\n                valueGetter: (params) =>\n                    params.getValue(params?.id, 'doctor')?.userMetaData?.gender,\n            },\n            {\n                field: 'notes',\n                headerName: 'notes',\n                flex: 1,\n            },\n        ];\n        if (rows) {\n            return (\n                <div style={{ height: '100vh', width: '100%' }}>\n                    {!rows.length ? (\n                        <Typography sx={{ mt: 2, mb: 1 }}>No Appointments</Typography>\n                    ) : (\n                        <>\n                            <Typography sx={{ mt: 2, mb: 1 }}>Appointments</Typography>\n                            <DataGrid\n                                rows={rows}\n                                columns={columns}\n                                pageSize={15}\n                                disableSelectionOnClick\n                            />\n                        </>\n                    )}\n                </div>\n            );\n        }\n        return <Typography sx={{ mt: 2, mb: 1 }}>Loading</Typography>;\n    };\n    return (\n        <Box\n            sx={{\n                backgroundColor: 'background.default',\n                minHeight: '100vh',\n                py: 3,\n            }}\n        >\n            <Container maxWidth={false}>\n                <Box\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'flex-end',\n                    }}\n                >\n                    <Button color=\"primary\" variant=\"contained\" onClick={handleClickOpen}>\n                        Make Appointment\n                    </Button>\n                </Box>\n                {successAlert && <Alert severity=\"success\">{successAlert}</Alert>}\n                <Dialog open={open} onClose={handleClose} fullWidth>\n                    <DialogTitle>Make an Appointment</DialogTitle>\n                    <DialogContent>\n                        {alert && <Alert severity=\"error\">{alert}</Alert>}\n                        <Box sx={{ width: '100%' }}>\n                            <Stepper activeStep={activeStep}>\n                                {steps.map((label, index) => {\n                                    const stepProps = {};\n                                    const labelProps = {};\n                                    if (isStepOptional(index)) {\n                                        labelProps.optional = (\n                                            <Typography variant=\"caption\">Optional</Typography>\n                                        );\n                                    }\n                                    if (isStepSkipped(index)) {\n                                        stepProps.completed = false;\n                                    }\n                                    return (\n                                        <Step key={label} {...stepProps}>\n                                            <StepLabel {...labelProps}>{label}</StepLabel>\n                                        </Step>\n                                    );\n                                })}\n                            </Stepper>\n                            {activeStep === steps.length ? (\n                                <React.Fragment>\n                                    <Typography sx={{ mt: 2, mb: 1 }}>\n                                        All steps completed - you&apos;re finished\n                                    </Typography>\n                                    <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\n                                        <Box sx={{ flex: '1 1 auto' }} />\n                                        <Button onClick={handleReset}>Reset</Button>\n                                    </Box>\n                                </React.Fragment>\n                            ) : (\n                                <React.Fragment>\n                                    <Box sx={{ my: 2, minHeight: '170px' }}>\n                                        <StepContainer step={activeStep} />\n                                    </Box>\n                                    <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\n                                        <Button\n                                            color=\"inherit\"\n                                            disabled={activeStep === 0}\n                                            onClick={handleBack}\n                                            sx={{ mr: 1 }}\n                                        >\n                                            Back\n                                        </Button>\n                                        <Box sx={{ flex: '1 1 auto' }} />\n                                        {isStepOptional(activeStep) && (\n                                            <Button\n                                                color=\"inherit\"\n                                                onClick={handleSkip}\n                                                sx={{ mr: 1 }}\n                                            >\n                                                Skip\n                                            </Button>\n                                        )}\n\n                                        <Button onClick={handleNext} color=\"primary\">\n                                            {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                        </Button>\n                                    </Box>\n                                </React.Fragment>\n                            )}\n                        </Box>\n                    </DialogContent>\n                </Dialog>\n                <Box sx={{ width: '100%' }}>\n                    <DataTable rows={props?.appointments} />\n                </Box>\n            </Container>\n        </Box>\n    );\n};\n\nconst mapStateToProps = ({ userProfileReducer }) => ({\n    ...userProfileReducer,\n});\n\nconst mapDispatchToProps = { setGetHelp, getProfileData, createAppointment };\n\nconst ConnectedLookForMedicalAssistance = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(LookForMedicalAssistance);\nexport default ConnectedLookForMedicalAssistance;\n","import * as React from 'react';\nimport {\n    Alert,\n    Box,\n    Button,\n    Card,\n    CardContent,\n    CardHeader,\n    Checkbox,\n    Divider,\n    FormControlLabel,\n    Grid,\n} from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { profileUpdate, updateUserProfile } from 'store/actions';\nimport { objectWithBoolean } from 'utils/json';\nconst SettingsProfileStatus = ({ profile, id, ...rest }) => {\n    const [successAlert, setSuccessAlert] = React.useState('');\n    const setSuccessAlertWithTimer = (msg) => {\n        setSuccessAlert(msg);\n        setTimeout(() => {\n            setSuccessAlert('');\n        }, 6000);\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const formData = new FormData(e.target);\n        const data = Object.fromEntries(formData);\n        const formProps = objectWithBoolean({\n            ...profile,\n            ...data,\n        });\n        console.log('settings', data?.profileActive, {\n            ...formProps,\n            profileActive: formProps?.profileActive !== 'off',\n        });\n        profileUpdate({\n            id,\n            profile: { ...formProps, profileActive: formProps?.profileActive !== 'off' },\n        })\n            .then(({ data }) => {\n                rest?.updateUserProfile(data);\n                console.log(data);\n                setSuccessAlertWithTimer('Saved');\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    return (\n        <form onSubmit={handleSubmit} className=\"mb-2\">\n            {successAlert && <Alert severity=\"success\">{successAlert}</Alert>}\n\n            <Card\n                sx={{\n                    mb: 2,\n                }}\n            >\n                <CardHeader subheader=\"Deactivate Profile\" title=\"Profile Status\" />\n                <Divider />\n                <CardContent>\n                    <Grid container spacing={6} wrap=\"wrap\">\n                        <Grid\n                            item\n                            md={12}\n                            sm={6}\n                            sx={{\n                                display: 'flex',\n                                flexDirection: 'column',\n                            }}\n                            xs={12}\n                        >\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color=\"primary\"\n                                        name=\"profileActive\"\n                                        value=\"off\"\n                                        defaultChecked={!profile?.profileActive}\n                                    />\n                                }\n                                label=\"Deactivate your profile\"\n                            />\n                        </Grid>\n                    </Grid>\n                </CardContent>\n                <Divider />\n                <Box\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'flex-end',\n                        p: 2,\n                    }}\n                >\n                    <Button color=\"primary\" variant=\"contained\" type=\"submit\">\n                        Update\n                    </Button>\n                </Box>\n            </Card>\n        </form>\n    );\n};\n\nconst mapStateToProps = ({ userProfileReducer }) => ({\n    ...userProfileReducer,\n});\n\nconst mapDispatchToProps = { updateUserProfile };\n\nconst ConnectedSettingsProfileStatus = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(SettingsProfileStatus);\nexport default ConnectedSettingsProfileStatus;\n","import * as React from 'react';\nimport { useState } from 'react';\nimport { Box, Button, Card, CardContent, CardHeader, Divider, TextField } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { profileUpdate } from 'store/actions';\n\nconst SettingsPassword = ({ userMetaData }) => {\n    const [values, setValues] = useState({\n        oldpassword: '',\n        password: '',\n        confirm: '',\n    });\n\n    const handleChange = ({ target }) => {\n        target &&\n            setValues({\n                ...values,\n                [target.name]: target.value,\n            });\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(values);\n        profileUpdate({})\n            .then((data) => {\n                console.log(data);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    return (\n        <form onSubmit={handleSubmit} className=\"mb-2\">\n            <Card\n                sx={{\n                    mb: 2,\n                }}\n            >\n                <CardHeader title=\"Change Password\" />\n                <Divider />\n                <CardContent>\n                    <TextField\n                        fullWidth\n                        label=\"Old Password\"\n                        margin=\"normal\"\n                        name=\"oldpassword\"\n                        onChange={handleChange}\n                        type=\"password\"\n                        value={values.oldpassword}\n                        variant=\"outlined\"\n                    />\n                    <TextField\n                        fullWidth\n                        label=\"New Password\"\n                        margin=\"normal\"\n                        name=\"password\"\n                        onChange={handleChange}\n                        type=\"password\"\n                        value={values.password}\n                        variant=\"outlined\"\n                    />\n                    <TextField\n                        fullWidth\n                        label=\"Confirm New password\"\n                        margin=\"normal\"\n                        name=\"confirm\"\n                        onChange={handleChange}\n                        type=\"password\"\n                        value={values.confirm}\n                        variant=\"outlined\"\n                    />\n                </CardContent>\n                <Divider />\n                <Box\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'flex-end',\n                        p: 2,\n                    }}\n                >\n                    <Button color=\"primary\" variant=\"contained\" type=\"submit\">\n                        Update\n                    </Button>\n                </Box>\n            </Card>\n        </form>\n    );\n};\n\nconst mapStateToProps = ({ userProfileReducer }) => ({\n    ...userProfileReducer,\n});\nconst mapDispatchToProps = {};\nconst ConnectedSettingsPassword = connect(mapStateToProps, mapDispatchToProps)(SettingsPassword);\nexport default ConnectedSettingsPassword;\n","import * as React from 'react';\nimport {\n    Alert,\n    Box,\n    Button,\n    Card,\n    CardContent,\n    CardHeader,\n    Checkbox,\n    Divider,\n    FormControlLabel,\n    Grid,\n    Typography,\n} from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { profileUpdate, updateUserProfile } from 'store/actions';\nimport { objectWithBoolean } from 'utils/json';\n\nconst SettingsDoctor = ({ profile, userMetaData, id, ...rest }) => {\n    const [successAlert, setSuccessAlert] = React.useState('');\n    const setSuccessAlertWithTimer = (msg) => {\n        setSuccessAlert(msg);\n        setTimeout(() => {\n            setSuccessAlert('');\n        }, 6000);\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const formData = new FormData(e.target);\n        const formProps = objectWithBoolean({\n            emailNotifications: false,\n            appNotifications: false,\n            phoneCalls: false,\n            ...Object.fromEntries(formData),\n        });\n        profileUpdate({ id, userMetaData: { ...userMetaData, ...formProps } })\n            .then((data) => {\n                rest?.updateUserProfile(data);\n                setSuccessAlertWithTimer('Saved');\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    return (\n        <form onSubmit={handleSubmit} className=\"mb-2\">\n            {successAlert && <Alert severity=\"success\">{successAlert}</Alert>}\n\n            <Card\n                sx={{\n                    mb: 2,\n                }}\n            >\n                <CardHeader subheader=\"Change your status\" title=\"Doctor Settings\" />\n                <Divider />\n                <CardContent>\n                    <Grid container spacing={6} wrap=\"wrap\">\n                        <Grid\n                            item\n                            md={4}\n                            sm={6}\n                            sx={{\n                                display: 'flex',\n                                flexDirection: 'column',\n                            }}\n                            xs={12}\n                        >\n                            <Typography color=\"textPrimary\" gutterBottom variant=\"h6\">\n                                Messages\n                            </Typography>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        name=\"emailNotifications\"\n                                        value={true}\n                                        defaultChecked={userMetaData?.emailNotifications}\n                                    />\n                                }\n                                label=\"Email\"\n                            />\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        name=\"appNotifications\"\n                                        value={true}\n                                        defaultChecked={userMetaData?.appNotifications}\n                                    />\n                                }\n                                label=\"Push Notifications\"\n                            />\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        name=\"phoneCalls\"\n                                        value={true}\n                                        defaultChecked={userMetaData?.phoneCalls}\n                                    />\n                                }\n                                label=\"Phone calls\"\n                            />\n                        </Grid>\n                    </Grid>\n                </CardContent>\n                <Divider />\n                <Box\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'flex-end',\n                        p: 2,\n                    }}\n                >\n                    <Button color=\"primary\" variant=\"contained\" type=\"submit\">\n                        Update\n                    </Button>\n                </Box>\n            </Card>\n        </form>\n    );\n};\nconst mapStateToProps = ({ userProfileReducer }) => ({\n    ...userProfileReducer,\n});\n\nconst mapDispatchToProps = { updateUserProfile };\n\nconst ConnectedSettingsDoctor = connect(mapStateToProps, mapDispatchToProps)(SettingsDoctor);\nexport default ConnectedSettingsDoctor;\n","import * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { connect } from 'react-redux';\nimport { Box, Container } from '@material-ui/core';\nimport SettingsProfileStatus from '../../components/settings/SettingsProfileStatus';\nimport SettingsPassword from '../../components/settings/SettingsPassword';\nimport SettingsDoctor from '../../components/settings/SettingsDoctor';\n\nconst SettingsView = (props) => (\n    <>\n        <Helmet>\n            <title>Settings</title>\n        </Helmet>\n        <Box\n            sx={{\n                backgroundColor: 'background.default',\n                minHeight: '100%',\n                py: 3,\n            }}\n        >\n            <Container maxWidth=\"lg\">\n                {null && <SettingsPassword />}\n                {props.isDoctor && <SettingsDoctor {...props} />}\n                <SettingsProfileStatus />\n            </Container>\n        </Box>\n    </>\n);\n\nconst mapStateToProps = ({ userProfileReducer }) => ({\n    ...userProfileReducer?.userMetaData,\n});\n\nconst mapDispatchToProps = {};\n\nconst ConnectedSettingsView = connect(mapStateToProps, mapDispatchToProps)(SettingsView);\nexport default ConnectedSettingsView;\n","import * as React from 'react';\nimport { SvgIcon } from '@material-ui/core';\n\nconst Google = (props) => (\n    <SvgIcon {...props}>\n        <path d=\"M21,12.2177419 C21,13.9112905 20.6311475,15.4233869 19.8934426,16.7540323 C19.1557377,18.0846776 18.1168031,19.1249998 16.7766393,19.875 C15.4364756,20.6250002 13.8934424,21 12.147541,21 C10.4999998,21 8.97540984,20.5947579 7.57377049,19.7842742 C6.17213115,18.9737905 5.05942604,17.8790323 4.23565574,16.5 C3.41188543,15.1209677 3,13.6209679 3,12 C3,10.3790321 3.41188543,8.87903226 4.23565574,7.5 C5.05942604,6.12096774 6.17213115,5.02620949 7.57377049,4.21572581 C8.97540984,3.40524212 10.4999998,3 12.147541,3 C14.5327871,3 16.5737705,3.78629051 18.2704918,5.35887097 L15.7991803,7.71774194 C15.0122953,6.96774175 14.0655738,6.52016129 12.9590164,6.375 C11.9262295,6.22983871 10.9057375,6.375 9.89754098,6.81048387 C8.88934445,7.24596774 8.07786904,7.89919355 7.46311475,8.77016129 C6.79918033,9.71370968 6.46721311,10.7903228 6.46721311,12 C6.46721311,13.0403228 6.72540984,13.9899192 7.24180328,14.8487903 C7.75819672,15.7076615 8.4467215,16.3971776 9.30737705,16.9173387 C10.1680326,17.4374998 11.1147541,17.6975806 12.147541,17.6975806 C13.2540984,17.6975806 14.2254096,17.455645 15.0614754,16.9717742 C15.7254098,16.5846772 16.2786885,16.0645161 16.7213115,15.4112903 C17.0409838,14.8790321 17.2499998,14.3467744 17.3483607,13.8145161 L12.147541,13.8145161 L12.147541,10.6935484 L20.852459,10.6935484 C20.9508199,11.2258066 21,11.7338712 21,12.2177419 Z\" />\n    </SvgIcon>\n);\n\nexport default Google;\n","import * as React from 'react';\nimport { useState, useRef, useEffect } from 'react';\n\nconst useMounted = () => {\n    const mounted = useRef(false);\n\n    useEffect(() => {\n        mounted.current = true;\n        return () => {\n            mounted.current = false;\n        };\n    });\n\n    return mounted;\n};\n\nexport default useMounted;\n","import * as React from 'react';\nimport { useState, useRef, useEffect } from 'react';\nimport { Link as RouterLink, useHistory, useLocation } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport * as Yup from 'yup';\nimport { getStorage, ref, uploadBytes, getDownloadURL, deleteObject } from 'firebase/storage';\nimport { Formik } from 'formik';\nimport {\n    Box,\n    Button,\n    Container,\n    Grid,\n    Link,\n    TextField,\n    Typography,\n    Alert,\n} from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport { useAuth } from 'contexts/AuthContext';\nimport { loginApi, updateApiToken } from 'store/actions';\nimport GoogleIcon from '../../icons/Google';\nimport useMounted from '../hooks/useMounted';\nimport { loginAction, createUserProfile, saveUserName } from '../../store/constants/action-types';\n\nconst Login = () => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const [alert, setAlert] = useState(false);\n    const [error, setError] = useState('');\n    const { login, signinWithGoogle } = useAuth();\n    const mounted = useMounted();\n    const handleSubmit = (email, token) => {\n        dispatch({ type: loginAction, email });\n        localStorage.setItem('token', token);\n        apiCall(email, token);\n    };\n\n    // useEffect(() => {\n    //     session();\n    // }, [1]);\n\n    const handleSubmitWithGoogle = (email, token) => {\n        dispatch({ type: loginAction, email });\n        localStorage.setItem('token', token);\n        apiCall(email, token);\n    };\n\n    const apiCall = (email, token) => {\n        const storage = getStorage();\n        const storageRef = ref(storage, `/${email}/profilePic/userPic`);\n\n        const payload = {\n            userName: email,\n        };\n        // make a post request with the user data\n        loginApi(payload).then(\n            (response) => {\n                console.log('axios call', response);\n                if (response.data.status === 401) {\n                    //redirect to register page\n                    history.push('/login2register', { replace: true });\n                } else if (response.status === 200) {\n                    const user = response?.data?.user || response?.data;\n                    console.log('login successful', user);\n                    dispatch({\n                        type: saveUserName,\n                        ...user,\n                    });\n                    dispatch({\n                        type: createUserProfile,\n                        id: user._id,\n                        ...user,\n                        payload: response?.data,\n                    });\n                    history.push('app/dashboard', { replace: true });\n                }\n            },\n            (error) => {\n                console.log('login error', error);\n            }\n        );\n    };\n    return (\n        <>\n            <Helmet>\n                <title>WeCare - Login</title>\n            </Helmet>\n\n            <Box\n                sx={{\n                    backgroundColor: '#ffffff',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    height: '100%',\n                    justifyContent: 'center',\n                }}\n            >\n                <Container maxWidth=\"sm\" style={{ marginTop: '70px' }}>\n                    <div style={{ marginTop: '50px', marginBottom: '50px' }}>\n                        {alert ? <Alert severity=\"error\">{error}</Alert> : <></>}\n                    </div>\n                    <Formik\n                        initialValues={{\n                            email: '',\n                            password: '',\n                            isSubmitting: false,\n                        }}\n                        validationSchema={Yup.object().shape({\n                            email: Yup.string()\n                                .email('Must be a valid email')\n                                .max(255)\n                                .required('Email is required'),\n                            password: Yup.string().max(255).required('Password is required'),\n                        })}\n                        onSubmit={(values) => {\n                            console.log(values);\n                            values.isSubmitting = true;\n                            setAlert(false);\n                            login(values.email, values.password)\n                                .then((response: any) => {\n                                    console.log(response.user);\n                                    handleSubmit(values.email, response.user.accessToken);\n                                })\n                                .catch((error) => {\n                                    //console.log(error.message);\n                                    setAlert(true);\n                                    values.isSubmitting = false;\n                                    switch (error.code) {\n                                        case 'auth/wrong-password': {\n                                            setError('Invalid password');\n                                            break;\n                                        }\n                                        case 'auth/user-not-found': {\n                                            setError('Username does not exists');\n                                            break;\n                                        }\n                                    }\n                                    // setError(error.message);\n                                })\n                                .finally(() => {\n                                    mounted.current && (values.isSubmitting = false);\n                                });\n                            // history.push('/app/dashboard', { replace: true });\n                        }}\n                    >\n                        {({\n                            errors,\n                            handleBlur,\n                            handleChange,\n                            handleSubmit,\n                            isSubmitting,\n                            touched,\n                            values,\n                        }) => (\n                            <form onSubmit={handleSubmit}>\n                                <Box\n                                    sx={{ mb: 3 }}\n                                    display=\"flex\"\n                                    flexDirection=\"column\"\n                                    alignItems=\"center\"\n                                    justifyContent=\"center\"\n                                >\n                                    <Typography color=\"textPrimary\" variant=\"h2\">\n                                        Sign in\n                                    </Typography>\n                                    <Typography\n                                        color=\"textSecondary\"\n                                        gutterBottom\n                                        variant=\"body2\"\n                                        style={{ marginTop: '5px' }}\n                                    >\n                                        Sign in on the WeCare platform using Social\n                                    </Typography>\n                                </Box>\n                                {/* <Grid\n                                    container\n                                    spacing={3}\n                                    display=\"flex\"\n                                    flexDirection=\"column\"\n                                    alignItems=\"center\"\n                                    justifyContent=\"center\"\n                                > */}\n                                {/* <Grid item xs={12} md={6}> */}\n                                <Box>\n                                    <Button\n                                        fullWidth\n                                        startIcon={<GoogleIcon />}\n                                        onClick={() =>\n                                            signinWithGoogle()\n                                                .then((user: any) => {\n                                                    console.log(user.user);\n                                                    handleSubmitWithGoogle(\n                                                        user.user.email,\n                                                        user.user.accessToken\n                                                    );\n                                                    // history.push(location.state?.from ?? '/app/dashboard', { replace: true });\n                                                })\n                                                .catch((error) => {\n                                                    console.log(error);\n                                                })\n                                        }\n                                        size=\"large\"\n                                        variant=\"contained\"\n                                    >\n                                        Login with Google\n                                    </Button>\n                                </Box>\n                                {/* </Grid>\n                                </Grid> */}\n                                <Box\n                                    sx={{\n                                        pb: 1,\n                                        pt: 3,\n                                    }}\n                                >\n                                    <Typography\n                                        align=\"center\"\n                                        color=\"textSecondary\"\n                                        variant=\"body1\"\n                                    >\n                                        or login with email address\n                                    </Typography>\n                                </Box>\n                                <TextField\n                                    error={Boolean(touched.email && errors.email)}\n                                    fullWidth\n                                    helperText={touched.email && errors.email}\n                                    label=\"Email Address\"\n                                    margin=\"normal\"\n                                    name=\"email\"\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    type=\"email\"\n                                    value={values.email}\n                                    variant=\"outlined\"\n                                />\n                                <TextField\n                                    error={Boolean(touched.password && errors.password)}\n                                    fullWidth\n                                    helperText={touched.password && errors.password}\n                                    label=\"Password\"\n                                    margin=\"normal\"\n                                    name=\"password\"\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    type=\"password\"\n                                    value={values.password}\n                                    variant=\"outlined\"\n                                />\n                                <Box sx={{ py: 2 }}>\n                                    <Button\n                                        color=\"primary\"\n                                        disabled={values.isSubmitting}\n                                        fullWidth\n                                        size=\"large\"\n                                        type=\"submit\"\n                                        variant=\"contained\"\n                                    >\n                                        Sign in now\n                                    </Button>\n                                </Box>\n                                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                                    <Typography color=\"textSecondary\" variant=\"body1\">\n                                        <Link\n                                            component={RouterLink}\n                                            to=\"/forgot-password\"\n                                            variant=\"h6\"\n                                            underline=\"hover\"\n                                        >\n                                            Forgot Password?\n                                        </Link>\n                                    </Typography>\n                                    <Typography color=\"textSecondary\" variant=\"body1\">\n                                        Don&apos;t have an account?{' '}\n                                        <Link\n                                            component={RouterLink}\n                                            to=\"/register1\"\n                                            variant=\"h6\"\n                                            underline=\"hover\"\n                                        >\n                                            Sign up\n                                        </Link>\n                                    </Typography>\n                                </div>\n                            </form>\n                        )}\n                    </Formik>\n                </Container>\n            </Box>\n        </>\n    );\n};\n\nexport default Login;\n","import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport axios from 'axios';\nimport serverUrl from '../../utils/config';\nimport countries from 'i18n-iso-countries';\nimport { connect } from 'react-redux';\n// import './Register.css';\nimport {\n    Box,\n    Button,\n    Checkbox,\n    Container,\n    FormHelperText,\n    Link,\n    TextField,\n    Typography,\n    Grid,\n    FormControlLabel,\n    FormControl,\n    InputLabel,\n    MenuItem,\n    Select,\n} from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createUserProfile, saveUserName } from '../../store/constants/action-types';\n// import {storage} from '../../utils/firebase';\nimport { getStorage, ref, uploadBytes } from 'firebase/storage';\n// import RootState from '../../store/rootReducer';\n\nconst RegisterThruLogin = ({ userProfileReducer }) => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    countries.registerLocale(require('i18n-iso-countries/langs/en.json'));\n    const countryObj = countries.getNames('en', { select: 'official' });\n    const countryArray = Object.entries(countryObj).map(([key, value]) => {\n        return {\n            label: key,\n            value: value,\n        };\n    });\n    const [user, setUser] = React.useState(userProfileReducer.email);\n    const genderOptions = [\n        {\n            key: 1,\n            value: 'Female',\n        },\n        {\n            key: 2,\n            value: 'Male',\n        },\n        {\n            key: 3,\n            value: 'Do not want to specify',\n        },\n    ];\n    var [checked, setChecked] = React.useState(false);\n    const handleSubmit = (values) => {\n        console.log('inside submit');\n        console.log('first page data', user);\n        const isDoctor = checked;\n        const payload = {\n            userName: user,\n            firstName: values.firstName,\n            lastName: values.lastName,\n            userMetaData: {\n                isDoctor: checked,\n                gender: values.gender,\n                appNotifications: true,\n                emailNotifications: true,\n                phoneCalls: true,\n            },\n            profile: {\n                phoneNumber: values.phonenumber,\n                profileActive: true,\n                profilePic: '',\n            },\n            address: {\n                location: values.address1,\n                city: values.city,\n                state: values.state,\n                country: values.country,\n                zipCode: values.zipcode,\n            },\n        };\n        console.log('payload', payload);\n        const token = localStorage.getItem('token');\n        // set the with credentials to true\n        axios.defaults.withCredentials = true;\n        // make a post request with the user data\n        axios\n            .post(serverUrl + 'signup/user', payload, {\n                headers: {\n                    authtoken: token,\n                },\n            })\n            .then(\n                (response) => {\n                    console.log('axios call', response);\n                    if (response.status === 200) {\n                        console.log('updated successfully');\n                        dispatch({\n                            type: saveUserName,\n                            firstName: response.data.data.firstName,\n                            lastName: response.data.data.lastName,\n                            userName: response.data.data.userName,\n                        });\n                        dispatch({\n                            type: createUserProfile,\n                            id: response.data.data._id,\n                            userMetaData: response.data.data.userMetaData,\n                            profile: response.data.data.profile,\n                            address: response.data.data.address,\n                        });\n                        history.push('app/dashboard', { replace: true });\n                    }\n                },\n                (error) => {\n                    console.log('register error');\n                    //   this.setState({\n                    //     errorMessage: error.response.data,\n                    //     signupFailed: true,\n                    //   });\n                }\n            );\n    };\n\n    return (\n        <>\n            <Helmet>\n                <title>WeCare - Register</title>\n            </Helmet>\n            <Box\n                sx={{\n                    backgroundColor: '#ffffff',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    height: '100%',\n                    justifyContent: 'center',\n                }}\n            >\n                <Container maxWidth=\"sm\" style={{ marginTop: '100px' }}>\n                    <Formik\n                        initialValues={{\n                            firstName: '',\n                            lastName: '',\n                            address1: '',\n                            city: '',\n                            state: '',\n                            zipcode: '',\n                            phonenumber: '',\n                            gender: '',\n                            country: '',\n                            isSubmitting: false,\n                        }}\n                        validationSchema={Yup.object().shape({\n                            firstName: Yup.string().max(255).required('First Name is required'),\n                            lastName: Yup.string().max(255).required('Last Name is required'),\n                            address1: Yup.string().max(255).required('Address is required'),\n                            city: Yup.string().max(255).required('City is required'),\n                            country: Yup.string().max(255).required('Country is required'),\n                            state: Yup.string().max(255).required('State is required'),\n                            zipcode: Yup.string()\n                                .required('ZipCode is required')\n                                .matches(/^[0-9]+$/, 'Must be a number')\n                                .min(5, 'Must be exactly 5 digits')\n                                .max(5, 'Must be exactly 5 digits'),\n                            gender: Yup.string().max(255),\n                            phonenumber: Yup.string()\n                                .required('Phone Number is required')\n                                .matches(/^[0-9]+$/, 'Must be a number')\n                                .min(10, 'Must be exactly 10 digits')\n                                .max(10, 'Must be exactly 10 digits'),\n                        })}\n                        onSubmit={(values) => {\n                            console.log('insde submit', values);\n                            values.isSubmitting = true;\n                            handleSubmit(values);\n                        }}\n                    >\n                        {({\n                            errors,\n                            handleBlur,\n                            handleChange,\n                            handleSubmit,\n                            isSubmitting,\n                            touched,\n                            values,\n                        }) => (\n                            <form onSubmit={handleSubmit}>\n                                <Box\n                                    sx={{ mb: 3 }}\n                                    display=\"flex\"\n                                    flexDirection=\"column\"\n                                    alignItems=\"center\"\n                                    justifyContent=\"center\"\n                                >\n                                    <Typography color=\"textPrimary\" variant=\"h2\">\n                                        New User! Complete the Registration\n                                    </Typography>\n                                </Box>\n                                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                                    <TextField\n                                        error={Boolean(touched.firstName && errors.firstName)}\n                                        helperText={touched.firstName && errors.firstName}\n                                        label=\"First Name\"\n                                        margin=\"normal\"\n                                        name=\"firstName\"\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        value={values.firstName}\n                                        variant=\"outlined\"\n                                        style={{\n                                            width: '250px',\n                                        }}\n                                    />\n                                    <TextField\n                                        error={Boolean(touched.lastName && errors.lastName)}\n                                        helperText={touched.lastName && errors.lastName}\n                                        label=\"Last Name\"\n                                        margin=\"normal\"\n                                        name=\"lastName\"\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        value={values.lastName}\n                                        variant=\"outlined\"\n                                        style={{\n                                            width: '250px',\n                                        }}\n                                    />\n                                </div>\n                                <div>\n                                    <FormControlLabel\n                                        label=\"I am a Doctor\"\n                                        control={\n                                            <Checkbox\n                                                checked={checked}\n                                                onChange={() => {\n                                                    setChecked(!checked);\n                                                }}\n                                            />\n                                        }\n                                    />\n                                </div>\n                                <div style={{ display: 'flex', justifyContent: 'flex-start' }}>\n                                    <div\n                                        style={{\n                                            width: '250px',\n                                        }}\n                                    >\n                                        <TextField\n                                            error={Boolean(touched.gender && errors.gender)}\n                                            helperText={touched.gender && errors.gender}\n                                            label=\"Gender\"\n                                            select\n                                            margin=\"normal\"\n                                            name=\"gender\"\n                                            onBlur={handleBlur}\n                                            onChange={handleChange('gender')}\n                                            value={values.gender}\n                                            variant=\"outlined\"\n                                            fullWidth\n                                        >\n                                            <MenuItem value=\"\">\n                                                <em>None</em>\n                                            </MenuItem>\n                                            {genderOptions.map((state) => (\n                                                <MenuItem key={state.key} value={state.value}>\n                                                    {state.value}\n                                                </MenuItem>\n                                            ))}\n                                        </TextField>\n                                    </div>\n                                </div>\n                                <div style={{ display: 'flex', justifyContent: 'flex-start' }}>\n                                    <TextField\n                                        error={Boolean(touched.phonenumber && errors.phonenumber)}\n                                        helperText={touched.phonenumber && errors.phonenumber}\n                                        label=\"Phone Number\"\n                                        margin=\"normal\"\n                                        name=\"phonenumber\"\n                                        style={{\n                                            width: '250px',\n                                            height: '60px',\n                                        }}\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        value={values.phonenumber}\n                                        variant=\"outlined\"\n                                    />\n                                </div>\n                                <div style={{ display: 'flex', justifyContent: 'flex-start' }}>\n                                    <TextField\n                                        error={Boolean(touched.address1 && errors.address1)}\n                                        helperText={touched.address1 && errors.address1}\n                                        label=\"Address\"\n                                        margin=\"normal\"\n                                        name=\"address1\"\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        value={values.address1}\n                                        variant=\"outlined\"\n                                        fullWidth\n                                    />\n                                </div>\n                                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                                    <TextField\n                                        error={Boolean(touched.city && errors.city)}\n                                        helperText={touched.city && errors.city}\n                                        label=\"City\"\n                                        margin=\"normal\"\n                                        name=\"city\"\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        value={values.city}\n                                        variant=\"outlined\"\n                                        style={{\n                                            width: '250px',\n                                        }}\n                                    />\n                                    <div style={{ width: '250px' }}>\n                                        <TextField\n                                            error={Boolean(touched.country && errors.country)}\n                                            helperText={touched.country && errors.country}\n                                            label=\"Country\"\n                                            select\n                                            margin=\"normal\"\n                                            name=\"country\"\n                                            onBlur={handleBlur}\n                                            onChange={handleChange('country')}\n                                            value={values.country}\n                                            variant=\"outlined\"\n                                            fullWidth\n                                        >\n                                            <MenuItem value=\"\">\n                                                <em>None</em>\n                                            </MenuItem>\n                                            {countryArray.map((state) => (\n                                                <MenuItem key={state.label} value={state.value}>\n                                                    {state.value}\n                                                </MenuItem>\n                                            ))}\n                                        </TextField>\n                                    </div>\n                                </div>\n                                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                                    <TextField\n                                        error={Boolean(touched.state && errors.state)}\n                                        helperText={touched.state && errors.state}\n                                        label=\"State\"\n                                        margin=\"normal\"\n                                        name=\"state\"\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        value={values.state}\n                                        variant=\"outlined\"\n                                        style={{\n                                            width: '250px',\n                                        }}\n                                    />\n                                    <TextField\n                                        error={Boolean(touched.zipcode && errors.zipcode)}\n                                        helperText={touched.zipcode && errors.zipcode}\n                                        label=\"Zipcode\"\n                                        margin=\"normal\"\n                                        name=\"zipcode\"\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        value={values.zipcode}\n                                        variant=\"outlined\"\n                                        style={{\n                                            width: '250px',\n                                        }}\n                                    />\n                                </div>\n                                <Box sx={{ py: 2, alignItems: 'center', display: 'flex', ml: 5 }}>\n                                    <Button\n                                        color=\"primary\"\n                                        disabled={values.isSubmitting}\n                                        size=\"large\"\n                                        type=\"submit\"\n                                        variant=\"contained\"\n                                        style={{ width: '475px' }}\n                                        // onClick={()=>handleSubmit}\n                                        // onClick={()=>{history.push('app/dashboard', { replace: true })}}\n                                    >\n                                        Create\n                                    </Button>\n                                </Box>\n                                <Typography\n                                    color=\"textSecondary\"\n                                    variant=\"body1\"\n                                    style={{ marginLeft: '40px' }}\n                                >\n                                    Have an account?{' '}\n                                    <Link\n                                        component={RouterLink}\n                                        to=\"/login\"\n                                        variant=\"h6\"\n                                        underline=\"hover\"\n                                    >\n                                        Sign in\n                                    </Link>\n                                </Typography>\n                            </form>\n                        )}\n                    </Formik>\n                </Container>\n            </Box>\n        </>\n    );\n};\nconst mapStateToProps = ({ userProfileReducer }) => ({\n    userProfileReducer,\n});\n\nconst mapDispatchToProps = {};\n\nconst ConnectedRegisterThruLoginDetails = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(RegisterThruLogin);\nexport default ConnectedRegisterThruLoginDetails;\n","import * as React from 'react';\nimport { useState, useRef, useEffect } from 'react';\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport axios from 'axios';\nimport serverUrl from '../../utils/config';\nimport { deleteUser } from 'firebase/auth';\nimport {\n    Box,\n    Button,\n    Checkbox,\n    Container,\n    FormHelperText,\n    Link,\n    TextField,\n    Typography,\n    Grid,\n    Snackbar,\n    Divider,\n    Alert,\n} from '@material-ui/core';\nimport GoogleIcon from '../../icons/Google';\nimport { useAuth } from '../../contexts/AuthContext';\nimport useMounted from '../hooks/useMounted';\nimport { useDispatch } from 'react-redux';\nimport { saveUserName } from '../../store/constants/action-types';\n\nconst RegisterFirstPage = () => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const [alert, setAlert] = useState(false);\n    const [error, setError] = useState('');\n    const [userExists, setUserExists] = useState(false);\n\n    const { login, register, signinWithGoogle } = useAuth();\n    const mounted = useMounted();\n\n    const handleSubmit = (userName, firstName, lastName, token) => {\n        localStorage.setItem('token', token);\n        apiCall(userName, firstName, lastName, token);\n    };\n\n    const checkUser = (userName) => {\n        axios.defaults.withCredentials = true;\n        // make a post request with the user data\n        axios.post(serverUrl + 'common/exists', userName).then((response) => {\n            console.log('axios call');\n            if (response.status === 200) {\n                setUserExists(true);\n            } else if (response.status === 404) {\n                setUserExists(false);\n            }\n        });\n    };\n    const apiCall = (userName, firstName, lastName, token) => {\n        const payload = {\n            userName: userName,\n            firstName: firstName,\n            lastName: lastName,\n        };\n        axios.defaults.withCredentials = true;\n        // make a post request with the user data\n        axios\n            .post(serverUrl + 'signup/user', payload, {\n                headers: {\n                    authtoken: token,\n                },\n            })\n            .then((response) => {\n                console.log('axios call');\n                if (response.status === 200) {\n                    console.log('updated successfully', response);\n                    dispatch({ type: saveUserName, firstName, lastName, userName });\n                    history.push('/register2', { replace: true });\n                }\n            });\n    };\n    const handleSubmitWithGoogle = (userName, firstName, lastName, token) => {\n        localStorage.setItem('token', token);\n        apiCall(userName, firstName, lastName, token);\n        // dispatch({ type: saveUserName, firstName, lastName, userName });\n        // history.push('/register2', { replace: true });\n    };\n\n    return (\n        <>\n            <Helmet>\n                <title>WeCare - Register</title>\n            </Helmet>\n            <Box\n                sx={{\n                    backgroundColor: '#ffffff',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    height: '100%',\n                    justifyContent: 'center',\n                }}\n            >\n                <Container maxWidth=\"sm\" style={{ marginTop: '50px' }}>\n                    <div style={{ marginTop: '20px', marginBottom: '50px' }}>\n                        {alert ? <Alert severity=\"error\">{error}</Alert> : <></>}\n                    </div>\n                    <Formik\n                        initialValues={{\n                            userName: '',\n                            firstName: '',\n                            lastName: '',\n                            password: '',\n                            isSubmitting: false,\n                        }}\n                        validationSchema={Yup.object().shape({\n                            userName: Yup.string()\n                                .email('Must be a valid email')\n                                .max(255)\n                                .required('Email is required'),\n                            firstName: Yup.string().max(255).required('First name is required'),\n                            lastName: Yup.string().max(255).required('Last name is required'),\n                            password: Yup.string().max(255).required('Password is required'),\n                        })}\n                        onSubmit={(values) => {\n                            console.log(values);\n                            values.isSubmitting = true;\n                            register(values.userName, values.password)\n                                .then((response: any) => {\n                                    console.log('response', response);\n                                    handleSubmit(\n                                        values.userName,\n                                        values.firstName,\n                                        values.lastName,\n                                        response.user.accessToken\n                                    );\n                                })\n                                .catch((error) => {\n                                    console.log(error.message);\n                                    values.isSubmitting = false;\n                                    setAlert(true);\n                                    switch (error.code) {\n                                        case 'auth/email-already-in-use': {\n                                            setError('User Name already registered');\n                                            // checkUser(values.userName);\n                                            // if(userExists) {\n\n                                            // } else {\n\n                                            // }\n                                            break;\n                                        }\n                                    }\n                                    // setError(error.message);\n                                })\n                                .finally(() => {\n                                    mounted.current && (values.isSubmitting = false);\n                                });\n                            //history.push('/register2', { replace: true });\n                        }}\n                    >\n                        {({ errors, handleBlur, handleChange, handleSubmit, touched, values }) => (\n                            <form onSubmit={handleSubmit}>\n                                <Box\n                                    sx={{ mb: 3 }}\n                                    display=\"flex\"\n                                    flexDirection=\"column\"\n                                    alignItems=\"center\"\n                                    justifyContent=\"center\"\n                                >\n                                    <Typography color=\"textPrimary\" variant=\"h2\">\n                                        Create new account\n                                    </Typography>\n                                    <Typography color=\"textSecondary\" gutterBottom variant=\"body2\">\n                                        Use your email to create new account\n                                    </Typography>\n                                </Box>\n                                <TextField\n                                    error={Boolean(touched.firstName && errors.firstName)}\n                                    fullWidth\n                                    helperText={touched.firstName && errors.firstName}\n                                    label=\"First name\"\n                                    margin=\"normal\"\n                                    name=\"firstName\"\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    value={values.firstName}\n                                    variant=\"outlined\"\n                                />\n                                <TextField\n                                    error={Boolean(touched.lastName && errors.lastName)}\n                                    fullWidth\n                                    helperText={touched.lastName && errors.lastName}\n                                    label=\"Last name\"\n                                    margin=\"normal\"\n                                    name=\"lastName\"\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    value={values.lastName}\n                                    variant=\"outlined\"\n                                />\n                                <TextField\n                                    error={Boolean(touched.userName && errors.userName)}\n                                    fullWidth\n                                    helperText={touched.userName && errors.userName}\n                                    label=\"User Name(Email)\"\n                                    margin=\"normal\"\n                                    name=\"userName\"\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    type=\"email\"\n                                    value={values.userName}\n                                    variant=\"outlined\"\n                                />\n                                <TextField\n                                    error={Boolean(touched.password && errors.password)}\n                                    fullWidth\n                                    helperText={touched.password && errors.password}\n                                    label=\"Password\"\n                                    margin=\"normal\"\n                                    name=\"password\"\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    type=\"password\"\n                                    value={values.password}\n                                    variant=\"outlined\"\n                                />\n                                <Box\n                                    sx={{\n                                        alignItems: 'center',\n                                        display: 'flex',\n                                        ml: -1,\n                                    }}\n                                >\n                                    {/* <Checkbox\n                                        checked={values.policy}\n                                        name=\"policy\"\n                                        onChange={handleChange}\n                                    />\n                                    <Typography color=\"textSecondary\" variant=\"body1\">\n                                        I have read the{' '}\n                                        <Link\n                                            color=\"primary\"\n                                            component={RouterLink}\n                                            to=\"#\"\n                                            underline=\"always\"\n                                            variant=\"h6\"\n                                        >\n                                            Terms and Conditions\n                                        </Link>\n                                    </Typography> */}\n                                </Box>\n                                {/* {Boolean(touched.policy && errors.policy) && (\n                                    <FormHelperText error>{errors.policy}</FormHelperText>\n                                )} */}\n                                <Box sx={{ py: 2 }}>\n                                    <Button\n                                        color=\"primary\"\n                                        disabled={values.isSubmitting}\n                                        fullWidth\n                                        size=\"large\"\n                                        type=\"submit\"\n                                        variant=\"contained\"\n                                    >\n                                        Next\n                                    </Button>\n                                </Box>\n                                <Typography color=\"textSecondary\" variant=\"body1\">\n                                    Have an account?{' '}\n                                    <Link\n                                        component={RouterLink}\n                                        to=\"/login\"\n                                        variant=\"h6\"\n                                        underline=\"hover\"\n                                    >\n                                        Sign in\n                                    </Link>\n                                </Typography>\n                                <Divider>\n                                    <Typography\n                                        align=\"center\"\n                                        color=\"textSecondary\"\n                                        variant=\"body1\"\n                                    >\n                                        or signup with social platform\n                                    </Typography>\n                                </Divider>\n                                {/* <Box\n                                    sx={{\n                                        pb: 1,\n                                        pt: 3,\n                                    }}\n                                >\n                                    <Typography\n                                        align=\"center\"\n                                        color=\"textSecondary\"\n                                        variant=\"body1\"\n                                    >\n                                        or signup with social platform\n                                    </Typography>\n                                </Box> */}\n                                {/* <Grid\n                                    container\n                                    spacing={3}\n                                    display=\"flex\"\n                                    flexDirection=\"column\"\n                                    alignItems=\"center\"\n                                    justifyContent=\"center\"\n                                >\n                                    <Grid item xs={12} md={6}> */}\n                                <Box\n                                    sx={{\n                                        pb: 1,\n                                        pt: 3,\n                                    }}\n                                >\n                                    <Button\n                                        fullWidth\n                                        startIcon={<GoogleIcon />}\n                                        onClick={() =>\n                                            signinWithGoogle()\n                                                .then((user: any) => {\n                                                    console.log(user);\n                                                    handleSubmitWithGoogle(\n                                                        user.user.email,\n                                                        user._tokenResponse.firstName,\n                                                        user._tokenResponse.lastName,\n                                                        user.user.accessToken\n                                                    );\n                                                    // history.push('/register2');\n                                                })\n                                                .catch((error) => {\n                                                    console.log(error);\n                                                })\n                                        }\n                                        size=\"large\"\n                                        variant=\"contained\"\n                                    >\n                                        Signup with Google\n                                    </Button>\n                                </Box>\n                                {/* </Grid>\n                                </Grid> */}\n                            </form>\n                        )}\n                    </Formik>\n                </Container>\n            </Box>\n        </>\n    );\n};\n\nexport default RegisterFirstPage;\n","import * as React from 'react';\nimport { useState } from 'react';\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport axios from 'axios';\nimport serverUrl from '../../utils/config';\nimport countries from 'i18n-iso-countries';\nimport './Register.css';\nimport {\n    Box,\n    Button,\n    Checkbox,\n    Container,\n    Link,\n    TextField,\n    Typography,\n    FormControlLabel,\n    FormControl,\n    InputLabel,\n    MenuItem,\n    Select,\n} from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createUserProfile, saveUserName } from '../../store/constants/action-types';\n// import {storage} from '../../utils/firebase';\n// import { getStorage, ref, uploadBytes } from 'firebase/storage';\n\nconst RegisterSecondPage = () => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const [user, setUser] = React.useState(\n        useSelector((state: any) => state.userProfileReducer.userName)\n    );\n    countries.registerLocale(require('i18n-iso-countries/langs/en.json'));\n    const countryObj = countries.getNames('en', { select: 'official' });\n    const countryArray = Object.entries(countryObj).map(([key, value]) => {\n        return {\n            label: key,\n            value: value,\n        };\n    });\n    const genderOptions = [\n        {\n            key: 1,\n            value: 'Female',\n        },\n        {\n            key: 2,\n            value: 'Male',\n        },\n        {\n            key: 3,\n            value: 'Do not want to specify',\n        },\n    ];\n\n    var [checked, setChecked] = React.useState(false);\n\n    const handleSubmit = (address1, city, zipCode, phoneNumber, state, gender, country) => {\n        const payload = {\n            userName: user,\n            userMetaData: {\n                isDoctor: checked,\n                gender: gender,\n                appNotifications: true,\n                emailNotifications: true,\n                phoneCalls: true,\n            },\n            profile: {\n                phoneNumber: phoneNumber,\n                profileActive: true,\n                profilePic: '',\n            },\n            address: {\n                location: address1,\n                city: city,\n                state: state,\n                country: country,\n                zipCode: zipCode,\n            },\n        };\n        console.log('payload', payload);\n        // set the with credentials to true\n        const token = localStorage.getItem('token');\n        axios.defaults.withCredentials = true;\n        // make a post request with the user data\n        axios\n            .post(serverUrl + 'signup/user/register', payload, {\n                headers: {\n                    authtoken: token,\n                },\n            })\n            .then(\n                (response) => {\n                    console.log('axios call', response);\n                    if (response.status === 200) {\n                        console.log('updated successfully');\n                        dispatch({\n                            type: saveUserName,\n                            firstName: response.data.data.firstName,\n                            lastName: response.data.data.lastName,\n                            userName: response.data.data.userName,\n                        });\n                        dispatch({\n                            type: createUserProfile,\n                            userMetaData: response.data.data.userMetaData,\n                            profile: response.data.data.profile,\n                            address: response.data.data.address,\n                        });\n\n                        history.push('app/dashboard', { replace: true });\n                    }\n                },\n                (error) => {\n                    console.log('register error');\n                    //   this.setState({\n                    //     errorMessage: error.response.data,\n                    //     signupFailed: true,\n                    //   });\n                }\n            );\n    };\n    return (\n        <>\n            <Helmet>\n                <title>WeCare - Register</title>\n            </Helmet>\n            <Box\n                sx={{\n                    backgroundColor: '#ffffff',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    height: '100%',\n                    justifyContent: 'center',\n                }}\n            >\n                <Container maxWidth=\"sm\" style={{ marginTop: '100px' }}>\n                    <Formik\n                        initialValues={{\n                            address1: '',\n                            city: '',\n                            zipcode: '',\n                            phonenumber: '',\n                            state: '',\n                            gender: '',\n                            country: '',\n                            isSubmitting: false,\n                        }}\n                        validationSchema={Yup.object().shape({\n                            address1: Yup.string().max(255).required('Address is required'),\n                            city: Yup.string().max(255).required('City is required'),\n                            country: Yup.string().max(255).required('Country is required'),\n                            state: Yup.string().max(255).required('State is required'),\n                            zipcode: Yup.string()\n                                .required('ZipCode is required')\n                                .matches(/^[0-9]+$/, 'Must be a number')\n                                .min(5, 'Must be exactly 5 digits')\n                                .max(5, 'Must be exactly 5 digits'),\n                            gender: Yup.string().max(255),\n                            phonenumber: Yup.string()\n                                .required('Phone Number is required')\n                                .matches(/^[0-9]+$/, 'Must be a number')\n                                .min(10, 'Must be exactly 10 digits')\n                                .max(10, 'Must be exactly 10 digits'),\n                        })}\n                        onSubmit={(values) => {\n                            values.isSubmitting = true;\n                            handleSubmit(\n                                values.address1,\n                                values.city,\n                                values.zipcode,\n                                values.phonenumber,\n                                values.state,\n                                values.gender,\n                                values.country\n                            );\n                        }}\n                    >\n                        {({\n                            errors,\n                            handleBlur,\n                            handleChange,\n                            handleSubmit,\n                            isSubmitting,\n                            touched,\n                            values,\n                        }) => (\n                            <form onSubmit={handleSubmit}>\n                                <Box\n                                    sx={{ mb: 3 }}\n                                    display=\"flex\"\n                                    flexDirection=\"column\"\n                                    alignItems=\"center\"\n                                    justifyContent=\"center\"\n                                >\n                                    <Typography color=\"textPrimary\" variant=\"h2\">\n                                        Create new account\n                                    </Typography>\n                                </Box>\n                                <div>\n                                    <FormControlLabel\n                                        label=\"I am a Doctor\"\n                                        control={\n                                            <Checkbox\n                                                checked={checked}\n                                                onChange={() => {\n                                                    setChecked(!checked);\n                                                }}\n                                            />\n                                        }\n                                    />\n                                </div>\n                                <div style={{ display: 'flex', justifyContent: 'flex-start' }}>\n                                    <div\n                                        style={{\n                                            width: '250px',\n                                        }}\n                                    >\n                                        <TextField\n                                            error={Boolean(touched.gender && errors.gender)}\n                                            helperText={touched.gender && errors.gender}\n                                            label=\"Gender\"\n                                            select\n                                            margin=\"normal\"\n                                            name=\"gender\"\n                                            onBlur={handleBlur}\n                                            onChange={handleChange('gender')}\n                                            value={values.gender}\n                                            variant=\"outlined\"\n                                            fullWidth\n                                        >\n                                            <MenuItem value=\"\">\n                                                <em>None</em>\n                                            </MenuItem>\n                                            {genderOptions.map((state) => (\n                                                <MenuItem key={state.key} value={state.value}>\n                                                    {state.value}\n                                                </MenuItem>\n                                            ))}\n                                        </TextField>\n                                    </div>\n                                </div>\n                                <div style={{ display: 'flex', justifyContent: 'flex-start' }}>\n                                    <TextField\n                                        error={Boolean(touched.phonenumber && errors.phonenumber)}\n                                        helperText={touched.phonenumber && errors.phonenumber}\n                                        label=\"Phone Number\"\n                                        margin=\"normal\"\n                                        name=\"phonenumber\"\n                                        style={{\n                                            width: '250px',\n                                            height: '60px',\n                                        }}\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        value={values.phonenumber}\n                                        variant=\"outlined\"\n                                    />\n                                </div>\n                                <div style={{ display: 'flex', justifyContent: 'flex-start' }}>\n                                    <TextField\n                                        error={Boolean(touched.address1 && errors.address1)}\n                                        helperText={touched.address1 && errors.address1}\n                                        label=\"Address\"\n                                        margin=\"normal\"\n                                        name=\"address1\"\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        value={values.address1}\n                                        variant=\"outlined\"\n                                        fullWidth\n                                    />\n                                </div>\n                                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                                    <TextField\n                                        error={Boolean(touched.city && errors.city)}\n                                        helperText={touched.city && errors.city}\n                                        label=\"City\"\n                                        margin=\"normal\"\n                                        name=\"city\"\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        value={values.city}\n                                        variant=\"outlined\"\n                                        style={{\n                                            width: '250px',\n                                        }}\n                                    />\n                                    <div\n                                        style={{\n                                            width: '250px',\n                                        }}\n                                    >\n                                        <TextField\n                                            error={Boolean(touched.country && errors.country)}\n                                            helperText={touched.country && errors.country}\n                                            label=\"Country\"\n                                            select\n                                            margin=\"normal\"\n                                            name=\"country\"\n                                            onBlur={handleBlur}\n                                            onChange={handleChange('country')}\n                                            value={values.country}\n                                            variant=\"outlined\"\n                                            fullWidth\n                                        >\n                                            <MenuItem value=\"\">\n                                                <em>None</em>\n                                            </MenuItem>\n                                            {countryArray.map((state) => (\n                                                <MenuItem value={state.value}>\n                                                    {state.value}\n                                                </MenuItem>\n                                            ))}\n                                        </TextField>\n                                    </div>\n                                </div>\n                                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                                    <TextField\n                                        error={Boolean(touched.state && errors.state)}\n                                        helperText={touched.state && errors.state}\n                                        label=\"State\"\n                                        margin=\"normal\"\n                                        name=\"state\"\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        value={values.state}\n                                        variant=\"outlined\"\n                                        style={{\n                                            width: '250px',\n                                        }}\n                                    />\n                                    <TextField\n                                        error={Boolean(touched.zipcode && errors.zipcode)}\n                                        helperText={touched.zipcode && errors.zipcode}\n                                        label=\"Zipcode\"\n                                        margin=\"normal\"\n                                        name=\"zipcode\"\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        value={values.zipcode}\n                                        variant=\"outlined\"\n                                        style={{\n                                            width: '250px',\n                                        }}\n                                    />\n                                </div>\n                                <Box sx={{ py: 2, alignItems: 'center', display: 'flex', ml: 5 }}>\n                                    <Button\n                                        color=\"primary\"\n                                        disabled={values.isSubmitting}\n                                        size=\"large\"\n                                        type=\"submit\"\n                                        variant=\"contained\"\n                                        style={{ width: '475px' }}\n                                    >\n                                        Create\n                                    </Button>\n                                </Box>\n                                <Typography\n                                    color=\"textSecondary\"\n                                    variant=\"body1\"\n                                    style={{ marginLeft: '40px' }}\n                                >\n                                    Have an account?{' '}\n                                    <Link\n                                        component={RouterLink}\n                                        to=\"/login\"\n                                        variant=\"h6\"\n                                        underline=\"hover\"\n                                    >\n                                        Sign in\n                                    </Link>\n                                </Typography>\n                            </form>\n                        )}\n                    </Formik>\n                </Container>\n            </Box>\n        </>\n    );\n};\n\nexport default RegisterSecondPage;\n","import * as React from 'react';\nimport { useState, useRef, useEffect } from 'react';\nimport { Link as RouterLink, useHistory, useLocation } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n    Box,\n    Button,\n    Container,\n    Grid,\n    Link,\n    TextField,\n    Typography,\n    Alert,\n    Divider,\n} from '@material-ui/core';\nimport GoogleIcon from '../../icons/Google';\nimport { useAuth } from 'contexts/AuthContext';\nimport useMounted from '../hooks/useMounted';\n\nconst ForgotPassword = () => {\n    const history = useHistory();\n    const location = useLocation();\n    const [errorAlert, setErrorAlert] = useState(false);\n    const [successAlert, setSuccessAlert] = useState(false);\n    const [message, setMessage] = useState('');\n    const { forgotPassword } = useAuth();\n    const mounted = useMounted();\n\n    return (\n        <>\n            <Helmet>\n                <title>WeCare - ForgotPassword</title>\n            </Helmet>\n\n            <Box\n                sx={{\n                    backgroundColor: '#ffffff',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    height: '100%',\n                    justifyContent: 'center',\n                }}\n            >\n                <Container maxWidth=\"sm\" style={{ marginTop: '70px' }}>\n                    {errorAlert ? (\n                        <div style={{ marginTop: '50px', marginBottom: '50px' }}>\n                            <Alert severity=\"error\">{message}</Alert>\n                        </div>\n                    ) : (\n                        <></>\n                    )}\n                    {successAlert ? (\n                        <div style={{ marginTop: '50px', marginBottom: '50px' }}>\n                            <Alert severity=\"success\">{message}</Alert>\n                        </div>\n                    ) : (\n                        <></>\n                    )}\n                    <Formik\n                        initialValues={{\n                            email: '',\n                        }}\n                        validationSchema={Yup.object().shape({\n                            email: Yup.string()\n                                .email('Must be a valid email')\n                                .max(255)\n                                .required('Email is required'),\n                        })}\n                        onSubmit={(values) => {\n                            forgotPassword(values.email)\n                                .then((response) => {\n                                    console.log(response);\n                                    setSuccessAlert(true);\n                                    setErrorAlert(false);\n                                    setMessage('Email has been sent to reset the password');\n                                })\n                                .catch((error) => {\n                                    console.log(error);\n                                    setErrorAlert(true);\n                                    setSuccessAlert(false);\n                                    setMessage(error.message);\n                                });\n                        }}\n                    >\n                        {({\n                            errors,\n                            handleBlur,\n                            handleChange,\n                            handleSubmit,\n                            isSubmitting,\n                            touched,\n                            values,\n                        }) => (\n                            <form onSubmit={handleSubmit}>\n                                <Box\n                                    sx={{ mb: 3 }}\n                                    display=\"flex\"\n                                    flexDirection=\"column\"\n                                    alignItems=\"center\"\n                                    justifyContent=\"center\"\n                                >\n                                    <Typography color=\"textPrimary\" variant=\"h2\">\n                                        Forgot Password\n                                    </Typography>\n                                </Box>\n                                <TextField\n                                    error={Boolean(touched.email && errors.email)}\n                                    fullWidth\n                                    helperText={touched.email && errors.email}\n                                    label=\"Email Address\"\n                                    margin=\"normal\"\n                                    name=\"email\"\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    type=\"email\"\n                                    value={values.email}\n                                    variant=\"outlined\"\n                                />\n                                <Box sx={{ py: 2 }}>\n                                    <Button\n                                        color=\"primary\"\n                                        disabled={isSubmitting}\n                                        fullWidth\n                                        size=\"large\"\n                                        type=\"submit\"\n                                        variant=\"contained\"\n                                    >\n                                        Submit\n                                    </Button>\n                                </Box>\n                                <Divider>\n                                    <Typography\n                                        align=\"center\"\n                                        color=\"textSecondary\"\n                                        variant=\"body2\"\n                                    >\n                                        OR\n                                    </Typography>\n                                </Divider>\n                                <div style={{ marginLeft: '260px', marginTop: '10px' }}>\n                                    <Typography\n                                        color=\"textSecondary\"\n                                        variant=\"body1\"\n                                        alignItems=\"center\"\n                                    >\n                                        <Link\n                                            component={RouterLink}\n                                            to=\"/login\"\n                                            variant=\"h5\"\n                                            underline=\"hover\"\n                                        >\n                                            Login\n                                        </Link>\n                                    </Typography>\n                                </div>\n                            </form>\n                        )}\n                    </Formik>\n                </Container>\n            </Box>\n        </>\n    );\n};\n\nexport default ForgotPassword;\n","import * as React from 'react';\nimport { useState, useRef, useEffect } from 'react';\nimport { Link as RouterLink, useHistory, useLocation } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n    Box,\n    Button,\n    Container,\n    Grid,\n    Link,\n    TextField,\n    Typography,\n    Alert,\n} from '@material-ui/core';\nimport GoogleIcon from '../../icons/Google';\nimport { useAuth } from 'contexts/AuthContext';\nimport useMounted from '../hooks/useMounted';\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\nconst ResetPassword = () => {\n    const history = useHistory();\n    const [errorAlert, setErrorAlert] = useState(false);\n    const [successAlert, setSuccessAlert] = useState(false);\n    const [message, setMessage] = useState('');\n    const { resetPassword } = useAuth();\n    const mounted = useMounted();\n    const query = useQuery();\n    return (\n        <>\n            <Helmet>\n                <title>WeCare - ResetPassword</title>\n            </Helmet>\n\n            <Box\n                sx={{\n                    backgroundColor: '#ffffff',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    height: '100%',\n                    justifyContent: 'center',\n                }}\n            >\n                <Container maxWidth=\"sm\" style={{ marginTop: '70px' }}>\n                    {/* <Paper elevation={0}>\n                    <img src={image} height=\"100\" style={{marginLeft:\"400\"}}/>\n                </Paper> */}\n                    {errorAlert ? (\n                        <div style={{ marginTop: '50px', marginBottom: '50px' }}>\n                            <Alert severity=\"error\">{message}</Alert>\n                        </div>\n                    ) : (\n                        <></>\n                    )}\n                    {successAlert ? (\n                        <div style={{ marginTop: '50px', marginBottom: '50px' }}>\n                            <Alert severity=\"success\">{message}</Alert>\n                        </div>\n                    ) : (\n                        <></>\n                    )}\n                    <Formik\n                        initialValues={{\n                            password: '',\n                        }}\n                        validationSchema={Yup.object().shape({\n                            password: Yup.string().max(255).required('Password is required'),\n                        })}\n                        onSubmit={(values) => {\n                            resetPassword(query.get('oobCode'), values.password)\n                                .then((response) => {\n                                    console.log(response);\n                                    setSuccessAlert(true);\n                                    setErrorAlert(false);\n                                    setMessage('Password Changed Sucessfully');\n                                    history.push('/login', { replace: true });\n                                })\n                                .catch((error) => {\n                                    console.log(error);\n                                    setErrorAlert(true);\n                                    setSuccessAlert(false);\n                                    setMessage(error.message);\n                                });\n                        }}\n                    >\n                        {({\n                            errors,\n                            handleBlur,\n                            handleChange,\n                            handleSubmit,\n                            isSubmitting,\n                            touched,\n                            values,\n                        }) => (\n                            <form onSubmit={handleSubmit}>\n                                <Box\n                                    sx={{ mb: 3 }}\n                                    display=\"flex\"\n                                    flexDirection=\"column\"\n                                    alignItems=\"center\"\n                                    justifyContent=\"center\"\n                                >\n                                    <Typography color=\"textPrimary\" variant=\"h2\">\n                                        Reset Password\n                                    </Typography>\n                                </Box>\n                                <TextField\n                                    error={Boolean(touched.password && errors.password)}\n                                    fullWidth\n                                    helperText={touched.password && errors.password}\n                                    label=\"New Password\"\n                                    margin=\"normal\"\n                                    name=\"password\"\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    type=\"password\"\n                                    value={values.password}\n                                    variant=\"outlined\"\n                                />\n                                <Box sx={{ py: 2 }}>\n                                    <Button\n                                        color=\"primary\"\n                                        disabled={isSubmitting}\n                                        fullWidth\n                                        size=\"large\"\n                                        type=\"submit\"\n                                        variant=\"contained\"\n                                    >\n                                        Reset Password\n                                    </Button>\n                                </Box>\n                            </form>\n                        )}\n                    </Formik>\n                </Container>\n            </Box>\n        </>\n    );\n};\n\nexport default ResetPassword;\n","import * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Container, Typography } from '@material-ui/core';\n\nconst NotFound = () => (\n    <>\n        <Helmet>\n            <title>404 | Material Kit</title>\n        </Helmet>\n        <Box\n            sx={{\n                backgroundColor: 'background.default',\n                display: 'flex',\n                flexDirection: 'column',\n                height: '100%',\n                justifyContent: 'center',\n            }}\n        >\n            <Container maxWidth=\"md\">\n                <Typography align=\"center\" color=\"textPrimary\" variant=\"h1\">\n                    404: The page you are looking for isn’t here\n                </Typography>\n                <Typography align=\"center\" color=\"textPrimary\" variant=\"subtitle2\">\n                    You either tried some shady route or you came here by mistake. Whichever it is,\n                    try using the navigation\n                </Typography>\n                <Box sx={{ textAlign: 'center' }}>\n                    <img\n                        alt=\"Under development\"\n                        src=\"/static/images/undraw_page_not_found_su7k.svg\"\n                        style={{\n                            marginTop: 50,\n                            display: 'inline-block',\n                            maxWidth: '100%',\n                            width: 560,\n                        }}\n                    />\n                </Box>\n            </Container>\n        </Box>\n    </>\n);\n\nexport default NotFound;\n","/*global google*/\nimport React, { Component, useRef, useEffect, useState, FunctionComponent } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport moment from 'moment';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { connect } from 'react-redux';\nimport {\n    Box,\n    Grid,\n    Container,\n    Typography,\n    Card,\n    CardContent,\n    TextField,\n    Divider,\n    InputAdornment,\n    CardActions,\n    SvgIcon,\n    Button,\n    CardMedia,\n    Pagination,\n} from '@material-ui/core';\nimport {\n    Search as SearchIcon,\n    Navigation as NavigationIcon,\n    Globe as CircleIcon,\n    AlignRight,\n} from 'react-feather';\nimport axios from 'axios';\nimport { GoogleMap, useJsApiLoader, Marker, DirectionsRenderer } from '@react-google-maps/api';\n\nimport { withRouter, useLocation, Link } from 'react-router-dom';\n\nconst containerStyle = {\n    width: '570px',\n    height: '770px',\n};\n\nconst center = {\n    lat: 37.3184,\n    lng: -121.8381589,\n};\nconst GetHelp: FunctionComponent<any> = ({ userProfileReducer, props }) => {\n    const location = useLocation();\n    const UserId = userProfileReducer?.id;\n\n    //console.log(UserId);\n    const [error, setError] = useState('');\n    const [CityError, setCityError] = useState('');\n    const [name, setName] = useState('');\n    const [city, setCity] = useState('');\n    const [miles, setMiles] = useState('45');\n    const [currentloc, setCurrentloc] = useState(null);\n    const [directions, setDirections] = useState(null);\n    const [datafilter, setDataFilter] = React.useState('all');\n    const [data, setData] = useState(null);\n    let ignoreStat = false;\n    let origin = {};\n    const [UserCompleteAddress, setUserCompleteAddress] = useState(null);\n\n    ////Pagination code\n    const [page, setPage] = useState(1);\n    const [count, setCount] = useState(0);\n    const [totalitem, setTotalItem] = useState(0);\n    const [pageSize, setPageSize] = useState(4);\n    let pageSizes = [4, 8, 16];\n    const handlePageChange = (event, newPage) => {\n        setPage(newPage);\n    };\n    const handlePageSizeChange = (event) => {\n        setPageSize(event.target.value);\n        setPage(1);\n    };\n\n    const handleChangeName = (event) => {\n        setName(event.target.value);\n    };\n    const handleChangeCity = (event) => {\n        setCityError('');\n        setCity(event.target.value);\n    };\n    const handleChangeMiles = (event) => {\n        setMiles(event.target.value);\n    };\n    const handlePageLoad = () => {\n        const token = localStorage.getItem('token');\n        // set the with credentials to true\n        axios.defaults.withCredentials = true;\n        axios\n            .get(\n                '/api/gethelp',\n                {\n                    params: {\n                        name: name,\n                        miles: miles,\n                        city: '',\n                        datafilter: datafilter,\n                        user_location: UserCompleteAddress,\n                    },\n                },\n                {\n                    headers: {\n                        authtoken: token,\n                    },\n                }\n            )\n            .then(\n                (response) => {\n                    ignoreStat = true;\n                    setData(response?.data?.resources);\n                    setDirections(null);\n\n                    setTotalItem(Object.keys(response?.data?.resources).length);\n                    setCount(Math.ceil(Object.keys(response?.data?.resources).length / pageSize));\n                    setPage(1);\n                },\n                (error) => {\n                    console.log(error);\n                    setError(error);\n                }\n            );\n    };\n\n    const handleSearch = (event) => {\n        event.preventDefault();\n        setData(null);\n        setTotalItem(0);\n        if (miles != '' && city == '') {\n            setCityError('Please enter a city to search');\n            setData(null);\n            setDirections(null);\n\n            setTotalItem(0);\n            setCount(0);\n            setPage(1);\n        } else {\n            setCityError('');\n            const token = localStorage.getItem('token');\n            // set the with credentials to true\n            axios.defaults.withCredentials = true;\n\n            axios\n                .get(\n                    '/api/gethelp',\n                    {\n                        params: {\n                            name: name,\n                            miles: miles,\n                            city: city,\n                            datafilter: datafilter,\n                            user_location: UserCompleteAddress,\n                        },\n                    },\n                    {\n                        headers: {\n                            authtoken: token,\n                        },\n                    }\n                )\n                .then(\n                    (response) => {\n                        setData(response?.data?.resources);\n                        setDirections(null);\n\n                        setTotalItem(Object.keys(response?.data?.resources).length);\n                        setCount(\n                            Math.ceil(Object.keys(response?.data?.resources).length / pageSize)\n                        );\n                        setPage(1);\n                    },\n                    (error) => {\n                        console.log(error);\n                        setError(error);\n                    }\n                );\n        }\n    };\n\n    const { isLoaded } = useJsApiLoader({\n        id: 'google-map-script',\n        googleMapsApiKey: 'AIzaSyCW3O6PQctDxoSoSNYWVa44nXc1ze4V-Nw',\n    });\n    const getCurrentUserLocation = () => {\n        navigator.geolocation.getCurrentPosition(function (position) {\n            //console.log(\"position\",position);\n            console.log('Latitude is :', position.coords.latitude);\n            console.log('Longitude is :', position.coords.longitude);\n            let location = { lat: position.coords.latitude, lng: position.coords.longitude };\n            setCurrentloc(location);\n            currentloc = location;\n            console.log(currentloc);\n            var geocoder = new google.maps.Geocoder(),\n                latitude = position.coords.latitude, //sub in your latitude\n                longitude = position.coords.longitude, //sub in your longitude\n                city = '',\n                state = '';\n            geocoder.geocode(\n                { location: { lat: latitude, lng: longitude } },\n                function (results, status) {\n                    if (status === google.maps.GeocoderStatus.OK) {\n                        ignoreStat = true;\n                        results.forEach(function (element) {\n                            element.address_components.forEach(function (element2) {\n                                element2.types.forEach(function (element3) {\n                                    switch (element3) {\n                                        case 'administrative_area_level_1':\n                                            state = element2.long_name;\n                                            break;\n                                        case 'locality':\n                                            city = element2.long_name;\n                                            break;\n                                    }\n                                });\n                            });\n                        });\n                        setUserCompleteAddress(results[0].formatted_address);\n                        UserCompleteAddress = results[0].formatted_address;\n                        setCity(city + ', ' + state);\n                        handlePageLoad();\n                    }\n                }\n            );\n        });\n    };\n\n    const [map, setMap] = React.useState(null);\n\n    const onLoad = React.useCallback(function callback(map) {\n        const bounds = new window.google.maps.LatLngBounds();\n        map.fitBounds(bounds);\n        setMap(map);\n        if (ignoreStat == false) {\n            getCurrentUserLocation();\n        }\n    }, []);\n\n    const onUnmount = React.useCallback(function callback(map) {\n        setMap(null);\n    }, []);\n\n    //function that is calling the directions service\n    const getDirections = (resource) => {\n        const directionsService = new google.maps.DirectionsService();\n        let destination = resource.address;\n        if (origin !== null && destination !== null) {\n            directionsService.route(\n                {\n                    origin: currentloc,\n                    destination: destination,\n                    travelMode: google.maps.TravelMode.DRIVING,\n                },\n                (result, status) => {\n                    if (status === google.maps.DirectionsStatus.OK) {\n                        //changing the state of directions to the result of direction service\n                        setDirections(null);\n                        setDirections(result); //setShow(true);\n                    } else {\n                        console.error(`error fetching directions ${result}`);\n                    }\n                }\n            );\n        }\n    };\n\n    const handleRadioChange = (event) => {\n        setDataFilter(event.target.value);\n    };\n\n    return (\n        <>\n            <Helmet>\n                <title>GetHelp | WeCare</title>\n            </Helmet>\n            <Box\n                sx={{\n                    backgroundColor: 'background.default',\n                    minHeight: '100%',\n                    py: 3,\n                }}\n            >\n                <Container maxWidth={false}>\n                    <Box {...props}>\n                        <Box sx={{ mt: 3 }}>\n                            <Card>\n                                <CardContent>\n                                    <Box sx={{ display: 'flex', maxWidth: 1200 }}>\n                                        <Box sx={{ maxWidth: 700 }}>\n                                            <span> </span>{' '}\n                                            <RadioGroup\n                                                row\n                                                defaultValue=\"all\"\n                                                value={datafilter}\n                                                onChange={handleRadioChange}\n                                            >\n                                                <FormControlLabel\n                                                    value=\"all\"\n                                                    control={<Radio />}\n                                                    label=\"All\"\n                                                />\n                                                <FormControlLabel\n                                                    value=\"resources\"\n                                                    control={<Radio />}\n                                                    label=\"Resources\"\n                                                />\n                                                <FormControlLabel\n                                                    value=\"services\"\n                                                    control={<Radio />}\n                                                    label=\"Services\"\n                                                />\n                                            </RadioGroup>\n                                            <br />\n                                            <TextField\n                                                style={{ width: 600 }}\n                                                InputProps={{\n                                                    startAdornment: (\n                                                        <InputAdornment position=\"start\">\n                                                            <SvgIcon\n                                                                fontSize=\"small\"\n                                                                color=\"action\"\n                                                            >\n                                                                <SearchIcon />\n                                                            </SvgIcon>\n                                                        </InputAdornment>\n                                                    ),\n                                                }}\n                                                placeholder=\"Search resource/service\"\n                                                value={name}\n                                                variant=\"outlined\"\n                                                onChange={handleChangeName}\n                                            />\n                                            <br />\n                                            <br />\n                                            <TextField\n                                                style={{ width: 300 }}\n                                                //fullWidth\n                                                InputProps={{\n                                                    startAdornment: (\n                                                        <InputAdornment position=\"start\">\n                                                            <SvgIcon\n                                                                fontSize=\"small\"\n                                                                color=\"action\"\n                                                            >\n                                                                <NavigationIcon />\n                                                            </SvgIcon>\n                                                        </InputAdornment>\n                                                    ),\n                                                }}\n                                                placeholder=\"Search within City\"\n                                                helperText=\"Search within City\"\n                                                value={city}\n                                                variant=\"outlined\"\n                                                onChange={handleChangeCity}\n                                            />\n                                            <span> </span>\n                                            <TextField\n                                                style={{ width: 300 }}\n                                                //fullWidth\n                                                InputProps={{\n                                                    startAdornment: (\n                                                        <InputAdornment position=\"start\">\n                                                            <SvgIcon\n                                                                fontSize=\"small\"\n                                                                color=\"action\"\n                                                            >\n                                                                <CircleIcon />\n                                                            </SvgIcon>\n                                                        </InputAdornment>\n                                                    ),\n                                                }}\n                                                placeholder=\"Search within miles\"\n                                                helperText=\"Search within miles\"\n                                                value={miles}\n                                                variant=\"outlined\"\n                                                onChange={handleChangeMiles}\n                                            />\n                                            <br />\n                                            <br />\n                                            <div style={{ color: 'red' }}>{CityError}</div>\n                                        </Box>\n                                        <Box\n                                            sx={{\n                                                display: 'flex',\n                                                width: 200,\n                                                alignItems: 'center',\n                                            }}\n                                        >\n                                            <br />\n                                            <br />\n                                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                            <br />\n                                            <br />\n                                            <br />\n                                            <Button\n                                                style={{ width: 150, height: 50 }}\n                                                color=\"primary\"\n                                                variant=\"contained\"\n                                                onClick={handleSearch}\n                                            >\n                                                Search\n                                            </Button>\n                                        </Box>\n                                    </Box>\n                                </CardContent>\n                            </Card>\n                        </Box>\n                    </Box>\n                    <Grid container spacing={2}>\n                        <Grid item xs={6}>\n                            <Box sx={{ pt: 3 }}>\n                                {data != null && datafilter != null ? (\n                                    <Grid container spacing={2}>\n                                        {(pageSize > 0\n                                            ? data.slice(\n                                                  (page - 1) * pageSize,\n                                                  (page - 1) * pageSize + pageSize\n                                              )\n                                            : data\n                                        ).map((resource) => (\n                                            <Grid item xs={6} key={resource._id}>\n                                                <Card>\n                                                    {resource.ImageUrl != '' ? (\n                                                        <CardMedia\n                                                            component=\"img\"\n                                                            height=\"140\"\n                                                            src={resource.ImageUrl}\n                                                            alt={resource.Name}\n                                                        />\n                                                    ) : (\n                                                        <CardMedia\n                                                            component=\"img\"\n                                                            height=\"140\"\n                                                            alt={resource.Name}\n                                                            image=\"/static/images/avatars/resource.png\"\n                                                        />\n                                                    )}\n                                                    <CardContent>\n                                                        <Typography\n                                                            gutterBottom\n                                                            variant=\"h5\"\n                                                            component=\"div\"\n                                                        >\n                                                            {resource.Name}\n                                                        </Typography>\n                                                        <Typography\n                                                            variant=\"body2\"\n                                                            color=\"text.secondary\"\n                                                        >\n                                                            {resource.Description}\n                                                        </Typography>\n                                                        <Typography\n                                                            variant=\"body2\"\n                                                            color=\"text.secondary\"\n                                                        >\n                                                            {resource.type != 'resource'\n                                                                ? 'Available on ' +\n                                                                  moment(\n                                                                      resource.availableDate\n                                                                  ).format('MM/DD/YYYY')\n                                                                : resource.SKU +\n                                                                  ' item(s) available'}\n                                                        </Typography>\n                                                        <Typography\n                                                            variant=\"body2\"\n                                                            color=\"text.secondary\"\n                                                        >\n                                                            {resource.distance + 'miles'}\n                                                        </Typography>\n                                                        <Typography\n                                                            variant=\"body2\"\n                                                            color=\"text.secondary\"\n                                                        >\n                                                            {resource.address}\n                                                            <Button\n                                                                style={{\n                                                                    marginLeft: 'none',\n                                                                    textTransform: 'none',\n                                                                }}\n                                                                onClick={() =>\n                                                                    getDirections(resource)\n                                                                }\n                                                            >\n                                                                Direction\n                                                            </Button>\n                                                        </Typography>\n                                                    </CardContent>\n                                                    <CardActions>\n                                                        <Box style={{ marginLeft: 'auto' }}>\n                                                            <Button\n                                                                size=\"large\"\n                                                                component={Link}\n                                                                to={`/app/gethelp/:${resource._id}/:${resource.type}/:gethelpitem`}\n                                                            >\n                                                                Reserve\n                                                            </Button>\n                                                        </Box>\n                                                    </CardActions>\n                                                </Card>\n                                            </Grid>\n                                        ))}\n                                    </Grid>\n                                ) : null}\n                            </Box>\n                            <div>\n                                <br></br>\n                                {'Total Items: '}\n                                {totalitem} &nbsp;&nbsp;{'Items per Page: '}\n                                <select onChange={handlePageSizeChange} value={pageSize}>\n                                    {pageSizes.map((size) => (\n                                        <option key={size} value={size}>\n                                            {size}\n                                        </option>\n                                    ))}\n                                </select>\n                                <br></br>\n                                <br></br>\n                                <Pagination\n                                    count={count}\n                                    page={page}\n                                    variant=\"outlined\"\n                                    shape=\"rounded\"\n                                    onChange={handlePageChange}\n                                />\n                            </div>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Box paddingTop={3}>\n                                {isLoaded ? (\n                                    <GoogleMap\n                                        mapContainerStyle={containerStyle}\n                                        center={currentloc}\n                                        zoom={13}\n                                        onLoad={onLoad}\n                                        onUnmount={onUnmount}\n                                    >\n                                        {currentloc !== null && (\n                                            <Marker\n                                                title=\"Your current location\"\n                                                key=\"marker_1\"\n                                                position={currentloc}\n                                            />\n                                        )}\n                                        {data != null && directions == null\n                                            ? data.map((resource) => (\n                                                  <Marker\n                                                      title={resource.markertitle}\n                                                      key={resource._id}\n                                                      position={resource.location}\n                                                  />\n                                              ))\n                                            : null}\n                                        {/* Child components, such as markers, info windows, etc. */}\n                                        {directions !== null && (\n                                            <DirectionsRenderer\n                                                directions={directions}\n                                                defaultOptions={{\n                                                    suppressMarkers: false,\n                                                }}\n                                            />\n                                        )}\n                                        <></>\n                                    </GoogleMap>\n                                ) : (\n                                    <></>\n                                )}\n                            </Box>\n                        </Grid>\n                    </Grid>\n                </Container>\n            </Box>\n        </>\n    );\n};\n\nconst mapStateToProps = ({ userProfileReducer }) => ({\n    userProfileReducer,\n});\n\nconst mapDispatchToProps = {};\n\nconst ConnectedGetHelp = connect(mapStateToProps, mapDispatchToProps)(GetHelp);\nexport default withRouter(ConnectedGetHelp);\n","import React, { Component, useRef, useEffect, useState, FunctionComponent } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport {\n    Box,\n    Grid,\n    Container,\n    Card,\n    CardHeader,\n    CardContent,\n    TextField,\n    CardActions,\n    Divider,\n    Button,\n    CardMedia,\n    Table,\n    TableBody,\n    TableCell,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    TableRow,\n    TableContainer,\n    Paper,\n    Typography,\n} from '@material-ui/core';\nimport axios from 'axios';\nimport emailjs from '@emailjs/browser';\nimport { init } from '@emailjs/browser';\ninit('Tf7lGE0yewFvOLxah');\n\nimport serverUrl from '../../utils/config';\nimport { GoogleMap, useJsApiLoader, Marker, DirectionsRenderer } from '@react-google-maps/api';\n\nimport { withRouter, useLocation, Link, useHistory, useParams } from 'react-router-dom';\nconst GetHelpItem: FunctionComponent<any> = ({ userProfileReducer, props }) => {\n    const param = useParams();\n    const location = useLocation();\n    const user_email = userProfileReducer?.userName; //\"abc@gmail.com\";//change\n    const history = useHistory();\n    const [resource, setResource] = React.useState({});\n    const [currentloc, setCurrentloc] = React.useState({\n        lat: 37.3184,\n        lng: -121.8381589,\n    });\n    const [data, setData] = useState(null);\n    const [error, setError] = useState(null);\n    const [errorText, setErrorText] = useState('');\n    const [directions, setDirections] = useState(null);\n    const [open, setOpen] = React.useState(false);\n    const [quantity, setQuantity] = useState(0);\n    const [pagetype, setPageType] = useState(null);\n    let ignoreStat = false;\n    const [UserCompleteAddress, setUserCompleteAddress] = useState(null);\n    const containerStyle = {\n        width: '1125px',\n        height: '450px',\n    };\n\n    const center = {\n        lat: 37.3184,\n        lng: -121.8381589,\n    };\n    //change start\n    const UserId = userProfileReducer?.id; //'6225e61bf81d2541a4000bc9';\n    let id;\n    let item_type;\n    // let pagetype;\n    React.useEffect(() => {\n        id = param?.id?.substring(param?.id?.indexOf(':') + 1);\n        item_type = param?.type?.substring(param?.type?.indexOf(':') + 1) + 's';\n        pagetype = param?.pagetype?.substring(param?.pagetype?.indexOf(':') + 1);\n        //console.log(pagetype);\n        setPageType(pagetype);\n    }, []);\n\n    const handlepageload = () => {\n        const token = localStorage.getItem('token');\n        // set the with credentials to true\n        axios.defaults.withCredentials = true;\n\n        axios\n            .get(\n                '/api/gethelp/search',\n                { params: { item_type: item_type, id: id, user_location: UserCompleteAddress } },\n                {\n                    headers: {\n                        authtoken: token,\n                    },\n                }\n            )\n            .then(\n                (response) => {\n                    ignoreStat = true;\n                    if (response?.data?.resources[0].type == 'resource') {\n                        setQuantity(response?.data?.resources[0].SKU);\n                    }\n                    setData(response?.data?.resources);\n                    //setCity(response.data.user_currentcity);\n                    //setCurrentloc(response?.data?.user_currentaddress);\n                    getDirections(response?.data?.resources[0]);\n                },\n                (error) => {\n                    console.log(error);\n                    setError(error);\n                }\n            );\n    };\n\n    const { isLoaded } = useJsApiLoader({\n        id: 'google-map-script',\n        googleMapsApiKey: 'AIzaSyCW3O6PQctDxoSoSNYWVa44nXc1ze4V-Nw',\n    });\n\n    const [map, setMap] = React.useState(null);\n\n    const onLoad = React.useCallback(function callback(map) {\n        const bounds = new window.google.maps.LatLngBounds();\n        map.fitBounds(bounds);\n        setMap(map);\n        if (ignoreStat == false) {\n            getCurrentUserLocation();\n        }\n    }, []);\n\n    const onUnmount = React.useCallback(function callback(map) {\n        setMap(null);\n    }, []);\n    const getCurrentUserLocation = () => {\n        navigator.geolocation.getCurrentPosition(function (position) {\n            //console.log(\"position\",position);\n            console.log('Latitude is :', position.coords.latitude);\n            console.log('Longitude is :', position.coords.longitude);\n            let location = { lat: position.coords.latitude, lng: position.coords.longitude };\n            setCurrentloc(location);\n            currentloc = location;\n            console.log(currentloc);\n            var geocoder = new google.maps.Geocoder(),\n                latitude = position.coords.latitude, //sub in your latitude\n                longitude = position.coords.longitude, //sub in your longitude\n                city = '',\n                state = '';\n            geocoder.geocode(\n                { location: { lat: latitude, lng: longitude } },\n                function (results, status) {\n                    if (status === google.maps.GeocoderStatus.OK) {\n                        ignoreStat = true;\n                        results.forEach(function (element) {\n                            element.address_components.forEach(function (element2) {\n                                element2.types.forEach(function (element3) {\n                                    switch (element3) {\n                                        case 'administrative_area_level_1':\n                                            state = element2.long_name;\n                                            break;\n                                        case 'locality':\n                                            city = element2.long_name;\n                                            break;\n                                    }\n                                });\n                            });\n                        });\n                        setUserCompleteAddress(results[0].formatted_address);\n                        UserCompleteAddress = results[0].formatted_address;\n                        //setCity(city+\", \"+state);\n                        handlepageload();\n                    }\n                }\n            );\n        });\n    };\n    //function that is calling the directions service\n    const getDirections = (resource) => {\n        const directionsService = new google.maps.DirectionsService();\n        let destination = resource.address;\n        //let origin=\"2239 McLaughlin Ave,San Jose,95122\"\n        // console.log(destination);\n        // console.log(currentloc);\n        if (origin !== null && destination !== null) {\n            directionsService.route(\n                {\n                    origin: currentloc,\n                    destination: destination,\n                    travelMode: google.maps.TravelMode.DRIVING,\n                },\n                (result, status) => {\n                    if (status === google.maps.DirectionsStatus.OK) {\n                        //changing the state of directions to the result of direction service\n                        setDirections(null);\n                        setDirections(result); //setShow(true);\n                    } else {\n                        console.error(`error fetching directions ${result}`);\n                    }\n                }\n            );\n        }\n    };\n\n    const handleItemQuantityChange = (event) => {\n        if (1 < event.target.value && event.target.value > data[0].SKU) {\n            setErrorText('Quantity should be between 1 and ' + data[0].SKU);\n        } else {\n            setErrorText('');\n            setQuantity(event.target.value);\n        }\n    };\n\n    ////Email\n\n    let state = {\n        feedback: '',\n        name: 'Name',\n        to_email: 'snehathomasdiv@gmail.com',\n        subject: 'Subject',\n    };\n    const sendEmail = (templateId, variables) => {\n        emailjs\n            .send('service_wgfnh0b', templateId, variables)\n            .then((res) => {\n                console.log('Email successfully sent!');\n            })\n            .catch((err) =>\n                console.error(\n                    'Oh well, you failed. Here some thoughts on the error that occured:',\n                    err\n                )\n            );\n    };\n\n    const handleConfirm = (event) => {\n        if (errorText === '') {\n            let resource = data[0];\n            ///email to victim\n            let resource_email_quantity =\n                resource.type == 'resource'\n                    ? quantity\n                    : moment(resource.availableDate).format('MM-DD-YYYY');\n            let qua_date = resource.type == 'resource' ? 'Quantity' : 'Available Date';\n            let email_subject =\n                resource.type == 'resource'\n                    ? 'Resource reservation details'\n                    : 'Service reservation details';\n            let to_user_email = userProfileReducer.userName; //change later state.to_email;\n            let url =\n                'http://localhost:8500' +\n                '/app/gethelp/:' +\n                resource._id +\n                '/:' +\n                resource.type +\n                '/:email' +\n                resource_email_quantity;\n            console.log(url);\n            //serverUrl+'app/gethelp/:'+resource._id+'/:resource';console.log(url);console.log(location.pathname);\n            const templateId = 'template_v9fkqmy';\n\n            sendEmail(templateId, {\n                resource_name: resource.Name,\n                resource_description: resource.Description,\n                resource_address: resource.address,\n                resource_quantity: resource_email_quantity,\n                qua_date: qua_date,\n                owner_name: resource.owner_name,\n                phone_num: resource.Phone_Number,\n\n                from_name: state.name,\n                to_name: userProfileReducer.firstName + ' ' + userProfileReducer.lastName, //'Katarina Smith'//\n                subject: email_subject,\n                to_email: to_user_email,\n                url: url,\n            });\n            //email to owner\n            sendEmail('template_znup9ah', {\n                resource_name: resource.Name,\n                resource_description: resource.Description,\n                resource_address: resource.address,\n                resource_quantity: resource_email_quantity,\n                qua_date: qua_date,\n                victim_name: userProfileReducer.firstName + ' ' + userProfileReducer.lastName,\n                victim_phone_num: userProfileReducer.profile.phoneNumber,\n\n                from_name: state.name,\n                to_name: resource.owner_name, //'Katarina Smith'//\n                subject: state.subject,\n                to_email: resource.owner_email,\n            });\n            if (quantity == null) {\n                setQuantity(data[0].SKU);\n            }\n            const token = localStorage.getItem('token');\n            // set the with credentials to true\n            axios.defaults.withCredentials = true;\n            axios\n                .post(\n                    '/api/gethelp',\n                    { resource: data[0], user_id: UserId, quantity: quantity },\n                    {\n                        headers: {\n                            authtoken: token,\n                        },\n                    }\n                )\n                .then(\n                    (response) => {\n                        //handleSearch(event);\n                        setOpen(true);\n                        //history.push('/app/gethelp') ;\n                    },\n                    (error) => {\n                        console.log(error);\n                        setError(error);\n                    }\n                );\n        } else {\n            setErrorText(\n                'Maximum available Quantity is ' +\n                    data[0].SKU +\n                    '. Please update Quantity between 1 and ' +\n                    data[0].SKU +\n                    ' before confirming the reservation.'\n            );\n        }\n    };\n    const handleClose = (event) => {\n        setOpen(false);\n        history.push('/app/gethelp');\n    };\n\n    return (\n        <>\n            <Helmet>\n                <title>GetHelpItem | WeCare</title>\n            </Helmet>\n            <Box\n                sx={{\n                    backgroundColor: 'background.default',\n                    minHeight: '100%',\n                    py: 3,\n                }}\n            >\n                <Container maxWidth={false}>\n                    <Box {...props}>\n                        <Card>\n                            <CardHeader\n                                sx={{\n                                    display: 'flex',\n                                    justifyContent: 'flex-start',\n                                }}\n                                titleTypographyProps={{ variant: 'h2' }}\n                                title=\"GetHelp Reservation\"\n                            />\n                            <Divider />\n                            <CardContent>\n                                <Grid container spacing={2}>\n                                    {data != null\n                                        ? data.map((resource) => (\n                                              <Grid item key={resource._id}>\n                                                  <Card\n                                                      sx={{ display: 'flex' }}\n                                                      style={{ border: 'none', boxShadow: 'none' }}\n                                                  >\n                                                      {resource.ImageUrl != '' ? (\n                                                          <CardMedia\n                                                              component=\"img\"\n                                                              height=\"475\"\n                                                              src={resource.ImageUrl}\n                                                              alt={resource.Name}\n                                                              sx={{ width: 400 }}\n                                                          />\n                                                      ) : (\n                                                          <CardMedia\n                                                              component=\"img\"\n                                                              height=\"475\"\n                                                              alt={resource.Name}\n                                                              sx={{ width: 400 }}\n                                                              image=\"/static/images/avatars/resource.png\"\n                                                          />\n                                                      )}\n                                                      <CardContent>\n                                                          <TableContainer component={Paper}>\n                                                              <Table\n                                                                  sx={{ minWidth: 650 }}\n                                                                  aria-label=\"simple table\"\n                                                              >\n                                                                  <TableBody>\n                                                                      <TableRow\n                                                                          key=\"1\"\n                                                                          sx={{\n                                                                              '&:last-child td, &:last-child th':\n                                                                                  { border: 0 },\n                                                                          }}\n                                                                      >\n                                                                          <TableCell\n                                                                              component=\"th\"\n                                                                              scope=\"row\"\n                                                                          >\n                                                                              {' '}\n                                                                              <b>Name</b>\n                                                                          </TableCell>\n                                                                          <TableCell align=\"left\">\n                                                                              :{resource.Name}\n                                                                          </TableCell>\n                                                                      </TableRow>\n                                                                      <TableRow\n                                                                          key=\"2\"\n                                                                          sx={{\n                                                                              '&:last-child td, &:last-child th':\n                                                                                  { border: 0 },\n                                                                          }}\n                                                                      >\n                                                                          <TableCell\n                                                                              component=\"th\"\n                                                                              scope=\"row\"\n                                                                          >\n                                                                              {' '}\n                                                                              {resource.type ==\n                                                                              'resource' ? (\n                                                                                  <b>Quantity</b>\n                                                                              ) : (\n                                                                                  <b>\n                                                                                      Available date\n                                                                                  </b>\n                                                                              )}\n                                                                          </TableCell>\n                                                                          {pagetype?.substring(\n                                                                              0,\n                                                                              5\n                                                                          ) != 'email' ? (\n                                                                              resource.type ==\n                                                                              'resource' ? (\n                                                                                  <TableCell align=\"left\">\n                                                                                      :\n                                                                                      <TextField\n                                                                                          id=\"standard-number\"\n                                                                                          type=\"number\"\n                                                                                          InputLabelProps={{\n                                                                                              shrink: true,\n                                                                                              style: {\n                                                                                                  color: 'blue',\n                                                                                              },\n                                                                                          }}\n                                                                                          InputProps={{\n                                                                                              inputProps:\n                                                                                                  {\n                                                                                                      type: 'number',\n                                                                                                      min: 1,\n                                                                                                  },\n                                                                                          }}\n                                                                                          variant=\"standard\"\n                                                                                          defaultValue={\n                                                                                              resource.SKU\n                                                                                          }\n                                                                                          error={\n                                                                                              errorText.length ===\n                                                                                              0\n                                                                                                  ? false\n                                                                                                  : true\n                                                                                          }\n                                                                                          helperText={\n                                                                                              errorText.length ===\n                                                                                              0\n                                                                                                  ? 'Update required quantity'\n                                                                                                  : errorText\n                                                                                          }\n                                                                                          sx={{\n                                                                                              width: '41ch',\n                                                                                          }}\n                                                                                          onChange={\n                                                                                              handleItemQuantityChange\n                                                                                          }\n                                                                                      />\n                                                                                  </TableCell>\n                                                                              ) : (\n                                                                                  <TableCell>\n                                                                                      :\n                                                                                      {moment(\n                                                                                          resource.availableDate\n                                                                                      ).format(\n                                                                                          'MM/DD/YYYY'\n                                                                                      )}\n                                                                                  </TableCell>\n                                                                              )\n                                                                          ) : (\n                                                                              <TableCell>\n                                                                                  :\n                                                                                  {pagetype?.substring(\n                                                                                      5,\n                                                                                      pagetype.length\n                                                                                  )}\n                                                                              </TableCell>\n                                                                          )}\n                                                                      </TableRow>\n\n                                                                      <TableRow\n                                                                          key=\"3\"\n                                                                          sx={{\n                                                                              '&:last-child td, &:last-child th':\n                                                                                  { border: 0 },\n                                                                          }}\n                                                                      >\n                                                                          <TableCell\n                                                                              component=\"th\"\n                                                                              scope=\"row\"\n                                                                          >\n                                                                              {' '}\n                                                                              <b>Description</b>\n                                                                          </TableCell>\n                                                                          <TableCell align=\"left\">\n                                                                              :\n                                                                              {resource.Description}\n                                                                          </TableCell>\n                                                                      </TableRow>\n                                                                      <TableRow\n                                                                          key=\"6\"\n                                                                          sx={{\n                                                                              '&:last-child td, &:last-child th':\n                                                                                  { border: 0 },\n                                                                          }}\n                                                                      >\n                                                                          <TableCell\n                                                                              component=\"th\"\n                                                                              scope=\"row\"\n                                                                          >\n                                                                              {' '}\n                                                                              <b>Owner Name</b>\n                                                                          </TableCell>\n                                                                          <TableCell align=\"left\">\n                                                                              :{resource.owner_name}\n                                                                          </TableCell>\n                                                                      </TableRow>\n                                                                      <TableRow\n                                                                          key=\"4\"\n                                                                          sx={{\n                                                                              '&:last-child td, &:last-child th':\n                                                                                  { border: 0 },\n                                                                          }}\n                                                                      >\n                                                                          <TableCell\n                                                                              component=\"th\"\n                                                                              scope=\"row\"\n                                                                          >\n                                                                              {' '}\n                                                                              <b>Address</b>\n                                                                          </TableCell>\n                                                                          <TableCell align=\"left\">\n                                                                              :{resource.address}\n                                                                          </TableCell>\n                                                                      </TableRow>\n\n                                                                      <TableRow\n                                                                          key=\"5\"\n                                                                          sx={{\n                                                                              '&:last-child td, &:last-child th':\n                                                                                  { border: 0 },\n                                                                          }}\n                                                                      >\n                                                                          <TableCell\n                                                                              component=\"th\"\n                                                                              scope=\"row\"\n                                                                          >\n                                                                              {' '}\n                                                                              <b>Distance</b>\n                                                                          </TableCell>\n                                                                          <TableCell align=\"left\">\n                                                                              :{resource.distance}{' '}\n                                                                              miles\n                                                                          </TableCell>\n                                                                      </TableRow>\n\n                                                                      <TableRow\n                                                                          key=\"7\"\n                                                                          sx={{\n                                                                              '&:last-child td, &:last-child th':\n                                                                                  { border: 0 },\n                                                                          }}\n                                                                      >\n                                                                          <TableCell\n                                                                              component=\"th\"\n                                                                              scope=\"row\"\n                                                                          >\n                                                                              {' '}\n                                                                              <b>Phone Number</b>\n                                                                          </TableCell>\n                                                                          <TableCell align=\"left\">\n                                                                              :\n                                                                              {\n                                                                                  resource.Phone_Number\n                                                                              }\n                                                                          </TableCell>\n                                                                      </TableRow>\n                                                                      <TableRow\n                                                                          key=\"8\"\n                                                                          sx={{\n                                                                              '&:last-child td, &:last-child th':\n                                                                                  { border: 0 },\n                                                                          }}\n                                                                      >\n                                                                          <TableCell\n                                                                              component=\"th\"\n                                                                              scope=\"row\"\n                                                                          >\n                                                                              {' '}\n                                                                              <b>Email</b>\n                                                                          </TableCell>\n                                                                          <TableCell align=\"left\">\n                                                                              :\n                                                                              {resource.owner_email}\n                                                                          </TableCell>\n                                                                      </TableRow>\n                                                                  </TableBody>\n                                                              </Table>\n                                                          </TableContainer>\n                                                      </CardContent>\n                                                  </Card>\n                                              </Grid>\n                                          ))\n                                        : null}\n                                </Grid>\n                                <Grid>\n                                    <Box paddingTop={3}>\n                                        {isLoaded ? (\n                                            <GoogleMap\n                                                mapContainerStyle={containerStyle}\n                                                center={currentloc}\n                                                zoom={13}\n                                                onLoad={onLoad}\n                                                onUnmount={onUnmount}\n                                            >\n                                                {/* Child components, such as markers, info windows, etc. */}\n                                                {directions !== null && (\n                                                    <DirectionsRenderer\n                                                        directions={directions}\n                                                        defaultOptions={{\n                                                            suppressMarkers: true,\n                                                        }}\n                                                    />\n                                                )}\n                                                <></>\n                                            </GoogleMap>\n                                        ) : (\n                                            <></>\n                                        )}\n                                    </Box>\n                                </Grid>\n                            </CardContent>\n\n                            <CardActions>\n                                <Box style={{ marginLeft: 'auto' }}>\n                                    <Button\n                                        component={Link}\n                                        to={'/app/gethelp'}\n                                        color=\"primary\"\n                                        variant=\"contained\"\n                                        size=\"medium\"\n                                    >\n                                        Cancel\n                                    </Button>\n                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                    {pagetype?.substring(0, 5) != 'email' ? (\n                                        <Button\n                                            color=\"primary\"\n                                            variant=\"contained\"\n                                            size=\"medium\"\n                                            onClick={handleConfirm}\n                                        >\n                                            Confirm\n                                        </Button>\n                                    ) : null}\n                                </Box>\n                            </CardActions>\n                        </Card>\n                    </Box>{' '}\n                </Container>\n            </Box>\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        Reservation details were successfully send to {user_email}.\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} autoFocus>\n                        CLOSE\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n};\n// export default withRouter(GetHelpItem);\n\nconst mapStateToProps = ({ userProfileReducer }) => ({\n    userProfileReducer,\n});\n\nconst mapDispatchToProps = {};\n\nconst ConnectedGetHelpItem = connect(mapStateToProps, mapDispatchToProps)(GetHelpItem);\nexport default withRouter(ConnectedGetHelpItem);\n//export default GetHelpItem;\n","import { createTheme } from '@material-ui/core';\n\nconst theme = createTheme({\n    palette: {\n        background: {\n            default: '#f4f6f8',\n            paper: '#ffffff',\n        },\n        primary: {\n            contrastText: '#ffffff',\n            main: '#5664d2',\n        },\n        text: {\n            primary: '#172b4d',\n            secondary: '#6b778c',\n        },\n    },\n    shadows: [\n        'none',\n        '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\n        '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\n        '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n        '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n        '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n        '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n        '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\n        '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\n        '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\n        '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\n        '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\n        '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\n        '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\n        '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\n        '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\n        '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\n        '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\n        '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\n        '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\n        '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\n        '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\n        '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\n        '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\n        '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)',\n    ],\n    typography: {\n        h1: {\n            fontWeight: 500,\n            fontSize: 35,\n            letterSpacing: '-0.24px',\n        },\n        h2: {\n            fontWeight: 500,\n            fontSize: 29,\n            letterSpacing: '-0.24px',\n        },\n        h3: {\n            fontWeight: 500,\n            fontSize: 24,\n            letterSpacing: '-0.06px',\n        },\n        h4: {\n            fontWeight: 500,\n            fontSize: 20,\n            letterSpacing: '-0.06px',\n        },\n        h5: {\n            fontWeight: 500,\n            fontSize: 16,\n            letterSpacing: '-0.05px',\n        },\n        h6: {\n            fontWeight: 500,\n            fontSize: 14,\n            letterSpacing: '-0.05px',\n        },\n        overline: {\n            fontWeight: 500,\n        },\n    },\n});\n\nexport default theme;\n","export default __webpack_public_path__ + \"assets/logo.56dd12f6.png\";","import { fontFamily } from '@material-ui/system';\nimport * as React from 'react';\nimport logo from '../../../static/images/logo.png';\nconst Logo = (props) => <img alt=\"Logo\" src={logo} width=\"60\" height=\"50\" {...props} />;\n\nexport default Logo;\n","import * as React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { AppBar, Toolbar } from '@material-ui/core';\nimport Logo from './Logo';\n\nconst MainNavbar = (props) => (\n    <AppBar elevation={0} {...props}>\n        <Toolbar sx={{ height: 64 }}>\n            <RouterLink to=\"/\">\n                <Logo />\n            </RouterLink>\n        </Toolbar>\n    </AppBar>\n);\n\nexport default MainNavbar;\n","import * as React from 'react';\n//import { Outlet } from 'react-router-dom';\nimport { styled } from '@material-ui/core/styles';\nimport MainNavbar from './MainNavbar';\n\nconst MainLayoutRoot = styled('div')(({ theme }) => ({\n    backgroundColor: theme.palette.background.paper,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%',\n}));\n\nconst MainLayoutWrapper = styled('div')({\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n    paddingTop: 64,\n});\n\nconst MainLayoutContainer = styled('div')({\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n});\n\nconst MainLayoutContent = styled('div')({\n    flex: '1 1 auto',\n    height: '100%',\n    overflow: 'auto',\n});\n\nconst MainLayout = ({ children, ...props }) => (\n    <MainLayoutRoot>\n        <MainNavbar />\n        <MainLayoutWrapper>\n            <MainLayoutContainer>\n                <MainLayoutContent>{children || '<Outlet />'}</MainLayoutContent>\n            </MainLayoutContainer>\n        </MainLayoutWrapper>\n    </MainLayoutRoot>\n);\n\nexport default MainLayout;\n","import * as React from 'react';\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { AppBar, Badge, Box, Hidden, IconButton, Toolbar } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\nimport InputIcon from '@material-ui/icons/Input';\nimport { useAuth } from 'contexts/AuthContext';\nimport { useDispatch } from 'react-redux';\nimport { logoutAction, resetState } from '../store/constants/action-types';\nimport Logo from './Logo';\n\nconst DashboardNavbar = ({ onMobileNavOpen, ...rest }) => {\n    const { logout } = useAuth();\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [notifications] = React.useState([]);\n\n    const signout = () => {\n        logout().then((data) => {\n            // dispatch({ type: logoutAction });\n            localStorage.clear();\n            dispatch({ type: resetState });\n        });\n        history.push('/login');\n    };\n\n    return (\n        <AppBar elevation={0} {...rest}>\n            <Toolbar>\n                <RouterLink to=\"/\">\n                    <Logo />\n                </RouterLink>\n                <Box sx={{ flexGrow: 1 }} />\n                <Hidden mdDown>\n                    <IconButton color=\"inherit\" size=\"large\">\n                        <Badge badgeContent={notifications.length} color=\"primary\" variant=\"dot\">\n                            <NotificationsIcon />\n                        </Badge>\n                    </IconButton>\n                    <IconButton color=\"inherit\" size=\"large\" onClick={signout}>\n                        <InputIcon />\n                    </IconButton>\n                </Hidden>\n                <Hidden mdUp>\n                    <IconButton color=\"inherit\" onClick={onMobileNavOpen} size=\"large\">\n                        <MenuIcon />\n                    </IconButton>\n                </Hidden>\n            </Toolbar>\n        </AppBar>\n    );\n};\n\n// DashboardNavbar.propTypes = {\n//     onMobileNavOpen: PropTypes.func,\n// };\n\nexport default DashboardNavbar;\n","import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport {\n    Modal,\n    Box,\n    Button,\n    Card,\n    CardContent,\n    CardHeader,\n    Divider,\n    Grid,\n    TextField,\n    MenuItem,\n    Link,\n    Typography,\n    FormControlLabel,\n    Checkbox,\n} from '@material-ui/core';\nimport Alert from '@mui/material/Alert';\nimport { withStyles } from '@material-ui/styles';\nimport { styled } from '@mui/material/styles';\nimport { connect } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport serverUrl from '../utils/config';\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL } from 'firebase/storage';\nimport { createUserProfile, saveUserName } from '../store/constants/action-types';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst BorderLinearProgress = withStyles((theme) => ({\n    root: {\n        height: 15,\n        borderRadius: 5,\n    },\n    colorPrimary: {\n        backgroundColor: '#EEEEEE',\n    },\n    bar: {\n        borderRadius: 5,\n        backgroundColor: '#1a90ff',\n    },\n}))(LinearProgress);\n\nconst Input = styled('input')({\n    display: 'none',\n});\nfunction getModalStyle() {\n    // const top = 50 + rand();\n    // const left = 50 + rand();\n    return {\n        position: 'absolute' as 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: 600,\n        bgcolor: 'background.paper',\n        border: '1px solid #000',\n        boxShadow: 24,\n        p: 4,\n        // top: `${top}%`,\n        // left: `${left}%`,\n        // transform: `translate(-${top}%, -${left}%)`,\n    };\n}\nexport const RegisterDoctorModal = ({ closeModal, open, userProfileReducer, ...props }) => {\n    // const [open, setOpen] = React.useState(false);\n    const [modalStyle] = React.useState(getModalStyle);\n    const [isLoading, setLoading] = useState(true);\n    const [fileErr, setFileErr] = useState(false);\n    const [fileErrMsg, setFileErrMsg] = useState('');\n    const dispatch = useDispatch();\n    var userMetaData = userProfileReducer.userMetaData;\n    const [doctorProfile, setDoctorProfile] = React.useState({\n        firstName: userProfileReducer.firstName,\n        userId: userProfileReducer.id,\n        user: userProfileReducer.userName,\n        licenseUrl: '',\n    });\n    var fileName = '';\n    const [fileUrl, setFileUrl] = useState('');\n    const [fileUploadTitle, setFileUploadTitle] = React.useState('Upload License');\n    const [fileLink, setFileLink] = React.useState('');\n    const [specialityOptions, setSpecialityOptions] = React.useState([]);\n    const [progress, setProgress] = useState(0);\n    const [errMessage, setErrMessage] = useState('');\n    // const [fileErrMsg, setFileErrMsg] = useState('');\n    useEffect(() => {\n        // set the with credentials to true\n        axios.defaults.withCredentials = true;\n        // make a post request with the user data\n        axios.get(serverUrl + 'common/speciality').then(\n            (response) => {\n                console.log('axios call');\n                if (response.status === 200) {\n                    console.log('updated successfully', response.data[0].name);\n                    setSpecialityOptions(response.data[0].name);\n                    setLoading(false);\n                }\n            },\n            (error) => {\n                console.log('register error');\n                // this.setState({\n                // errorMessage: error.response.data,\n                // signupFailed: true,\n                // });\n            }\n        );\n    }, [1]);\n\n    const saveFile = (event) => {\n        setFileErr(false);\n        setFileErrMsg('');\n        fileName = event.target.files[0].name;\n        const storage = getStorage();\n        const storageRef = ref(storage, `/${doctorProfile.user}/license/${fileName}`);\n\n        const file = event.target.files[0];\n        const uploadTask = uploadBytesResumable(storageRef, file);\n        uploadTask.on(\n            'state_changed',\n            (snapshot) => {\n                setProgress((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\n                setFileLink(fileName);\n            },\n            (error) => {},\n            () => {\n                getDownloadURL(storageRef)\n                    .then((url) => {\n                        setFileUrl(url);\n                    })\n                    .catch((error) => {\n                        switch (error.code) {\n                            case 'storage/object-not-found':\n                                setFileUrl('');\n                                break;\n                        }\n                    });\n            }\n        );\n    };\n\n    const handleSubmit = (values) => {\n        console.log(values);\n        console.log('filename', fileName);\n        if (fileLink == '' && values.isDoctor) {\n            setFileErr(true);\n            setFileErrMsg('Please upload the license');\n            return;\n        } else {\n            setFileErr(false);\n            setFileErrMsg('');\n\n            userMetaData.isDoctor = values.isDoctor;\n            const payload = {\n                userId: doctorProfile.userId,\n                userMetaData: userMetaData,\n                speciality: values.speciality,\n                license: values.license,\n                qualification: values.qualification,\n                experience: values.experience,\n                description: values.description,\n                licenseUrl: fileUrl.replace,\n                availability: '',\n            };\n            const token = localStorage.getItem('token');\n            // set the with credentials to true\n            axios.defaults.withCredentials = true;\n            // make a post request with the user data\n            axios\n                .post(serverUrl + 'signup/doctor', payload, {\n                    headers: {\n                        authtoken: token,\n                    },\n                })\n                .then(\n                    (response) => {\n                        console.log('axios call', response);\n                        if (response.status === 200) {\n                            console.log('updated successfully');\n                            const user = response?.data?.user || response?.data;\n                            dispatch({\n                                type: saveUserName,\n                                ...user,\n                            });\n                            dispatch({\n                                type: createUserProfile,\n                                id: user._id,\n                                ...user,\n                                payload: response?.data,\n                            });\n                            closeModal();\n                        }\n                        if (response.status === 401) {\n                            setErrMessage('System Error, contact Administrator!');\n                        }\n                    },\n                    (error) => {\n                        console.log('register error');\n                        setErrMessage('System Error, contact Administrator!');\n                    }\n                );\n        }\n    };\n\n    return (\n        <>\n            <Formik\n                // userProfileReducer?.doctor?.speciality\n                initialValues={{\n                    isDoctor: userProfileReducer?.userMetaData?.isDoctor,\n                    speciality: '',\n                    license: userProfileReducer?.doctor?.license,\n                    qualification: userProfileReducer?.doctor?.qualification,\n                    experience: userProfileReducer?.doctor?.experience,\n                    description: userProfileReducer?.doctor?.description,\n                    file: null,\n                    isSubmitting: false,\n                }}\n                validationSchema={Yup.object().shape({\n                    isDoctor: Yup.boolean(),\n                    speciality: Yup.string()\n                        .max(255)\n                        .when('isDoctor', {\n                            is: true,\n                            then: Yup.string().required('Speciality is required'),\n                        }),\n                    license: Yup.string()\n                        .max(255)\n                        .when('isDoctor', {\n                            is: true,\n                            then: Yup.string().required('License is required'),\n                        }),\n                    qualification: Yup.string()\n                        .max(255)\n                        .when('isDoctor', {\n                            is: true,\n                            then: Yup.string().required('Qualification is required'),\n                        }),\n                    experience: Yup.string()\n                        .max(255)\n                        .when('isDoctor', {\n                            is: true,\n                            then: Yup.string().required('Experience is required'),\n                        }),\n                    description: Yup.string()\n                        .max(255)\n                        .when('isDoctor', {\n                            is: true,\n                            then: Yup.string().required('Description is required'),\n                        }),\n                })}\n                onSubmit={(values, errors) => {\n                    console.log('insde submit', errors);\n                    values.isSubmitting = true;\n                    handleSubmit(values);\n                }}\n            >\n                {({\n                    errors,\n                    handleBlur,\n                    handleChange,\n                    handleSubmit,\n                    isSubmitting,\n                    touched,\n                    values,\n                }) => (\n                    <Modal\n                        aria-labelledby=\"modal-modal-title\"\n                        aria-describedby=\"modal-modal-description\"\n                        open={open}\n                        onClose={closeModal}\n                    >\n                        <form autoComplete=\"off\" noValidate {...props} style={modalStyle}>\n                            <Card>\n                                <CardHeader\n                                    subheader=\"The information will be edited if already exists\"\n                                    title=\"Register As a Doctor\"\n                                />\n                                <Divider />\n                                <CardContent>\n                                    <div>\n                                        <FormControlLabel\n                                            label=\"I am a Doctor\"\n                                            name=\"isDoctor\"\n                                            control={\n                                                <Checkbox\n                                                    checked={values.isDoctor}\n                                                    onChange={handleChange}\n                                                />\n                                            }\n                                        />\n                                    </div>\n                                    {!values.isDoctor && (\n                                        <div\n                                            style={{\n                                                width: '300px',\n                                                height: '50px',\n                                                display: 'flex',\n                                                justifyContent: 'flex-start',\n                                            }}\n                                        >\n                                            <Alert variant=\"standard\" severity=\"info\">\n                                                This will delete your Doctor info!\n                                            </Alert>\n                                        </div>\n                                    )}\n                                    <Grid container spacing={3}>\n                                        <Grid item md={6} xs={12}>\n                                            <TextField\n                                                error={Boolean(\n                                                    touched.speciality && errors.speciality\n                                                )}\n                                                helperText={touched.speciality && errors.speciality}\n                                                fullWidth\n                                                label=\"Speciality\"\n                                                name=\"speciality\"\n                                                select\n                                                onChange={handleChange}\n                                                required\n                                                disabled={!values.isDoctor}\n                                                value={values.speciality}\n                                                variant=\"outlined\"\n                                            >\n                                                isLoading ? (<div>Loading ...</div>) : (\n                                                {specialityOptions.map((speciality) => (\n                                                    <MenuItem key={speciality} value={speciality}>\n                                                        {speciality}\n                                                    </MenuItem>\n                                                ))}\n                                                )\n                                            </TextField>\n                                        </Grid>\n                                        <Grid item md={6} xs={12}>\n                                            <TextField\n                                                error={Boolean(touched.license && errors.license)}\n                                                helperText={touched.license && errors.license}\n                                                fullWidth\n                                                label=\"License\"\n                                                name=\"license\"\n                                                disabled={!values.isDoctor}\n                                                onChange={handleChange}\n                                                required\n                                                value={values.license}\n                                                variant=\"outlined\"\n                                            />\n                                        </Grid>\n                                        <Grid item md={6} xs={12}>\n                                            <TextField\n                                                error={Boolean(\n                                                    touched.qualification && errors.qualification\n                                                )}\n                                                helperText={\n                                                    touched.qualification && errors.qualification\n                                                }\n                                                fullWidth\n                                                label=\"Qualification\"\n                                                name=\"qualification\"\n                                                disabled={!values.isDoctor}\n                                                onChange={handleChange}\n                                                value={values.qualification}\n                                                variant=\"outlined\"\n                                                required\n                                            />\n                                        </Grid>\n                                        <Grid item md={6} xs={12}>\n                                            <TextField\n                                                error={Boolean(\n                                                    touched.experience && errors.experience\n                                                )}\n                                                helperText={touched.experience && errors.experience}\n                                                fullWidth\n                                                label=\"experience\"\n                                                name=\"experience\"\n                                                disabled={!values.isDoctor}\n                                                onChange={handleChange}\n                                                value={values.experience}\n                                                variant=\"outlined\"\n                                                required\n                                            />\n                                        </Grid>\n                                        <Grid item md={6} xs={12}>\n                                            <TextField\n                                                error={Boolean(\n                                                    touched.description && errors.description\n                                                )}\n                                                helperText={\n                                                    touched.description && errors.experience\n                                                }\n                                                fullWidth\n                                                label=\"Description\"\n                                                name=\"description\"\n                                                disabled={!values.isDoctor}\n                                                onChange={handleChange}\n                                                value={values.description}\n                                                variant=\"outlined\"\n                                                required\n                                            />\n                                        </Grid>\n                                        <Grid item md={6} xs={12}>\n                                            {!fileLink && (\n                                                <Button\n                                                    variant=\"outlined\"\n                                                    component=\"label\"\n                                                    size=\"small\"\n                                                    onClick={() => {\n                                                        setFileErr(false);\n                                                        setFileErrMsg('');\n                                                    }}\n                                                    disabled={!values.isDoctor}\n                                                    style={{ marginRight: '50px' }}\n                                                >\n                                                    {fileUploadTitle}\n                                                    <input type=\"file\" hidden onChange={saveFile} />\n                                                </Button>\n                                            )}\n\n                                            {fileErr && (\n                                                <div style={{ font: 'sans-serif', color: 'red' }}>\n                                                    {' '}\n                                                    {fileErrMsg}\n                                                </div>\n                                            )}\n                                            {progress > 0 && progress < 100 && (\n                                                <Box\n                                                    className=\"mb25\"\n                                                    display=\"flex\"\n                                                    alignItems=\"center\"\n                                                >\n                                                    <Box width=\"100%\" mr={1}>\n                                                        <BorderLinearProgress\n                                                            variant=\"determinate\"\n                                                            value={progress}\n                                                        />\n                                                    </Box>\n                                                    <Box minWidth={35}>\n                                                        <Typography\n                                                            variant=\"body2\"\n                                                            color=\"textSecondary\"\n                                                        >{`${Math.round(progress)}%`}</Typography>\n                                                    </Box>\n                                                </Box>\n                                            )}\n                                            {progress == 100 && (\n                                                <Link\n                                                    href={fileUrl}\n                                                    variant=\"body2\"\n                                                    rel=\"noopener noreferrer\"\n                                                    target=\"_blank\"\n                                                >\n                                                    {' '}\n                                                    {fileLink}\n                                                </Link>\n                                            )}\n                                        </Grid>\n                                    </Grid>\n                                    <Grid>\n                                        {errMessage && (\n                                            <Grid item md={12} xs={12}>\n                                                <Alert variant=\"standard\" severity=\"error\">\n                                                    {errMessage}\n                                                </Alert>\n                                            </Grid>\n                                        )}\n                                    </Grid>\n                                </CardContent>\n                                <Divider />\n\n                                <Box\n                                    sx={{\n                                        display: 'flex',\n                                        justifyContent: 'space-between',\n                                        p: 2,\n                                    }}\n                                >\n                                    <Button\n                                        color=\"primary\"\n                                        variant=\"contained\"\n                                        onClick={handleSubmit}\n                                    >\n                                        Save details\n                                    </Button>\n                                </Box>\n                            </Card>\n                        </form>\n                    </Modal>\n                )}\n            </Formik>\n        </>\n    );\n};\nconst mapStateToProps = ({ userProfileReducer }) => ({\n    userProfileReducer,\n});\n\nconst mapDispatchToProps = {};\n\nconst ConnectedRegisterDoctorDetails = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(RegisterDoctorModal);\nexport default ConnectedRegisterDoctorDetails;\n","import * as React from 'react';\nimport { NavLink as RouterLink, matchPath, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Button, ListItem } from '@material-ui/core';\n\nconst NavItem = ({ href, icon: Icon, title, ...rest }) => {\n    const location = useLocation();\n\n    const active = href\n        ? !!matchPath(\n              {\n                  path: href,\n                  end: false,\n              },\n              location.pathname\n          )\n        : false;\n\n    return (\n        <ListItem\n            disableGutters\n            sx={{\n                display: 'flex',\n                py: 0,\n            }}\n            {...rest}\n        >\n            <Button\n                component={RouterLink}\n                sx={{\n                    'color': 'text.secondary',\n                    'fontWeight': 'medium',\n                    'justifyContent': 'flex-start',\n                    'letterSpacing': 0,\n                    'py': 1.25,\n                    'textTransform': 'none',\n                    'width': '100%',\n                    ...(active && {\n                        color: 'primary.main',\n                    }),\n                    '& svg': {\n                        mr: 1,\n                    },\n                }}\n                to={href}\n            >\n                {Icon && <Icon size=\"20\" />}\n                <span>{title}</span>\n            </Button>\n        </ListItem>\n    );\n};\n\nNavItem.propTypes = {\n    href: PropTypes.string,\n    icon: PropTypes.elementType,\n    title: PropTypes.string,\n};\n\nexport default NavItem;\n","import * as React from 'react';\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\nimport { useState } from 'react';\nimport { Avatar, Box, Button, Divider, Drawer, Hidden, List, Typography } from '@material-ui/core';\nimport {\n    AlertCircle as AlertCircleIcon,\n    BarChart as BarChartIcon,\n    Lock as LockIcon,\n    Settings as SettingsIcon,\n    ShoppingBag as ShoppingBagIcon,\n    User as UserIcon,\n    UserPlus as UserPlusIcon,\n    Package as PackageIcon,\n    Users as UsersIcon,\n    Gift as GiftIcon,\n    PlusCircle as PlusCircleIcon,\n    CreditCard as CreditCardIcon,\n} from 'react-feather';\nimport { connect } from 'react-redux';\nimport { RegisterDoctorModal } from './RegisterDoctorModal';\n\n// const items = [\n//     {\n//         href: '/app/dashboard',\n//         icon: BarChartIcon,\n//         title: 'Dashboard',\n//     },\n//     {\n//         href: '/app/gethelp',\n//         icon: PackageIcon,\n//         title: 'Get Help',\n//     },\n//     {\n//         href: '/app/givehelp',\n//         icon: ShoppingBagIcon,\n//         title: 'Give Help',\n//     },\n//     {\n//         href: '/app/medicalAssistance',\n//         icon: PlusCircleIcon,\n//         title: 'Medical Assistance',\n//     },\n//     {\n//         href: '/app/account',\n//         icon: UserIcon,\n//         title: 'Account',\n//     },\n//     {\n//         href: '/app/settings',\n//         icon: SettingsIcon,\n//         title: 'Settings',\n//     },\n/*\n    {\n        href: '/login',\n        icon: LockIcon,\n        title: 'Login',\n    },\n    {\n        href: '/register1',\n        icon: UserPlusIcon,\n        title: 'Register',\n    },\n    {\n        href: '/404',\n        icon: AlertCircleIcon,\n        title: 'Error',\n    },*/\n// ];\nimport NavItem from './NavItem';\n\nconst DashboardSidebar = ({ onMobileClose, openMobile, userProfileReducer }) => {\n    const location = useLocation();\n    const [open, setOpen] = useState(false);\n    const user = {\n        avatar: userProfileReducer?.profile?.profilePic, //'/static/images/avatars/avatar_2.png',\n        jobTitle: userProfileReducer?.address?.city + ', ' + userProfileReducer?.address?.state, //\"San Jose, CA\",//\n        name: userProfileReducer?.firstName + ' ' + userProfileReducer?.lastName, //\"katarina Smith\"//\n    };\n    React.useEffect(() => {\n        if (openMobile && onMobileClose) {\n            onMobileClose();\n        }\n    }, [location.pathname]);\n\n    const registerDoctor = () => {\n        setOpen(true);\n    };\n\n    const closeModal = () => {\n        setOpen(false);\n    };\n\n    const items = [\n        {\n            href: '/app/dashboard',\n            icon: BarChartIcon,\n            title: 'Dashboard',\n            isHidden: !userProfileReducer?.profile?.profileActive,\n        },\n        {\n            href: '/app/gethelp',\n            icon: PackageIcon,\n            title: 'Get Help',\n            isHidden: !userProfileReducer?.profile?.profileActive,\n        },\n        {\n            href: '/app/givehelp',\n            icon: ShoppingBagIcon,\n            title: 'Give Help',\n            isHidden: !userProfileReducer?.profile?.profileActive,\n        },\n        {\n            href: userProfileReducer?.userMetaData?.isDoctor\n                ? '/app/medicalAssistance'\n                : '/app/lookformedicalAssistance',\n            icon: PlusCircleIcon,\n            title: 'Medical Assistance',\n            isHidden: !userProfileReducer?.profile?.profileActive,\n        },\n        {\n            href: '/app/account',\n            icon: UserIcon,\n            title: 'Account',\n        },\n        {\n            href: '/app/mytransactions',\n            icon: CreditCardIcon,\n            title: 'My Transactions',\n            isHidden: !userProfileReducer?.profile?.profileActive,\n        },\n        {\n            href: '/app/settings',\n            icon: SettingsIcon,\n            title: 'Settings',\n        },\n    ];\n    const content = (\n        <Box\n            sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                height: '100%',\n            }}\n        >\n            <Box\n                sx={{\n                    alignItems: 'center',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    p: 2,\n                }}\n            >\n                <Avatar\n                    component={RouterLink}\n                    src={user.avatar}\n                    sx={{\n                        cursor: 'pointer',\n                        width: 64,\n                        height: 64,\n                    }}\n                    to=\"/app/account\"\n                />\n                <Typography color=\"textPrimary\" variant=\"h5\">\n                    {user.name}\n                </Typography>\n                <Typography color=\"textSecondary\" variant=\"body2\">\n                    {user.jobTitle}\n                </Typography>\n            </Box>\n            <Divider />\n            <Box sx={{ p: 2 }}>\n                <List>\n                    {items.map((item) => (\n                        <>\n                            {!item.isHidden && (\n                                <NavItem\n                                    href={item.href}\n                                    key={item.title}\n                                    title={item.title}\n                                    icon={item.icon}\n                                />\n                            )}\n                        </>\n                    ))}\n                </List>\n            </Box>\n            <Box sx={{ flexGrow: 1 }} />\n            <Box\n                sx={{\n                    backgroundColor: 'background.default',\n                    m: 2,\n                    p: 2,\n                }}\n            >\n                <Typography align=\"center\" gutterBottom variant=\"h4\">\n                    Are you a Doctor?\n                </Typography>\n                <Typography align=\"center\" variant=\"body2\">\n                    Help us in assisting non-urgent medical needs\n                </Typography>\n                <Box\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'center',\n                        pt: 2,\n                    }}\n                >\n                    <Button\n                        color=\"primary\"\n                        component=\"a\"\n                        // href=\"/app/registerdoctor\"\n                        variant=\"contained\"\n                        onClick={registerDoctor}\n                    >\n                        Register as Doctor\n                    </Button>\n                </Box>\n            </Box>\n        </Box>\n    );\n\n    return (\n        <>\n            {open && (\n                <RegisterDoctorModal\n                    closeModal={closeModal}\n                    open={open}\n                    userProfileReducer={userProfileReducer}\n                />\n            )}\n            <Hidden mdUp>\n                <Drawer\n                    anchor=\"left\"\n                    onClose={onMobileClose}\n                    open={openMobile}\n                    variant=\"temporary\"\n                    PaperProps={{\n                        sx: {\n                            width: 256,\n                        },\n                    }}\n                >\n                    {content}\n                </Drawer>\n            </Hidden>\n            <Hidden mdDown>\n                <Drawer\n                    anchor=\"left\"\n                    open\n                    variant=\"persistent\"\n                    PaperProps={{\n                        sx: {\n                            width: 256,\n                            top: 64,\n                            height: 'calc(100% - 64px)',\n                        },\n                    }}\n                >\n                    {content}\n                </Drawer>\n            </Hidden>\n        </>\n    );\n};\n\n// DashboardSidebar.propTypes = {\n//     onMobileClose: PropTypes.func,\n//     openMobile: PropTypes.bool,\n// };\n//\n// DashboardSidebar.defaultProps = {\n//     onMobileClose: () => {},\n//     openMobile: false,\n// };\n\n//export default DashboardSidebar;\nconst mapStateToProps = ({ userProfileReducer }) => ({\n    userProfileReducer,\n});\nconst mapDispatchToProps = {};\n\nconst ConnectedDashboardSidebar = connect(mapStateToProps, mapDispatchToProps)(DashboardSidebar);\nexport default ConnectedDashboardSidebar;\n","import * as React from 'react';\nimport { useState } from 'react';\n//import { Outlet } from 'react-router-dom';\nimport { styled } from '@material-ui/core/styles';\nimport DashboardNavbar from './DashboardNavbar';\nimport DashboardSidebar from './DashboardSidebar';\n\nconst DashboardLayoutRoot = styled('div')(({ theme }) => ({\n    backgroundColor: theme.palette.background.default,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%',\n}));\n\nconst DashboardLayoutWrapper = styled('div')(({ theme }) => ({\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n    paddingTop: 64,\n    [theme.breakpoints.up('lg')]: {\n        paddingLeft: 256,\n    },\n}));\n\nconst DashboardLayoutContainer = styled('div')({\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n});\n\nconst DashboardLayoutContent = styled('div')({\n    flex: '1 1 auto',\n    height: '100%',\n    overflow: 'auto',\n});\n\nconst DashboardLayout = ({ children, ...props }) => {\n    const [isMobileNavOpen, setMobileNavOpen] = useState(false);\n\n    return (\n        <DashboardLayoutRoot>\n            <DashboardNavbar onMobileNavOpen={() => setMobileNavOpen(true)} />\n            <DashboardSidebar\n                onMobileClose={() => setMobileNavOpen(false)}\n                openMobile={isMobileNavOpen}\n            />\n            <DashboardLayoutWrapper>\n                <DashboardLayoutContainer>\n                    <DashboardLayoutContent>{children || '<Outlet />'}</DashboardLayoutContent>\n                </DashboardLayoutContainer>\n            </DashboardLayoutWrapper>\n        </DashboardLayoutRoot>\n    );\n};\n\nexport default DashboardLayout;\n","import * as React from 'react';\nimport {\n    Box,\n    Button,\n    Card,\n    CardContent,\n    CardHeader,\n    TextField,\n    Divider,\n    FormControlLabel,\n    FormGroup,\n    Grid,\n} from '@material-ui/core';\nimport { FormHelperText } from '@mui/material';\nimport Checkbox from '@mui/material/Checkbox';\nimport { useState, FunctionComponent, forwardRef } from 'react';\nimport { connect } from 'react-redux';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { getStorage, ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport countries from 'i18n-iso-countries';\nconst { getStates } = require('country-state-picker');\nconst { getCode } = require('country-list');\nimport CountryData from './CountryData.json';\n\nconst metadata = {\n    contentType: 'image/jpeg',\n};\n\nconst AddServiceCard: FunctionComponent<any> = ({ userProfileReducer = {}, ...props }) => {\n    const [check, setCheck] = useState(false);\n    const userId = userProfileReducer._id;\n    // console.log(\"User Id\")\n    // console.log(userProfileReducer._id)\n    const [serviceName, setServiceName] = useState('');\n    const [category, setCategory] = useState('');\n    const [description, setDescription] = useState('');\n    const [phoneNum, setPhoneNum] = useState('');\n    const [dialCode, setDialCode] = useState('+1');\n    const [address, setAddress] = useState('');\n    const [city, setCity] = useState('');\n    const [state, setState] = useState('California');\n    const [zipcode, setZipcode] = useState(null);\n    const [country, setCountry] = useState('United States of America');\n    const [countryNames, setCountryNames] = useState(CountryData);\n    const [code, setCode] = useState('us');\n    const [availability, setAvailability] = useState(new Date());\n    const [datePickerIsOpen, togglePicker] = useState(false);\n    const [showErrorMsg, setShowErrorMsg] = React.useState('');\n    const storage = getStorage();\n    const [image, setImage] = useState(null);\n    const [url, setUrl] = useState('');\n    const [fileUploadTitle, setFileUploadTitle] = React.useState('Upload Resource Pic');\n    const [findImage, setFindImage] = React.useState(false);\n    const today = new Date();\n\n    const [serviceNameError, setServiceNameError] = useState('');\n    const [ifServiceError, setIfServiceError] = useState(false);\n    const [availabilityError, setAvailabilityError] = useState('');\n    const [ifAvailabilityError, setIfAvailabilityError] = useState(false);\n    const [categoryError, setCategoryError] = useState('');\n    const [ifCategoryError, setIfCategoryError] = useState(false);\n    const [descriptionError, setDescriptionError] = useState('');\n    const [ifDescriptionError, setIfDescriptionError] = useState(false);\n    const [phoneNumError, setPhoneNumError] = useState('');\n    const [ifPhoneNumError, setIfPhoneNumError] = useState(false);\n    const [addressError, setAddressError] = useState('');\n    const [ifAddressError, setIfAddressError] = useState(false);\n    const [cityError, setCityError] = useState('');\n    const [ifCityError, setIfCityError] = useState(false);\n    const [stateError, setStateError] = useState('');\n    const [zipcodeError, setZipcodeError] = useState('');\n    const [ifZipcodeError, setIfZipcodeError] = useState(false);\n    const [countryError, setCountryError] = useState('');\n\n    let validateForm = () => {\n        console.log(state, country)\n        if (serviceName === '' || serviceName === null) {\n            setServiceNameError('Please enter service name');\n            setIfServiceError(true);\n            return false;\n        } else if (availability.getTime() < today.getTime()) {\n            setAvailabilityError('Please select a valid date!');\n            setIfAvailabilityError(true);\n            return false;\n        } else if (category === '' || category === null) {\n            setCategoryError('Please enter a category');\n            setIfCategoryError(true);\n            return false;\n        } else if (description === '' || description === null) {\n            setDescriptionError('Please enter description of service');\n            setIfDescriptionError(true);\n            return false;\n        } else if (address === '' || address === null) {\n            setAddressError('Please enter a valid address');\n            setIfAddressError(true);\n            return false;\n        } else if (city === '' || city === null) {\n            setCityError('Please enter your city of residence');\n            setIfCityError(true);\n            return false;\n        } else if (state === '' || state === null) {\n            setStateError('Please enter your state of residence');\n            //setifStateError(true);\n            return false;\n        } else if (country === '' || country === null) {\n            setCountryError('Please enter your country of residence');\n            return false;\n        } else if (zipcode === null || zipcode === '') {\n            setZipcodeError('Please enter your zipcode');\n            setIfZipcodeError(true);\n            return false;\n        } else if ((zipcode?.toString ? zipcode.toString() : zipcode)?.length != 5) {\n            setZipcodeError('Please enter a valid zipcode!');\n            setIfZipcodeError(true);\n            return false;\n        } else if (phoneNum === '' || phoneNum === null) {\n            setPhoneNumError('Please enter your contact number');\n            setIfPhoneNumError(true);\n            return false;\n        } else if ((phoneNum?.toString ? phoneNum.toString() : phoneNum)?.length != 10) {\n            setPhoneNumError('Please enter a valid phone number!');\n            setIfPhoneNumError(true);\n            return false;\n        } else {\n            return true;\n        }\n    };\n\n    countries.registerLocale(require('i18n-iso-countries/langs/en.json'));\n    const countryObj = countries.getNames('en', { select: 'official' });\n    const countryArray = Object.entries(countryObj).map(([key, value]) => {\n        return {\n            label: key,\n            value: value,\n        };\n    });\n\n    const handleImageUpload = (event) => {\n        console.log('Reached upload image task');\n        var file = event.target.files[0];\n        if (file == null || !file) {\n            console.log('No image');\n            setShowErrorMsg('Error: No image available');\n            setFindImage(false);\n        } else {\n            setImage(file);\n            setFindImage(true);\n            console.log(file);\n            const storageRef = ref(\n                storage,\n                `/${userProfileReducer.userName}/services/${file.name}`\n            );\n            uploadBytes(storageRef, file).then((snapshot) => {\n                console.log('Uploaded a blob or file!', snapshot.metadata);\n                setFileUploadTitle(snapshot.metadata.name);\n                setFindImage(true);\n                setShowErrorMsg('Image Uploaded successfully to firebase!');\n                getDownloadURL(storageRef)\n                    .then((url) => {\n                        console.log(url);\n                        setUrl(url);\n                        console.log('url', url);\n                        // setFindImage(true);\n                    })\n                    .catch((error) => {\n                        switch (error.code) {\n                            case 'storage/object-not-found':\n                                setUrl('');\n                                // setFindImage(false);\n                                break;\n                        }\n                    });\n            });\n        }\n    };\n\n    const handleImageChange = (e) => {\n        console.log('Reached image change');\n        if (!findImage) {\n            console.log('Image upload failed!');\n            alert('Image upload failed! Please try again');\n        } else {\n            console.log('Image uploaded successfully');\n            alert('Image uploaded to firebase!');\n        }\n    };\n\n    const handleNameChange = (e) => {\n        setServiceNameError('');\n        setIfServiceError(false);\n        setServiceName(e.target.value);\n    };\n\n    const handleCategoryChange = (e) => {\n        setCategoryError('');\n        setIfCategoryError(false);\n        setCategory(e.target.value);\n    };\n\n    const handleDescriptionChange = (e) => {\n        setDescriptionError('');\n        setIfDescriptionError(false);\n        setDescription(e.target.value);\n    };\n\n    const handlePhoneNumChange = (e) => {\n        setPhoneNumError('');\n        setIfPhoneNumError(false);\n        setPhoneNum(e.target.value);\n    };\n\n    const handleAddressChange = (e) => {\n        setAddressError('');\n        setIfAddressError(false);\n        setAddress(e.target.value);\n    };\n\n    const handleCityChange = (e) => {\n        setCityError('');\n        setIfCityError(false);\n        setCity(e.target.value);\n    };\n\n    const handleStateChange = (e) => {\n        setStateError('');\n        setState(e.target.value);\n    };\n\n    const handleZipcodeChange = (e) => {\n        setZipcodeError('');\n        setIfZipcodeError(false);\n        setZipcode(e.target.value);\n    };\n\n    const handleAvailabilityChange = (date) => {\n        setAvailabilityError('');\n        setIfAvailabilityError(false);\n        setAvailability(date);\n    };\n\n    const handleCountryChange = (e) => {\n        setCountryError('');\n        setCountry(e.target.value);\n        const obj = countryNames.find(({ name }) => name === e.target.value);\n        setCode(getCode(e.target.value));\n        setDialCode(obj.dial_code);\n    };\n\n    const stateObj = getStates(code.toLowerCase());\n    const stateArray = Object.entries(stateObj).map(([key, value]) => {\n        return {\n            label: value,\n            value: value,\n        };\n    });\n\n    const handleSetCheck = (e) => {\n        setAddressError('');\n        setCityError('');\n        setStateError('');\n        setCountryError('');\n        setZipcodeError('');\n        setPhoneNumError('');\n        setCheck(!check);\n        if (!check) {\n            const { address = {}, profile = {} } = userProfileReducer;\n            const obj = countryNames.find(({ code }) => code === getCode(address.country));\n            setAddress(address.location);\n            setCity(address.city);\n            setCountry(address.country);\n            setZipcode(address.zipCode);\n            setState(address.state);\n            setPhoneNum(profile.phoneNumber);\n            setCode(getCode(address.country));\n            setDialCode(obj.dial_code);\n        } else {\n            setAddress('');\n            setCity('');\n            setCountry('United States of America');\n            setZipcode('');\n            setState('');\n            setPhoneNum('');\n        }\n    };\n    const handleTogglePicker = (e) => {\n        togglePicker(!datePickerIsOpen);\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const isValid = validateForm();\n\n        if (isValid) {\n            const res = await fetch('/api/givehelp/service', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    UserId: userId,\n                    Service_Name: serviceName,\n                    Category: category,\n                    Description: description,\n                    Phone_Number: phoneNum,\n                    Address: address,\n                    availableDate: availability,\n                    City: city,\n                    State: state,\n                    Zipcode: zipcode,\n                    Country: country,\n                    ImageUrl: url,\n                }),\n            });\n\n            const data = await res.json();\n            console.log(data);\n\n            if (res.status === 200) {\n                window.alert('Service added!');\n                console.log('Service added!');\n                window.location.reload();\n            } else if (!findImage) {\n                window.alert('Please select an image to upload!');\n                console.log('Please select an image to upload!');\n            } else {\n                window.alert('Failed to upload service data!');\n                console.log('Failed to upload service data!');\n                window.location.reload();\n            }\n        }\n    };\n\n    return (\n        <Box {...props}>\n            <Box\n                sx={{\n                    display: 'flex',\n                    justifyContent: 'flex-start',\n                    width: 500,\n                    height: 700,\n                    p: 1,\n                }}\n            >\n                <form autoComplete=\"off\" noValidate {...props}>\n                    <Card\n                        sx={{\n                            height: 700,\n                            width: 900,\n                            justifyContent: 'center',\n                        }}\n                    >\n                        <CardHeader\n                            sx={{\n                                display: 'flex',\n                                justifyContent: 'flex-start',\n                            }}\n                            titleTypographyProps={{ variant: 'h2' }}\n                            subheader=\"update the resource/service details you would like to provide\"\n                            title=\"Give Help\"\n                        />\n                        <Divider />\n                        <CardContent>\n                            <Grid container rowSpacing={1} columnSpacing={{ xs: 3, sm: 9, md: 3 }}>\n                                <Grid item xs={4}>\n                                    <TextField\n                                        id=\"filled-basic\"\n                                        label=\"Type\"\n                                        variant=\"filled\"\n                                        sx={{ m: 1, width: '30ch' }}\n                                        value=\"Service\"\n                                    />\n                                </Grid>\n                                <Grid item xs={4}>\n                                    {/* <div style={{ color: 'red' }}>{serviceNameError}</div> */}\n                                    <TextField\n                                        required\n                                        error={ifServiceError}\n                                        id=\"outlined-required\"\n                                        label=\"Service Name\"\n                                        defaultValue={serviceName}\n                                        onChange={handleNameChange}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '30ch' }}\n                                        placeholder=\"Car Pool, Accomodation etc\"\n                                        helperText={serviceNameError}\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    />\n                                    <FormHelperText style={{ color: 'red' }}></FormHelperText>\n                                </Grid>\n                                <Grid item xs={4} alignItems=\"right\">\n                                    {/* <div style={{ color: 'red' }}>{availabilityError}</div> */}\n                                    <Button\n                                        color=\"primary\"\n                                        variant=\"contained\"\n                                        onClick={handleTogglePicker}\n                                        size=\"large\"\n                                    >\n                                        Select Availability\n                                    </Button>\n                                    <DatePicker\n                                        popperProps={{\n                                            positionFixed: true,\n                                        }}\n                                        selected={availability}\n                                        onChange={handleAvailabilityChange}\n                                        // todayButton={\"Today\"}\n                                        open={datePickerIsOpen}\n                                        onClickOutside={handleTogglePicker}\n                                        showOverlay\n                                        confirmBtnText=\"OK\"\n                                        cancelBtnText=\"Cancel\"\n                                    />\n                                    <FormHelperText>\n                                        *Only dates from future are valid\n                                    </FormHelperText>\n                                    <FormHelperText style={{ color: 'red' }}>\n                                        {availabilityError}\n                                    </FormHelperText>\n                                </Grid>\n                            </Grid>\n\n                            <Grid\n                                container\n                                rowSpacing={6}\n                                columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n                                zIndex={3}\n                                justify-content=\"center\"\n                            >\n                                <Grid item xs={3}>\n                                    {/* <div style={{ color: 'red' }}>{categoryError}</div> */}\n                                    <TextField\n                                        required\n                                        error={ifCategoryError}\n                                        id=\"outlined-required\"\n                                        label=\"Category Name\"\n                                        defaultValue={category}\n                                        onChange={handleCategoryChange}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '50ch' }}\n                                        helperText={categoryError}\n                                    />\n                                </Grid>\n                                <Grid item xs={3}></Grid>\n                                <Grid item xs={3}>\n                                    {/* <div style={{ color: 'red' }}>{descriptionError}</div> */}\n                                    <TextField\n                                        required\n                                        error={ifDescriptionError}\n                                        id=\"outlined-required\"\n                                        label=\"Description\"\n                                        defaultValue={description}\n                                        onChange={handleDescriptionChange}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '50ch' }}\n                                        helperText={descriptionError}\n                                    />\n                                </Grid>\n                            </Grid>\n                            <Grid container rowSpacing={4} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n                                <Grid item xs={6}>\n                                    <FormGroup>\n                                        <FormControlLabel\n                                            control={<Checkbox />}\n                                            label=\"Use my profile address\"\n                                            onChange={handleSetCheck}\n                                        />\n                                    </FormGroup>\n                                </Grid>\n                            </Grid>\n                            <Grid\n                                container\n                                rowSpacing={1}\n                                columnSpacing={{ xs: 3, sm: 3, md: 3 }}\n                                zIndex={1}\n                            >\n                                <Grid item xs={6}>\n                                    {/* <div style={{ color: 'red' }}>{addressError}</div> */}\n                                    <TextField\n                                        required\n                                        error={ifAddressError}\n                                        id=\"outlined-required\"\n                                        label=\"Address\"\n                                        value={address}\n                                        onChange={handleAddressChange}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '50ch' }}\n                                        helperText={addressError}\n                                    />\n                                </Grid>\n                                <Grid item xs={6}>\n                                    {/* <div style={{ color: 'red' }}>{cityError}</div> */}\n                                    <TextField\n                                        required\n                                        error={ifCityError}\n                                        id=\"outlined-required\"\n                                        label=\"City\"\n                                        value={city}\n                                        onChange={handleCityChange}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '50ch' }}\n                                        helperText={cityError}\n                                    />\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <TextField\n                                        label=\"Select State\"\n                                        name=\"state\"\n                                        onChange={handleStateChange}\n                                        required\n                                        select\n                                        SelectProps={{ native: true }}\n                                        value={state}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '50ch' }}\n                                        InputLabelProps={{ shrink: true }}\n                                    >\n                                        {stateArray.map((option) => (\n                                            <option key={option.label} value={option.value}>\n                                                {option.value}\n                                            </option>\n                                        ))}\n                                    </TextField>\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <TextField\n                                        label=\"Select Country\"\n                                        name=\"country\"\n                                        onChange={handleCountryChange}\n                                        required\n                                        select\n                                        SelectProps={{ native: true }}\n                                        value={country}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '50ch' }}\n                                        InputLabelProps={{ shrink: true }}\n                                    >\n                                        {countryArray.map((option) => (\n                                            <option key={option.label} value={option.value}>\n                                                {option.value}\n                                            </option>\n                                        ))}\n                                    </TextField>\n                                </Grid>\n                            </Grid>\n                            <Grid container rowSpacing={4} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n                                <Grid item xs={3}>\n                                    {/* <div style={{ color: 'red' }}>{zipcodeError}</div> */}\n                                    <TextField\n                                        required\n                                        error={ifZipcodeError}\n                                        id=\"outlined-required-input\"\n                                        label=\"Zipcode\"\n                                        value={zipcode}\n                                        onChange={handleZipcodeChange}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '50ch' }}\n                                        InputLabelProps={{ shrink: zipcode ? true : false }}\n                                        helperText={zipcodeError}\n                                    />\n                                </Grid>\n                                <Grid item xs={3}></Grid>\n                                <Grid item xs={1}>\n                                    <TextField\n                                        id=\"outlined-read-only-input\"\n                                        sx={{ m: 1 }}\n                                        value={dialCode}\n                                        style={{ width: 70 }}\n                                    />\n                                </Grid>\n                                <Grid item xs={3}>\n                                    {/* <div style={{ color: 'red' }}>{phoneNumError}</div> */}\n                                    <TextField\n                                        required\n                                        error={ifPhoneNumError}\n                                        id=\"outlined-required-input\"\n                                        label=\"Phone Number\"\n                                        value={phoneNum}\n                                        onChange={handlePhoneNumChange}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '41ch' }}\n                                        helperText={phoneNumError}\n                                    />\n                                </Grid>\n                            </Grid>\n                            <Divider sx={{ pt: 4 }} />\n                            <Grid\n                                container\n                                rowSpacing={1}\n                                columnSpacing={{ xs: 3, sm: 3, md: 3 }}\n                                zIndex={1}\n                                paddingTop={3}\n                            >\n                                <Grid item xs={3}>\n                                    <input type=\"file\" onChange={handleImageUpload} />\n                                </Grid>\n                                <Grid item xs={1}></Grid>\n                                <Grid item xs={3}>\n                                    <Button\n                                        color=\"primary\"\n                                        variant=\"contained\"\n                                        size=\"medium\"\n                                        onClick={handleImageChange}\n                                    >\n                                        Upload Image\n                                    </Button>\n                                </Grid>\n                                <Grid item xs={2}></Grid>\n                                <Grid item xs={3}>\n                                    <Button\n                                        color=\"primary\"\n                                        variant=\"contained\"\n                                        onClick={handleSubmit}\n                                        size=\"medium\"\n                                    >\n                                        Save details\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </CardContent>\n                    </Card>\n                </form>\n            </Box>\n        </Box>\n    );\n};\nconst mapStateToProps = ({ userProfileReducer }) => ({\n    userProfileReducer,\n});\nconst mapDispatchToProps = {};\n\nconst ConnectedAddServiceCard = connect(mapStateToProps, mapDispatchToProps)(AddServiceCard);\n\nexport default ConnectedAddServiceCard;\n","import * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Container, Grid, Pagination } from '@material-ui/core';\nimport AddServiceCard from '../../components/givehelp/AddServiceCard';\n\nconst AddService = () => (\n    <>\n        <Helmet>\n            <title>WeCare</title>\n        </Helmet>\n        <Box\n            sx={{\n                backgroundColor: 'background.default',\n                minHeight: '100%',\n                py: 3,\n            }}\n        >\n            <Container maxWidth=\"lg\">\n                <Box sx={{ pt: 3 }}>\n                    <AddServiceCard />\n                </Box>\n                <Box\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'center',\n                        pt: 3,\n                    }}\n                ></Box>\n            </Container>\n        </Box>\n    </>\n);\n\nexport default AddService;\n","import * as React from 'react';\nimport { Box, Card, CardContent, CardHeader, Divider, Button, Grid } from '@material-ui/core';\nimport Stack from '@mui/material/Stack';\nimport { Link } from 'react-router-dom';\nconst giveHelpLogo =\n    'https://firebasestorage.googleapis.com/v0/b/cmpe295-wecare.appspot.com/o/givehelp-landing-page-logo.jpeg?alt=media&token=e39dac41-4437-473c-bfaf-7939037ec9ed';\n\nconst LandingPageCard = (props) => (\n    <Box {...props}>\n        <Box\n            sx={{\n                width: 900,\n                height: 700,\n                p: 1,\n            }}\n        >\n            <Card\n                sx={{\n                    height: 750,\n                    maxWidth: 900,\n                }}\n            >\n                <CardHeader\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'flex-start',\n                    }}\n                    titleTypographyProps={{ variant: 'h2' }}\n                    subheader=\"select from below type resource/service to enter details\"\n                    title=\"Select type\"\n                />\n                <Divider />\n                <CardContent>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'flex-start',\n                        }}\n                    >\n                        <Link to=\"/app/givehelp/addresource\">\n                            <Button color=\"primary\" variant=\"contained\">\n                                Add a Resource\n                            </Button>\n                        </Link>\n                    </Box>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'flex-start',\n                            pt: 6,\n                        }}\n                    >\n                        <Link to=\"/app/givehelp/addservice\">\n                            <Button color=\"primary\" variant=\"contained\">\n                                Add a Service\n                            </Button>\n                        </Link>\n                    </Box>\n                    <Divider sx={{ pt: 3 }} />\n                    <div>\n                        <img\n                            src={giveHelpLogo}\n                            alt=\"GiveHelp logo\"\n                            style={{\n                                width: 865,\n                                verticalAlign: 'center',\n                            }}\n                        />\n                    </div>\n                </CardContent>\n            </Card>\n        </Box>\n    </Box>\n);\n\nexport default LandingPageCard;\n","import * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Container, Grid, Pagination } from '@material-ui/core';\nimport LandingPageCard from '../../components/givehelp/LandingPageCard';\n\nconst LandingPage = () => (\n    <>\n        <Helmet>\n            <title>WeCare</title>\n        </Helmet>\n        <Box\n            sx={{\n                backgroundColor: 'background.default',\n                minHeight: '100%',\n                py: 3,\n            }}\n        >\n            <Container maxWidth=\"lg\">\n                <Box sx={{ pt: 3 }}>\n                    <LandingPageCard />\n                </Box>\n                <Box\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'center',\n                        pt: 3,\n                    }}\n                ></Box>\n            </Container>\n        </Box>\n    </>\n);\n\nexport default LandingPage;\n","import * as React from 'react';\nimport {\n    Box,\n    Button,\n    Card,\n    CardContent,\n    CardHeader,\n    TextField,\n    Divider,\n    FormControlLabel,\n    FormGroup,\n    Grid,\n} from '@material-ui/core';\nimport Checkbox from '@mui/material/Checkbox';\nimport { useState, FunctionComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { getStorage, ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport countries from 'i18n-iso-countries';\nimport CountryData from './CountryData.json';\nconst { getStates } = require('country-state-picker');\nconst { getCode } = require('country-list');\n\n// const Input = styled('input')({\n//     display: 'none',\n//   });\n\n// const Alert = React.forwardRef(function Alert(props, ref) {\n//     return <MuiAlert elevation={6}  ref={ref} variant=\"filled\" {...props} />;\n//   });\n\nconst metadata = {\n    contentType: 'image/jpeg',\n};\n\nconst AddResourceCard: FunctionComponent<any> = ({ userProfileReducer = {}, ...props }) => {\n    const [check, setCheck] = useState(false);\n    const userId = userProfileReducer._id;\n    const [resourceName, setResourceName] = useState('');\n    const [category, setCategory] = useState('');\n    const [description, setDescription] = useState('');\n    const [phoneNum, setPhoneNum] = useState('');\n    const [dialCode, setDialCode] = useState('+1');\n    const [address, setAddress] = useState('');\n    const [sku, setSku] = useState(null);\n    const [city, setCity] = useState('');\n    const [state, setState] = useState('California');\n    const [zipcode, setZipcode] = useState(null);\n    const [country, setCountry] = useState('United States of America');\n    const [countryNames, setCountryNames] = useState(CountryData);\n    const [code, setCode] = useState('us');\n    const [showErrorMsg, setShowErrorMsg] = React.useState('');\n    const storage = getStorage();\n    const [image, setImage] = useState(null);\n    const [url, setUrl] = useState('');\n    const [fileUploadTitle, setFileUploadTitle] = React.useState('Upload Resource Pic');\n    const [findImage, setFindImage] = React.useState(false);\n\n    const [resourceNameError, setResourceNameError] = useState('');\n    const [ifResourceError, setIfResourceError] = useState(false);\n    const [categoryError, setCategoryError] = useState('');\n    const [ifCategoryError, setIfCategoryError] = useState(false);\n    const [descriptionError, setDescriptionError] = useState('');\n    const [ifDescriptionError, setIfDescriptionError] = useState(false);\n    const [phoneNumError, setPhoneNumError] = useState('');\n    const [ifPhoneNumError, setIfPhoneNumError] = useState(false);\n    const [addressError, setAddressError] = useState('');\n    const [ifAddressError, setIfAddressError] = useState(false);\n    const [skuError, setSkuError] = useState('');\n    const [ifSkuError, setIfSkuError] = useState(false);\n    const [cityError, setCityError] = useState('');\n    const [ifCityError, setIfCityError] = useState(false);\n    const [stateError, setStateError] = useState('');\n    const [zipcodeError, setZipcodeError] = useState('');\n    const [ifZipcodeError, setIfZipcodeError] = useState(false);\n    const [countryError, setCountryError] = useState('');\n\n    const validateForm = () => {\n        if (resourceName === '' || resourceName === null) {\n            setResourceNameError('Please enter resource name');\n            setIfResourceError(true);\n            return false;\n        } else if (category === '' || category === null) {\n            setCategoryError('Please enter a category');\n            setIfCategoryError(true);\n            return false;\n        } else if (sku === null || (sku?.toString ? sku.toString() : sku) === '0') {\n            setSkuError('Please enter valid quantity');\n            setIfSkuError(true);\n            return false;\n        } else if (sku < 0) {\n            setSkuError('Please enter a valid quantity');\n            setIfSkuError(true);\n            return false;\n        } else if (description === '' || description === null) {\n            setDescriptionError('Please enter description of resource');\n            setIfDescriptionError(true);\n            return false;\n        } else if (address === '' || address === null) {\n            setAddressError('Please enter a valid address');\n            setIfAddressError(true);\n            return false;\n        } else if (city === '' || city === null) {\n            setCityError('Please enter your city of residence');\n            setIfCityError(true);\n            return false;\n        } else if (state === '' || state === null) {\n            console.log(state);\n            setStateError('Please enter your state of residence');\n            return false;\n        } else if (country === '' || country === null) {\n            setCountryError('Please enter your country of residence');\n            return false;\n        } else if (zipcode === null || zipcode === '') {\n            setZipcodeError('Please enter your zipcode');\n            setIfZipcodeError(true);\n            return false;\n        } else if ((zipcode?.toString ? zipcode.toString() : zipcode)?.length != 5) {\n            setZipcodeError('Please enter a valid zipcode!');\n            setIfZipcodeError(true);\n            return false;\n        } else if (phoneNum === '' || phoneNum === null) {\n            setPhoneNumError('Please enter your contact number');\n            setIfPhoneNumError(true);\n            return false;\n        } else if ((phoneNum?.toString ? phoneNum.toString() : phoneNum)?.length != 10) {\n            setPhoneNumError('Please enter a valid phone number!');\n            setIfPhoneNumError(true);\n            return false;\n        }\n        return true;\n    };\n\n    countries.registerLocale(require('i18n-iso-countries/langs/en.json'));\n    const countryObj = countries.getNames('en', { select: 'official' });\n    const countryArray = Object.entries(countryObj).map(([key, value]) => {\n        return {\n            label: key,\n            value: value,\n        };\n    });\n\n    const handleNameChange = (e) => {\n        setResourceNameError('');\n        setIfResourceError(false);\n        setResourceName(e.target.value);\n    };\n\n    const handleImageUpload = (event) => {\n        console.log('Reached upload image task');\n        const file = event.target.files[0];\n        if (file == null || !file) {\n            console.log('No image');\n            setShowErrorMsg('Error: No image available');\n            setFindImage(false);\n        } else {\n            setImage(file);\n            setFindImage(true);\n            console.log(file);\n            const storageRef = ref(\n                storage,\n                `/${userProfileReducer.userName}/resources/${file.name}`\n            );\n            uploadBytes(storageRef, file).then((snapshot) => {\n                console.log('Uploaded a blob or file!', snapshot.metadata);\n                setFileUploadTitle(snapshot.metadata.name);\n                setShowErrorMsg('Image Uploaded successfully to firebase!');\n                getDownloadURL(storageRef)\n                    .then((url) => {\n                        console.log(url);\n                        setUrl(url);\n                        console.log('url', url);\n                    })\n                    .catch((error) => {\n                        switch (error.code) {\n                            case 'storage/object-not-found':\n                                setUrl('');\n                                break;\n                        }\n                    });\n            });\n        }\n    };\n\n    const handleImageChange = (e) => {\n        console.log('Reached image change');\n        if (!findImage) {\n            console.log('Image upload failed!');\n            alert('Image upload failed! Please try again');\n        } else {\n            console.log('Image uploaded successfully');\n            alert('Image uploaded to firebase!');\n        }\n    };\n\n    const handleSetCheck = (e) => {\n        setAddressError('');\n        setCityError('');\n        setStateError('');\n        setCountryError('');\n        setZipcodeError('');\n        setPhoneNumError('');\n        setCheck(!check);\n        if (!check) {\n            const { address = {}, profile = {} } = userProfileReducer;\n            const obj = countryNames.find(({ code }) => code === getCode(address.country));\n            setAddress(address.location);\n            setCity(address.city);\n            setCountry(address.country);\n            setZipcode(address.zipCode);\n            setState(address.state);\n            setCode(getCode(address.country));\n            setDialCode(obj.dial_code);\n            setPhoneNum(profile.phoneNumber);\n        } else {\n            setAddress('');\n            setCity('');\n            setCountry('United States of America');\n            setZipcode('');\n            setState('');\n            setPhoneNum('');\n        }\n    };\n\n    const handleCategoryChange = (e) => {\n        setCategoryError('');\n        setIfCategoryError(false);\n        setCategory(e.target.value);\n    };\n\n    const handleDescriptionChange = (e) => {\n        setDescriptionError('');\n        setIfDescriptionError(false);\n        setDescription(e.target.value);\n    };\n\n    const handlePhoneNumChange = (e) => {\n        setPhoneNumError('');\n        setIfPhoneNumError(false);\n        setPhoneNum(e.target.value);\n    };\n\n    const handleAddressChange = (e) => {\n        setAddressError('');\n        setIfAddressError(false);\n        setAddress(e.target.value);\n    };\n\n    const handleSkuChange = (e) => {\n        setSkuError('');\n        setIfSkuError(false);\n        setSku(e.target.value);\n    };\n\n    const handleCityChange = (e) => {\n        setCityError('');\n        setIfCityError(false);\n        setCity(e.target.value);\n    };\n\n    const handleStateChange = (e) => {\n        setStateError('');\n        setState(e.target.value);\n    };\n\n    const handleZipcodeChange = (e) => {\n        setZipcodeError('');\n        setIfZipcodeError(false);\n        setZipcode(e.target.value);\n    };\n\n    const handleCountryChange = (e) => {\n        setCountryError('');\n        setCountry(e.target.value);\n        const obj = countryNames.find(({ name }) => name === e.target.value);\n        setCode(getCode(e.target.value));\n        setDialCode(obj.dial_code);\n    };\n\n    const stateObj = getStates(code.toLowerCase());\n    const stateArray = Object.entries(stateObj).map(([key, value]) => {\n        return {\n            label: value,\n            value: value,\n        };\n    });\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const isValid = validateForm();\n        console.log(isValid);\n        if (isValid) {\n            const res = await fetch('/api/givehelp/resource', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    UserId: userId,\n                    Resource_Name: resourceName,\n                    Category: category,\n                    Description: description,\n                    Phone_Number: phoneNum,\n                    Address: address,\n                    SKU: sku,\n                    City: city,\n                    State: state,\n                    Zipcode: zipcode,\n                    Country: country,\n                    ImageUrl: url,\n                }),\n            });\n\n            const data = await res.json();\n            console.log(data);\n\n            if (res.status === 200) {\n                window.alert('Resource added!');\n                console.log('Resource added!');\n                window.location.reload();\n            } else if (!findImage) {\n                window.alert('Please select an image to upload!');\n                console.log('Please select an image to upload!');\n            } else {\n                window.alert('Failed to upload resource data! Please try again.');\n                console.log('Failed to upload resource data! Please try again.');\n                window.location.reload();\n            }\n        }\n    };\n\n    return (\n        <Box {...props}>\n            <Box\n                sx={{\n                    display: 'flex',\n                    justifyContent: 'flex-start',\n                    width: 500,\n                    height: 700,\n                    p: 1,\n                }}\n            >\n                <form autoComplete=\"off\" noValidate {...props} method=\"POST\">\n                    <Card\n                        sx={{\n                            height: 750,\n                            width: 900,\n                            justifyContent: 'center',\n                        }}\n                    >\n                        <CardHeader\n                            sx={{\n                                display: 'flex',\n                                justifyContent: 'flex-start',\n                            }}\n                            titleTypographyProps={{ variant: 'h2' }}\n                            subheader=\"update the resource/service details you would like to provide\"\n                            title=\"Give Help\"\n                        />\n                        <Divider />\n                        <CardContent>\n                            <Grid container rowSpacing={1} columnSpacing={{ xs: 3, sm: 9, md: 3 }}>\n                                <Grid item xs={3}>\n                                    <TextField\n                                        id=\"filled-basic\"\n                                        label=\"Type\"\n                                        variant=\"filled\"\n                                        sx={{ m: 1, width: '50ch' }}\n                                        value=\"Resource\"\n                                    />\n                                </Grid>\n                                <Grid item xs={3} />\n                                <Grid item xs={3}>\n                                    {/* <div style={{ color: 'red' }}>{resourceNameError}</div> */}\n                                    <TextField\n                                        required\n                                        error={ifResourceError}\n                                        label=\"Resource Name\"\n                                        defaultValue={resourceName}\n                                        onChange={handleNameChange}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '50ch' }}\n                                        helperText={resourceNameError}\n                                    />\n                                </Grid>\n                            </Grid>\n                            <Grid container rowSpacing={1} columnSpacing={{ xs: 3, sm: 9, md: 3 }}>\n                                <Grid item xs={3}>\n                                    {/* <div style={{ color: 'red' }}>{categoryError}</div> */}\n                                    <TextField\n                                        required\n                                        error={ifCategoryError}\n                                        id=\"outlined-required\"\n                                        label=\"Category Name\"\n                                        defaultValue={category}\n                                        onChange={handleCategoryChange}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '50ch' }}\n                                        helperText={categoryError}\n                                    />\n                                </Grid>\n                                <Grid item xs={3} />\n                                <Grid item xs={3}>\n                                    {/* <div style={{ color: 'red' }}>{skuError}</div> */}\n                                    <TextField\n                                        required\n                                        error={ifSkuError}\n                                        id=\"outlined-number\"\n                                        label=\"Quantity\"\n                                        type=\"number\"\n                                        defaultValue={sku}\n                                        onChange={handleSkuChange}\n                                        sx={{ m: 1, width: '50ch' }}\n                                        placeholder=\"Quanity should not be less than or equal to 0.\"\n                                        helperText={skuError}\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    />\n                                </Grid>\n                            </Grid>\n                            <Grid container rowSpacing={1} columnSpacing={{ xs: 3, sm: 9, md: 3 }}>\n                                <Grid item xs={4}>\n                                    {/* <div style={{ color: 'red' }}>{descriptionError}</div> */}\n                                    <TextField\n                                        id=\"outlined-decsription-input\"\n                                        error={ifDescriptionError}\n                                        label=\"Description\"\n                                        value={description}\n                                        onChange={handleDescriptionChange}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '106ch' }}\n                                        helperText={descriptionError}\n                                    />\n                                </Grid>\n                            </Grid>\n                            <Grid container rowSpacing={4} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n                                <Grid item xs={6}>\n                                    <FormGroup>\n                                        <FormControlLabel\n                                            control={<Checkbox />}\n                                            label=\"Use my profile address\"\n                                            onChange={handleSetCheck}\n                                        />\n                                    </FormGroup>\n                                </Grid>\n                            </Grid>\n                            <Grid container rowSpacing={4} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n                                <Grid item xs={3}>\n                                    {/* <div style={{ color: 'red' }}>{addressError}</div> */}\n                                    <TextField\n                                        required\n                                        error={ifAddressError}\n                                        id=\"outlined-required\"\n                                        label=\"Address\"\n                                        value={address}\n                                        onChange={handleAddressChange}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '50ch' }}\n                                        helperText={addressError}\n                                    />\n                                </Grid>\n                                <Grid item xs={3} />\n                                <Grid item xs={3}>\n                                    {/* <div style={{ color: 'red' }}>{cityError}</div> */}\n                                    <TextField\n                                        required\n                                        error={ifCityError}\n                                        id=\"outlined-required\"\n                                        label=\"City\"\n                                        value={city}\n                                        onChange={handleCityChange}\n                                        variant=\"outlined\"\n                                        helperText={cityError}\n                                        sx={{ m: 1, width: '50ch' }}\n                                    />\n                                </Grid>\n                            </Grid>\n                            <Grid container rowSpacing={4} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n                                <Grid item xs={3}>\n                                    <TextField\n                                        label=\"Select State\"\n                                        name=\"state\"\n                                        onChange={handleStateChange}\n                                        required\n                                        select\n                                        SelectProps={{ native: true }}\n                                        value={state}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '50ch' }}\n                                        InputLabelProps={{ shrink: true }}\n                                    >\n                                        {/*<option key={'none'} value=\"\">*/}\n                                        {/*    Please Select State*/}\n                                        {/*</option>*/}\n                                        {stateArray.map((option) => (\n                                            <option key={option.label} value={option.value}>\n                                                {option.value}\n                                            </option>\n                                        ))}\n                                    </TextField>\n                                </Grid>\n                                <Grid item xs={3} />\n                                <Grid item xs={3}>\n                                    {/* <div style={{ color: 'red' }}>{countryError}</div> */}\n                                    <TextField\n                                        label=\"Select Country\"\n                                        name=\"country\"\n                                        onChange={handleCountryChange}\n                                        required\n                                        select\n                                        SelectProps={{ native: true }}\n                                        value={country}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '400px' }}\n                                        InputLabelProps={{ shrink: true }}\n                                    >\n                                        {countryArray.map((option) => (\n                                            <option key={option.label} value={option.value}>\n                                                {option.value}\n                                            </option>\n                                        ))}\n                                    </TextField>\n                                </Grid>\n                            </Grid>\n                            <Grid container rowSpacing={4} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n                                <Grid item xs={3}>\n                                    {/* <div style={{ color: 'red' }}>{zipcodeError}</div> */}\n                                    <TextField\n                                        required\n                                        error={ifZipcodeError}\n                                        id=\"outlined-required-input\"\n                                        label=\"Zipcode\"\n                                        value={zipcode}\n                                        onChange={handleZipcodeChange}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '400px' }}\n                                        InputLabelProps={{ shrink: zipcode ? true : false }}\n                                        helperText={zipcodeError}\n                                    />\n                                </Grid>\n                                <Grid item xs={3} />\n                                <Grid item xs={1}>\n                                    <TextField\n                                        id=\"outlined-read-only-input\"\n                                        sx={{ m: 1 }}\n                                        value={dialCode}\n                                        style={{ width: 70 }}\n                                    />\n                                </Grid>\n                                <Grid item xs={3}>\n                                    {/* <div style={{ color: 'red' }}>{phoneNumError}</div> */}\n                                    <TextField\n                                        required\n                                        error={ifPhoneNumError}\n                                        id=\"outlined-required-input\"\n                                        label=\"Phone Number\"\n                                        value={phoneNum}\n                                        onChange={handlePhoneNumChange}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '41ch' }}\n                                        helperText={phoneNumError}\n                                    />\n                                </Grid>\n                            </Grid>\n                            <Divider sx={{ pt: 4 }} />\n                            <Grid\n                                container\n                                rowSpacing={4}\n                                columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n                                zIndex={1}\n                                paddingTop={3}\n                            >\n                                <Grid item xs={3}>\n                                    <input type=\"file\" onChange={handleImageUpload} />\n\n                                    {/* {showErrorMsg? (\n                                        <Alert severity=\"error\">This is an error message!</Alert>\n                                    ): ''} */}\n                                    {/* <Modal setOpenModal={showModal} onClose={() => setShowModal(false)} /> */}\n                                </Grid>\n                                <Grid item xs={1} />\n                                <Grid item xs={3}>\n                                    <Button\n                                        color=\"primary\"\n                                        variant=\"contained\"\n                                        size=\"medium\"\n                                        onClick={handleImageChange}\n                                    >\n                                        Upload Image\n                                    </Button>\n                                </Grid>\n\n                                <Grid item xs={2} />\n                                <Grid item xs={3}>\n                                    <Button\n                                        color=\"primary\"\n                                        variant=\"contained\"\n                                        onClick={handleSubmit}\n                                        size=\"medium\"\n                                    >\n                                        Save details\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </CardContent>\n                    </Card>\n                </form>\n            </Box>\n        </Box>\n    );\n};\nconst mapStateToProps = ({ userProfileReducer }) => ({\n    userProfileReducer,\n});\nconst mapDispatchToProps = {};\n\nconst ConnectedAddResourceCard = connect(mapStateToProps, mapDispatchToProps)(AddResourceCard);\n\nexport default ConnectedAddResourceCard;\n","import * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Container, Grid, Pagination } from '@material-ui/core';\nimport AddResourceCard from '../../components/givehelp/AddResourceCard';\n\nconst AddResource = () => (\n    <>\n        <Helmet>\n            <title>WeCare</title>\n        </Helmet>\n        <Box\n            sx={{\n                backgroundColor: 'background.default',\n                minHeight: '100%',\n                py: 3,\n            }}\n        >\n            <Container maxWidth=\"lg\">\n                <Box sx={{ pt: 3 }}>\n                    <AddResourceCard />\n                </Box>\n                <Box\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'center',\n                        pt: 3,\n                    }}\n                ></Box>\n            </Container>\n        </Box>\n    </>\n);\n\nexport default AddResource;\n","/*global google*/\nimport React, { Component, useRef, useEffect, useState, FunctionComponent } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport {\n    Box,\n    Grid,\n    FormControlLabel,\n    FormGroup,\n    Container,\n    Typography,\n    Card,\n    CardContent,\n    TextField,\n    Divider,\n    CardHeader,\n    Table,\n    TableBody,\n    TableCell,\n    TableRow,\n    TableHead,\n    InputAdornment,\n    CardActions,\n    SvgIcon,\n    Button,\n    CardMedia,\n    Pagination,\n    Dialog,\n    DialogActions,\n    DialogTitle,\n    DialogContent,\n    TablePagination,\n} from '@material-ui/core';\nimport axios from 'axios';\nimport { withRouter, useLocation, Link, useHistory } from 'react-router-dom';\nimport { getStorage, ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport countries from 'i18n-iso-countries';\nconst { getStates } = require('country-state-picker');\nconst { getCode } = require('country-list');\nimport CountryData from './CountryData.json';\nconst metadata = {\n    contentType: 'image/jpeg',\n};\nconst ManageTransactionsCard: FunctionComponent<any> = ({ userProfileReducer, props }) => {\n    const token = (typeof window !== 'undefined' && window.localStorage.getItem('token')) || null;\n    // set the with credentials to true\n    axios.defaults.withCredentials = true;\n    const history = useHistory();\n    const [givedata, setGiveData] = useState(null);\n    const [getdata, setGetData] = useState(null);\n    const [error, setError] = useState(null);\n    const [service, setService] = useState(null);\n    const UserId = userProfileReducer.id;\n    const [check, setCheck] = useState(false);\n    const userId = userProfileReducer.id;\n    const [resourceName, setResourceName] = useState('');\n    const [category, setCategory] = useState('');\n    const [description, setDescription] = useState('');\n    const [phoneNum, setPhoneNum] = useState('');\n\n    const [dialCode, setDialCode] = useState('+1');\n    const [address, setAddress] = useState('');\n    const [sku, setSku] = useState(0);\n    const [city, setCity] = useState('');\n    const [state, setState] = useState('');\n    const [zipcode, setZipcode] = useState(null);\n    const [country, setCountry] = useState('United States of America');\n    const [countryNames, setCountryNames] = useState(CountryData);\n    const [code, setCode] = useState('us');\n    const [showErrorMsg, setShowErrorMsg] = React.useState('');\n    const storage = getStorage();\n    const [image, setImage] = useState(null);\n    const [url, setUrl] = useState('');\n    const [fileUploadTitle, setFileUploadTitle] = React.useState('Upload Resource Pic');\n    const [findImage, setFindImage] = React.useState(false);\n\n    const [resourceNameError, setResourceNameError] = useState('');\n    const [availabilityError, setAvailabilityError] = useState('');\n    const [categoryError, setCategoryError] = useState('');\n    const [descriptionError, setDescriptionError] = useState('');\n    const [phoneNumError, setPhoneNumError] = useState('');\n    const [addressError, setAddressError] = useState('');\n    const [skuError, setSkuError] = useState('');\n    const [cityError, setCityError] = useState('');\n    const [stateError, setStateError] = useState('');\n    const [zipcodeError, setZipcodeError] = useState('');\n    const [countryError, setCountryError] = useState('');\n    const [serviceName, setServiceName] = useState('');\n    const [availability, setAvailability] = useState(new Date());\n    const [datePickerIsOpen, togglePicker] = useState(false);\n    let validateFormResource = () => {\n        if (resourceName === '' || resourceName === null) {\n            setResourceNameError('Please enter resource name');\n            return false;\n        } else if (category === '' || category === null) {\n            setCategoryError('Please enter a category');\n            return false;\n        } else if (sku.toString() === '0' || sku === null) {\n            setSkuError('Please enter valid quantity');\n            return false;\n        } else if (sku < 0) {\n            setSkuError('Please enter a valid quantity');\n            return false;\n        } else if (description === '' || description === null) {\n            setDescriptionError('Please enter description of resource');\n            return false;\n        } else if (address === '' || address === null) {\n            setAddressError('Please enter a valid address');\n            return false;\n        } else if (city === '' || city === null) {\n            setCityError('Please enter your city of residence');\n            return false;\n        } else if (state === '' || city === null) {\n            setCityError('Please enter your state of residence');\n            return false;\n        } else if (country === '' || country === null) {\n            setCountryError('Please enter your country of residence');\n            return false;\n        } else if (zipcode === null || zipcode === '') {\n            setZipcodeError('Please enter your zipcode');\n            return false;\n        } else if (zipcode.toString().length != 5) {\n            setZipcodeError('Please enter a valid zipcode!');\n            return false;\n        } else if (phoneNum === '' || phoneNum === null) {\n            setPhoneNumError('Please enter your contact number');\n            return false;\n        } else if (phoneNum.toString().length != 10) {\n            setPhoneNumError('Please enter a valid phone number!');\n            return false;\n        } else {\n            return true;\n        }\n    };\n    let validateForm = () => {\n        if (serviceName === '' || serviceName === null) {\n            setServiceNameError('Please enter service name');\n            return false;\n        } else if (availability.getTime() < today.getTime()) {\n            setAvailabilityError('Please select a valid date!');\n        } else if (category === '' || category === null) {\n            setCategoryError('Please enter a category');\n            return false;\n        } else if (description === '' || description === null) {\n            setDescriptionError('Please enter description of service');\n            return false;\n        } else if (address === '' || address === null) {\n            setAddressError('Please enter a valid address');\n            return false;\n        } else if (city === '' || city === null) {\n            setCityError('Please enter your city of residence');\n            return false;\n        } else if (state === '' || city === null) {\n            setCityError('Please enter your state of residence');\n            return false;\n        } else if (country === '' || country === null) {\n            setCountryError('Please enter your country of residence');\n            return false;\n        } else if (zipcode === null || zipcode === '') {\n            setZipcodeError('Please enter your zipcode');\n            return false;\n        } else if (zipcode.toString().length != 5) {\n            setZipcodeError('Please enter a valid zipcode!');\n            return false;\n        } else if (phoneNum === '' || phoneNum === null) {\n            setPhoneNumError('Please enter your contact number');\n            return false;\n        } else if (phoneNum.toString().length != 10) {\n            setPhoneNumError('Please enter a valid phone number!');\n            return false;\n        } else {\n            return true;\n        }\n    };\n\n    countries.registerLocale(require('i18n-iso-countries/langs/en.json'));\n    const countryObj = countries.getNames('en', { select: 'official' });\n    const countryArray = Object.entries(countryObj).map(([key, value]) => {\n        return {\n            label: key,\n            value: value,\n        };\n    });\n\n    const handleNameChange = (e) => {\n        console.log(e.target.value);\n        setResourceNameError('');\n        setResourceName(e.target.value);\n    };\n    const handleServiceNameChange = (e) => {\n        console.log(e.target.value);\n        setServiceName(e.target.value);\n    };\n\n    const handleImageUpload = (event) => {\n        console.log('Reached upload image task');\n        var file = event.target.files[0];\n        if (file == null || !file) {\n            console.log('No image');\n            setShowErrorMsg('Error: No image available');\n            setFindImage(false);\n        } else {\n            setImage(file);\n            setFindImage(true);\n            console.log(file);\n            const storageRef = ref(\n                storage,\n                `/${userProfileReducer.userName}/resources/${file.name}`\n            );\n            uploadBytes(storageRef, file).then((snapshot) => {\n                console.log('Uploaded a blob or file!', snapshot.metadata);\n                setFileUploadTitle(snapshot.metadata.name);\n                setFindImage(true);\n                setShowErrorMsg('Image Uploaded successfully to firebase!');\n                getDownloadURL(storageRef)\n                    .then((url) => {\n                        console.log(url);\n                        setUrl(url);\n                        console.log('url', url);\n                    })\n                    .catch((error) => {\n                        switch (error.code) {\n                            case 'storage/object-not-found':\n                                setUrl('');\n                                break;\n                        }\n                    });\n            });\n        }\n    };\n\n    const handleImageChange = (e) => {\n        console.log('Reached image change');\n        if (!findImage) {\n            console.log('Image upload failed!');\n            alert('Image upload failed! Please try again');\n        } else {\n            console.log('Image uploaded successfully');\n            alert('Image uploaded to firebase!');\n        }\n    };\n\n    const handleSetCheck = (e) => {\n        setAddressError('');\n        setCityError('');\n        setStateError('');\n        setCountryError('');\n        setZipcodeError('');\n        setPhoneNumError('');\n        setCheck(!check);\n        if (!check) {\n            const { address = {}, profile = {} } = userProfileReducer;\n            const obj = countryNames.find(({ code }) => code === getCode(address.country));\n            setAddress(address.location);\n            setCity(address.city);\n            setCountry(address.country);\n            setZipcode(address.zipCode);\n            setState(address.state);\n            setCode(getCode(address.country));\n            setDialCode(obj.dial_code);\n            setPhoneNum(profile.phoneNumber);\n        } else {\n            setAddress('');\n            setCity('');\n            setCountry('');\n            setZipcode('');\n            setState('');\n            setPhoneNum('');\n        }\n    };\n\n    const handleCategoryChange = (e) => {\n        setCategoryError('');\n        setCategory(e.target.value);\n    };\n\n    const handleDescriptionChange = (e) => {\n        setDescriptionError('');\n        setDescription(e.target.value);\n    };\n\n    const handlePhoneNumChange = (e) => {\n        setPhoneNumError('');\n        setPhoneNum(e.target.value);\n    };\n\n    const handleAddressChange = (e) => {\n        setAddressError('');\n        setAddress(e.target.value);\n    };\n\n    const handleSkuChange = (e) => {\n        setSkuError('');\n        setSku(e.target.value);\n    };\n\n    const handleCityChange = (e) => {\n        setCityError('');\n        setCity(e.target.value);\n    };\n\n    const handleStateChange = (e) => {\n        setStateError('');\n        setState(e.target.value);\n    };\n\n    const handleZipcodeChange = (e) => {\n        setZipcodeError('');\n        setZipcode(e.target.value);\n    };\n\n    const handleCountryChange = (e) => {\n        setCountryError('');\n        setCountry(e.target.value);\n        const obj = countryNames.find(({ name }) => name === e.target.value);\n        setCode(getCode(e.target.value));\n        setDialCode(obj.dial_code);\n    };\n\n    const stateObj = getStates(code.toLowerCase());\n    const stateArray = Object.entries(stateObj).map(([key, value]) => {\n        return {\n            label: value,\n            value: value,\n        };\n    });\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const token = localStorage.getItem('token');\n        // set the with credentials to true\n        axios.defaults.withCredentials = true;\n        if (service?.type == 'resource') {\n            const isValid = validateFormResource();\n            console.log(isValid);\n\n            if (isValid) {\n                axios\n                    .post(\n                        '/api/gethelp/update_resource',\n                        {\n                            id: service?._id,\n                            UserId: userProfileReducer.id,\n                            Resource_Name: resourceName,\n                            Category: category,\n                            Description: description,\n                            Phone_Number: phoneNum,\n                            Address: address,\n                            SKU: sku,\n                            City: city,\n                            State: state,\n                            Zipcode: zipcode,\n                            Country: country,\n                            ImageUrl: url,\n                        },\n                        {\n                            headers: {\n                                authtoken: token,\n                            },\n                        }\n                    )\n                    .then(\n                        (response) => {\n                            //history.push('/app/mytransactions');\n                            //setOpenresource(false);\n\n                            handleTransactionSearch();\n                            // history.push('/app/mytransactions');\n                            //.filter((m) => m.Availability != 'false')\n                        },\n                        (error) => {\n                            alert('Failed to upload resource data! Please try again.');\n                            //console.log(\"Failed to upload resource data! Please try again.\");\n                            console.log(error);\n                            setError(error);\n                        }\n                    );\n            }\n        } else {\n            axios\n                .post(\n                    '/api/gethelp/update_service',\n                    {\n                        id: service?._id,\n                        UserId: userProfileReducer.id,\n                        Service_Name: serviceName,\n                        Category: category,\n                        Description: description,\n                        Phone_Number: phoneNum,\n                        Address: address,\n                        availableDate: availability,\n                        City: city,\n                        State: state,\n                        Zipcode: zipcode,\n                        Country: country,\n                        ImageUrl: url,\n                    },\n                    {\n                        headers: {\n                            authtoken: token,\n                        },\n                    }\n                )\n                .then(\n                    (response) => {\n                        //history.push('/app/mytransactions');\n                        //setOpenresource(false);\n                        handleTransactionSearch();\n                        //handleTransactionSearch();\n                        //history.push('/app/mytransactions');\n                        //.filter((m) => m.Availability != 'false')\n                    },\n                    (error) => {\n                        console.log('Failed to upload resource data! Please try again.');\n                        console.log(error);\n                        setError(error);\n                    }\n                );\n        }\n    };\n    React.useEffect(() => {\n        handleTransactionSearch();\n    }, []);\n\n    const [openresource, setOpenresource] = React.useState(false);\n    const [openservice, setOpenservice] = React.useState(false);\n\n    const handleTransactionSearch = () => {\n        const token = localStorage.getItem('token');\n        // set the with credentials to true\n        axios.defaults.withCredentials = true;\n        axios\n            .get(\n                '/api/gethelp/search/userid',\n                { params: { userid: userProfileReducer.id } },\n                {\n                    headers: {\n                        authtoken: token,\n                    },\n                }\n            )\n            .then(\n                (response) => {\n                    console.log(response?.data?.resources);\n                    setGiveData(response?.data?.resources.filter((m) => m.Availability != 'false'));\n                    setGetData(response?.data?.getresources);\n                    setOpenresource(false);\n                    setOpenservice(false);\n\n                    //.filter((m) => m.Availability != 'false')\n                },\n                (error) => {\n                    console.log(error);\n                    setError(error);\n                }\n            );\n    };\n    const handleEdit = (service) => {\n        setService(service);\n        if (service?.type == 'resource') {\n            setOpenresource(true);\n            setSku(service?.SKU);\n\n            setResourceName(service?.Name);\n        } else {\n            setOpenservice(true);\n            setServiceName(service?.Name);\n            setAvailability(new Date(new Date(service?.availableDate).toISOString()));\n        }\n\n        setAddress(service?.Address);\n        setCity(service?.City);\n        setCountry(service?.Country);\n        setZipcode(service?.Zipcode);\n        setState(service?.State);\n        setPhoneNum(service?.Phone_Number);\n\n        setCategory(service?.Category);\n        setDescription(service?.Description);\n        setUrl(service?.ImageUrl);\n    };\n\n    const handleImageUploadService = (event) => {\n        console.log('Reached upload image task');\n        var file = event.target.files[0];\n        if (file == null || !file) {\n            console.log('No image');\n            setShowErrorMsg('Error: No image available');\n        } else {\n            setImage(file);\n            console.log(file);\n            const storageRef = ref(\n                storage,\n                `/${userProfileReducer.userName}/services/${file.name}`\n            );\n            uploadBytes(storageRef, file).then((snapshot) => {\n                console.log('Uploaded a blob or file!', snapshot.metadata);\n                setFileUploadTitle(snapshot.metadata.name);\n                setFindImage(true);\n                setShowErrorMsg('Image Uploaded successfully to firebase!');\n                getDownloadURL(storageRef)\n                    .then((url) => {\n                        console.log(url);\n                        setUrl(url);\n                        console.log('url', url);\n                        setFindImage(true);\n                    })\n                    .catch((error) => {\n                        switch (error.code) {\n                            case 'storage/object-not-found':\n                                setUrl('');\n                                setFindImage(false);\n                                break;\n                        }\n                    });\n            });\n        }\n    };\n\n    const handleAvailabilityChange = (date) => {\n        setAvailability(date);\n    };\n\n    const handleTogglePicker = (e) => {\n        togglePicker(!datePickerIsOpen);\n    };\n\n    const handleCancel = () => {\n        setOpenresource(false);\n        setOpenservice(false);\n        //history.push('/app/mytransactions');\n    };\n    const handleDelete = (service) => {\n        console.log(service._id);\n        const token = localStorage.getItem('token');\n        // set the with credentials to true\n        axios.defaults.withCredentials = true;\n        axios.post('/api/gethelp/delete/id', { id: service._id, type: service.type }).then(\n            (response) => {\n                console.log(response);\n                //window.location.reload();\n                handleTransactionSearch();\n            },\n            (error) => {\n                console.log(error);\n                setError(error);\n            }\n        );\n    };\n    //Pagination gethelp\n    const [page, setPage] = React.useState(0);\n\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n    const [pageGive, setPageGive] = React.useState(0);\n    const [rowsPerPageGive, setRowsPerPageGive] = React.useState(5);\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n    //pagination Givehelp data\n    const handleChangePageGive = (event, newPage) => {\n        setPageGive(newPage);\n    };\n\n    const handleChangeRowsPerPageGive = (event) => {\n        setRowsPerPageGive(parseInt(event.target.value, 10));\n        setPageGive(0);\n    };\n\n    // Avoid a layout jump when reaching the last page with empty rows.\n    const emptyRows = page > 0 ? Math.max(0, (1 + page) * 5 - getdata?.length) : 0;\n\n    return (\n        <Grid container spacing={2}>\n            <Grid item>\n                <Card {...props}>\n                    <CardHeader\n                        title=\"GiveHelp Transactions\"\n                        titleTypographyProps={{ variant: 'h4' }}\n                    />\n                    <Divider />\n                    <Box sx={{ minWidth: 800 }}>\n                        {givedata != null ? (\n                            <Table>\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell>Name</TableCell>\n                                        <TableCell>Type</TableCell>\n                                        <TableCell>Description</TableCell>\n                                        <TableCell>Available Quantity</TableCell>\n                                        <TableCell>AvailableDate</TableCell>\n                                        {/*<TableCell sortDirection=\"desc\">\n                                <Tooltip enterDelay={300} title=\"Sort\">\n                                    <TableSortLabel active direction=\"desc\">\n                                        Available Date\n                                    </TableSortLabel>\n                                </Tooltip>\n                    </TableCell>*/}{' '}\n                                        <TableCell>Address</TableCell>\n                                        <TableCell>Phone Number</TableCell>\n                                        <TableCell>Edit</TableCell>\n                                        <TableCell>Delete</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {givedata\n                                        ?.slice(\n                                            pageGive * rowsPerPageGive,\n                                            pageGive * rowsPerPageGive + rowsPerPageGive\n                                        )\n                                        .map((service) => (\n                                            <TableRow hover key={service._id}>\n                                                <TableCell align=\"center\">\n                                                    {service?.ImageUrl === '' ? (\n                                                        <img\n                                                            src=\"/static/images/avatars/resource.png\"\n                                                            height=\"75\"\n                                                        />\n                                                    ) : (\n                                                        <img src={service.ImageUrl} height=\"75\" />\n                                                    )}\n                                                    <br />\n                                                    {service.Name}\n                                                </TableCell>\n                                                <TableCell>{service.type}</TableCell>\n                                                <TableCell>{service.Description}</TableCell>\n                                                <TableCell>{service.SKU}</TableCell>\n                                                <TableCell>\n                                                    {service.type === 'resource'\n                                                        ? service.availableDate\n                                                        : moment(service.availableDate).format(\n                                                              'MM/DD/YYYY'\n                                                          )}\n                                                </TableCell>\n                                                <TableCell>\n                                                    {service.Address +\n                                                        ', ' +\n                                                        service.City +\n                                                        ', ' +\n                                                        service.State +\n                                                        ', ' +\n                                                        service.Country +\n                                                        ', ' +\n                                                        service.Zipcode}\n                                                </TableCell>\n                                                <TableCell>{service.Phone_Number}</TableCell>\n                                                <TableCell>\n                                                    <Button\n                                                        component={Link}\n                                                        to=\"/app/mytransactions\"\n                                                        onClick={() => handleEdit(service)}\n                                                    >\n                                                        Edit\n                                                    </Button>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <Button\n                                                        component={Link}\n                                                        to=\"/app/mytransactions\"\n                                                        onClick={() => handleDelete(service)}\n                                                    >\n                                                        Delete\n                                                    </Button>\n                                                </TableCell>\n                                            </TableRow>\n                                        ))}\n                                </TableBody>\n                            </Table>\n                        ) : (\n                            <Typography>You do not have any GiveHelp Transactions.</Typography>\n                        )}\n                        <TablePagination\n                            rowsPerPageOptions={[5, 10, 25]}\n                            component=\"div\"\n                            count={givedata?.length}\n                            rowsPerPage={rowsPerPageGive}\n                            page={pageGive}\n                            onPageChange={handleChangePageGive}\n                            onRowsPerPageChange={handleChangeRowsPerPageGive}\n                        />\n                    </Box>{' '}\n                </Card>\n            </Grid>\n            <Grid item>\n                <Card {...props}>\n                    <CardHeader\n                        title=\"GetHelp Transactions\"\n                        titleTypographyProps={{ variant: 'h4' }}\n                    />\n                    <Divider />\n                    <Box sx={{ minWidth: 800 }}>\n                        {getdata != null ? (\n                            <Table>\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell>Name</TableCell>\n                                        <TableCell>Type</TableCell>\n                                        <TableCell>Description</TableCell>\n                                        <TableCell>Quantity</TableCell>\n                                        <TableCell>AvailableDate</TableCell>\n                                        <TableCell>Address</TableCell>\n                                        <TableCell>PhoneNumber</TableCell>\n                                        <TableCell>TransactionDate</TableCell>\n                                    </TableRow>\n                                </TableHead>\n\n                                <TableBody>\n                                    {getdata\n                                        ?.slice(\n                                            page * rowsPerPage,\n                                            page * rowsPerPage + rowsPerPage\n                                        )\n                                        .map((service) => (\n                                            <TableRow hover key={service._id}>\n                                                <TableCell align=\"center\">\n                                                    {service.ImageUrl === '' ? (\n                                                        <img\n                                                            src=\"/static/images/avatars/resource.png\"\n                                                            height=\"75\"\n                                                        />\n                                                    ) : (\n                                                        <img src={service.ImageUrl} height=\"75\" />\n                                                    )}\n                                                    <br />\n                                                    {service.Name}\n                                                </TableCell>\n                                                <TableCell>{service.type}</TableCell>\n                                                <TableCell>{service.Description}</TableCell>\n                                                <TableCell>{service.SKU}</TableCell>\n                                                <TableCell>\n                                                    {service.type === 'resource'\n                                                        ? service.availableDate\n                                                        : moment(service.availableDate).format(\n                                                              'MM/DD/YYYY'\n                                                          )}\n                                                </TableCell>\n                                                <TableCell>{service.address}</TableCell>\n                                                <TableCell>{service.Phone_Number}</TableCell>\n                                                <TableCell>\n                                                    {moment(service.Date).format('MM/DD/YYYY')}\n                                                </TableCell>\n                                            </TableRow>\n                                        ))}\n                                </TableBody>\n                            </Table>\n                        ) : (\n                            <Typography>You do not have any GetHelp Transactions.</Typography>\n                        )}\n                        <TablePagination\n                            rowsPerPageOptions={[5, 10, 25]}\n                            component=\"div\"\n                            count={getdata?.length}\n                            rowsPerPage={rowsPerPage}\n                            page={page}\n                            onPageChange={handleChangePage}\n                            onRowsPerPageChange={handleChangeRowsPerPage}\n                        />\n                    </Box>\n                </Card>\n            </Grid>\n            <Dialog\n                open={openresource}\n                fullWidth\n                maxWidth=\"xl\"\n                style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}\n            >\n                <DialogContent>\n                    <form autoComplete=\"off\" noValidate {...props} method=\"POST\">\n                        <Card\n                            sx={{\n                                height: 750,\n                                width: 900,\n                                justifyContent: 'center',\n                            }}\n                        >\n                            <CardHeader\n                                sx={{\n                                    display: 'flex',\n                                    justifyContent: 'flex-start',\n                                }}\n                                title=\"Edit Give Help Transaction\"\n                            />\n                            <Divider />\n                            <CardContent>\n                                <Grid\n                                    container\n                                    rowSpacing={1}\n                                    columnSpacing={{ xs: 3, sm: 9, md: 3 }}\n                                >\n                                    <Grid\n                                        container\n                                        rowSpacing={1}\n                                        columnSpacing={{ xs: 3, sm: 9, md: 3 }}\n                                        style={{\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            justifyContent: 'center',\n                                        }}\n                                    >\n                                        <Grid\n                                            item\n                                            xs={3}\n                                            style={{ display: 'flex', alignSelf: 'center' }}\n                                        >\n                                            {url === '' ? (\n                                                <img\n                                                    src=\"/static/images/avatars/resource.png\"\n                                                    width=\"200\"\n                                                    height=\"150\"\n                                                />\n                                            ) : (\n                                                <img src={url} width=\"200\" height=\"150\" />\n                                            )}\n                                        </Grid>\n\n                                        <Grid item xs={6}>\n                                            <Grid container direction=\"row\" rowSpacing={3}>\n                                                <Grid item xs={6}>\n                                                    <input\n                                                        type=\"file\"\n                                                        onChange={handleImageUpload}\n                                                    />\n                                                </Grid>\n\n                                                <Grid item xs={6}>\n                                                    <Button\n                                                        color=\"primary\"\n                                                        variant=\"contained\"\n                                                        size=\"medium\"\n                                                        onClick={handleImageChange}\n                                                    >\n                                                        Update Image\n                                                    </Button>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                        <Grid item xs={3}></Grid>\n                                    </Grid>\n                                    <Grid\n                                        container\n                                        rowSpacing={1}\n                                        columnSpacing={{ xs: 3, sm: 9, md: 3 }}\n                                    >\n                                        <Grid item xs={3}>\n                                            <TextField\n                                                id=\"filled-basic\"\n                                                label=\"Type\"\n                                                variant=\"filled\"\n                                                sx={{ m: 1, width: '50ch' }}\n                                                value=\"Resource\"\n                                            />\n                                        </Grid>\n                                        <Grid item xs={3}></Grid>\n                                        <Grid item xs={3}>\n                                            <div style={{ color: 'red' }}>{resourceNameError}</div>\n                                            <TextField\n                                                required\n                                                label=\"Resource Name\"\n                                                defaultValue={service?.Name}\n                                                onChange={handleNameChange}\n                                                variant=\"outlined\"\n                                                sx={{ m: 1, width: '50ch' }}\n                                                helperText=\"Mask, Oxygen Cylinder, Sanitizer etc.\"\n                                            />\n                                        </Grid>\n                                    </Grid>\n                                    <Grid\n                                        container\n                                        rowSpacing={1}\n                                        columnSpacing={{ xs: 3, sm: 9, md: 3 }}\n                                    >\n                                        <Grid item xs={3}>\n                                            <div style={{ color: 'red' }}>{categoryError}</div>\n                                            <TextField\n                                                required\n                                                id=\"outlined-required\"\n                                                label=\"Category Name\"\n                                                defaultValue={service?.Category}\n                                                onChange={handleCategoryChange}\n                                                variant=\"outlined\"\n                                                sx={{ m: 1, width: '50ch' }}\n                                            />\n                                        </Grid>\n                                        <Grid item xs={3}></Grid>\n                                        <Grid item xs={3}>\n                                            <div style={{ color: 'red' }}>{skuError}</div>\n                                            <TextField\n                                                required\n                                                id=\"outlined-number\"\n                                                label=\"Quantity\"\n                                                type=\"number\"\n                                                defaultValue={service?.SKU}\n                                                onChange={handleSkuChange}\n                                                sx={{ m: 1, width: '50ch' }}\n                                                helperText=\"Quanity should be greater than 0\"\n                                                InputLabelProps={{\n                                                    shrink: true,\n                                                }}\n                                            />\n                                        </Grid>\n                                    </Grid>\n                                    <Grid\n                                        container\n                                        rowSpacing={1}\n                                        columnSpacing={{ xs: 3, sm: 9, md: 3 }}\n                                    >\n                                        <Grid item xs={4}>\n                                            <div style={{ color: 'red' }}>{descriptionError}</div>\n                                            <TextField\n                                                id=\"outlined-decsription-input\"\n                                                label=\"Description\"\n                                                defaultValue={service?.Description}\n                                                onChange={handleDescriptionChange}\n                                                variant=\"outlined\"\n                                                sx={{ m: 1, width: '106ch' }}\n                                            />\n                                        </Grid>\n                                    </Grid>\n\n                                    <Grid\n                                        container\n                                        rowSpacing={4}\n                                        columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n                                    >\n                                        <Grid item xs={3}>\n                                            <div style={{ color: 'red' }}>{addressError}</div>\n                                            <TextField\n                                                required\n                                                id=\"outlined-required\"\n                                                label=\"Address\"\n                                                defaultValue={service?.Address}\n                                                onChange={handleAddressChange}\n                                                variant=\"outlined\"\n                                                sx={{ m: 1, width: '50ch' }}\n                                            />\n                                        </Grid>\n                                        <Grid item xs={3}></Grid>\n                                        <Grid item xs={3}>\n                                            <div style={{ color: 'red' }}>{cityError}</div>\n                                            <TextField\n                                                required\n                                                id=\"outlined-required\"\n                                                label=\"City\"\n                                                defaultValue={service?.City}\n                                                onChange={handleCityChange}\n                                                variant=\"outlined\"\n                                                sx={{ m: 1, width: '50ch' }}\n                                            />\n                                        </Grid>\n                                    </Grid>\n                                    <Grid\n                                        container\n                                        rowSpacing={4}\n                                        columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n                                    >\n                                        <Grid item xs={3}>\n                                            <div style={{ color: 'red' }}>{stateError}</div>\n                                            <TextField\n                                                label=\"Select State\"\n                                                name=\"state\"\n                                                onChange={handleStateChange}\n                                                required\n                                                select\n                                                SelectProps={{ native: true }}\n                                                defaultValue={service?.State}\n                                                variant=\"outlined\"\n                                                sx={{ m: 1, width: '50ch' }}\n                                            >\n                                                {stateArray.map((option) => (\n                                                    <option key={option.label} value={option.value}>\n                                                        {option.value}\n                                                    </option>\n                                                ))}\n                                            </TextField>\n                                            {/* <TextField\n                                        required\n                                        id=\"outlined-required\"\n                                        label=\"State\"\n                                        defaultValue={service?.State}\n                                        onChange={handleStateChange}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '50ch' }}\n                                        \n                                    />*/}\n                                        </Grid>\n                                        <Grid item xs={3}></Grid>\n                                        <Grid item xs={3}>\n                                            <div style={{ color: 'red' }}>{countryError}</div>\n                                            <TextField\n                                                label=\"Select Country\"\n                                                name=\"country\"\n                                                onChange={handleCountryChange}\n                                                required\n                                                select\n                                                SelectProps={{ native: true }}\n                                                defaultValue={service?.Country}\n                                                variant=\"outlined\"\n                                                sx={{ m: 1, width: '50ch' }}\n                                            >\n                                                {countryArray.map((option) => (\n                                                    <option key={option.label} value={option.value}>\n                                                        {option.value}\n                                                    </option>\n                                                ))}\n                                            </TextField>\n                                            {/*<TextField\n                                        required\n                                        id=\"outlined-required-input\"\n                                        label=\"Country\"\n                                        defaultValue={service?.Country}\n                                        onChange={handleCountryChange}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '50ch' }}\n                                        \n                                        />*/}\n                                        </Grid>\n                                    </Grid>\n                                    <Grid\n                                        container\n                                        rowSpacing={4}\n                                        columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n                                    >\n                                        <Grid item xs={3}>\n                                            <div style={{ color: 'red' }}>{zipcodeError}</div>\n                                            <TextField\n                                                required\n                                                id=\"outlined-required-input\"\n                                                label=\"Zipcode\"\n                                                defaultValue={service?.Zipcode}\n                                                onChange={handleZipcodeChange}\n                                                variant=\"outlined\"\n                                                sx={{ m: 1, width: '50ch' }}\n                                            />\n                                        </Grid>\n                                        <Grid item xs={3}></Grid>\n                                        <Grid item xs={1}>\n                                            <TextField\n                                                id=\"outlined-read-only-input\"\n                                                sx={{ m: 1 }}\n                                                value={dialCode}\n                                                style={{ width: 70 }}\n                                                // InputProps={{\n                                                //     readOnly: true,\n                                                // }}\n                                            />\n                                        </Grid>\n                                        <Grid item xs={3}>\n                                            <div style={{ color: 'red' }}>{phoneNumError}</div>\n                                            <TextField\n                                                required\n                                                id=\"outlined-required-input\"\n                                                label=\"Phone Number\"\n                                                defaultValue={service?.Phone_Number}\n                                                onChange={handlePhoneNumChange}\n                                                variant=\"outlined\"\n                                                sx={{ m: 1, width: '50ch' }}\n                                            />\n                                        </Grid>\n                                    </Grid>\n                                    <Grid\n                                        container\n                                        rowSpacing={4}\n                                        columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n                                        zIndex={1}\n                                        paddingTop={3}\n                                        style={{\n                                            display: 'flex',\n                                            alignItems: 'right',\n                                            justifyContent: 'right',\n                                        }}\n                                    >\n                                        <Grid item xs={3}>\n                                            <Button\n                                                component={Link}\n                                                to=\"/app/mytransactions\"\n                                                onClick={handleCancel}\n                                                color=\"primary\"\n                                                size=\"medium\"\n                                                variant=\"contained\"\n                                            >\n                                                {' '}\n                                                Cancel\n                                            </Button>\n                                            &nbsp;&nbsp;&nbsp;\n                                            <Button\n                                                component={Link}\n                                                to=\"/app/mytransactions\"\n                                                color=\"primary\"\n                                                variant=\"contained\"\n                                                onClick={handleSubmit}\n                                                size=\"medium\"\n                                            >\n                                                Update\n                                            </Button>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </CardContent>\n                        </Card>\n                    </form>\n                </DialogContent>\n            </Dialog>\n            <Dialog\n                open={openservice}\n                fullWidth\n                maxWidth=\"xl\"\n                style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}\n            >\n                <DialogContent>\n                    <form autoComplete=\"off\" noValidate {...props} method=\"POST\">\n                        <Card\n                            sx={{\n                                height: 750,\n                                width: 900,\n                                justifyContent: 'center',\n                            }}\n                        >\n                            <CardHeader\n                                sx={{\n                                    display: 'flex',\n                                    justifyContent: 'flex-start',\n                                }}\n                                title=\"Edit Give Help Transaction\"\n                            />\n                            <Divider />\n                            <CardContent>\n                                <Grid\n                                    container\n                                    rowSpacing={1}\n                                    columnSpacing={{ xs: 3, sm: 9, md: 3 }}\n                                >\n                                    <Grid\n                                        container\n                                        rowSpacing={1}\n                                        columnSpacing={{ xs: 3, sm: 9, md: 3 }}\n                                        style={{\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            justifyContent: 'center',\n                                        }}\n                                    >\n                                        <Grid\n                                            item\n                                            xs={3}\n                                            style={{ display: 'flex', alignSelf: 'center' }}\n                                        >\n                                            {url === '' ? (\n                                                <img\n                                                    src=\"/static/images/avatars/resource.png\"\n                                                    width=\"200\"\n                                                    height=\"150\"\n                                                />\n                                            ) : (\n                                                <img src={url} width=\"200\" height=\"150\" />\n                                            )}\n                                        </Grid>\n\n                                        <Grid item xs={6}>\n                                            <Grid container direction=\"row\" rowSpacing={3}>\n                                                <Grid item xs={6}>\n                                                    <input\n                                                        type=\"file\"\n                                                        onChange={handleImageUploadService}\n                                                    />\n                                                </Grid>\n\n                                                <Grid item xs={6}>\n                                                    <Button\n                                                        color=\"primary\"\n                                                        variant=\"contained\"\n                                                        size=\"medium\"\n                                                        onClick={handleImageChange}\n                                                    >\n                                                        Update Image\n                                                    </Button>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                        <Grid item xs={3}></Grid>\n                                    </Grid>\n                                    <Grid\n                                        container\n                                        rowSpacing={1}\n                                        columnSpacing={{ xs: 3, sm: 9, md: 3 }}\n                                    >\n                                        <Grid item xs={3}>\n                                            <TextField\n                                                id=\"filled-basic\"\n                                                label=\"Type\"\n                                                variant=\"filled\"\n                                                sx={{ m: 1, width: '50ch' }}\n                                                value=\"Service\"\n                                            />\n                                        </Grid>\n                                        <Grid item xs={3}></Grid>\n                                        <Grid item xs={3}>\n                                            <TextField\n                                                required\n                                                id=\"outlined-required\"\n                                                label=\"Service Name\"\n                                                defaultValue={service?.Name}\n                                                onChange={handleServiceNameChange}\n                                                variant=\"outlined\"\n                                                sx={{ m: 1, width: '50ch' }}\n                                                helperText=\"Car pool, Accomodation etc. \"\n                                            />\n                                        </Grid>\n                                    </Grid>\n\n                                    <Grid\n                                        container\n                                        rowSpacing={1}\n                                        columnSpacing={{ xs: 3, sm: 9, md: 3 }}\n                                    >\n                                        <Grid item xs={3}>\n                                            <div style={{ color: 'red' }}>{categoryError}</div>\n                                            <TextField\n                                                required\n                                                id=\"outlined-required\"\n                                                label=\"Category Name\"\n                                                defaultValue={service?.Category}\n                                                onChange={handleCategoryChange}\n                                                variant=\"outlined\"\n                                                sx={{ m: 1, width: '50ch' }}\n                                            />\n                                        </Grid>\n                                        <Grid item xs={3}></Grid>\n                                        <Grid item xs={4} alignItems=\"right\">\n                                            <Button\n                                                color=\"primary\"\n                                                variant=\"contained\"\n                                                onClick={handleTogglePicker}\n                                                size=\"small\"\n                                            >\n                                                Select Availability\n                                            </Button>\n                                            <DatePicker\n                                                popperProps={{\n                                                    positionFixed: true,\n                                                }}\n                                                selected={availability}\n                                                onChange={handleAvailabilityChange}\n                                                // todayButton={\"Today\"}\n                                                open={datePickerIsOpen}\n                                                onClickOutside={handleTogglePicker}\n                                                showOverlay\n                                                confirmBtnText=\"OK\"\n                                                cancelBtnText=\"Cancel\"\n                                            />\n                                        </Grid>\n                                    </Grid>\n                                    <Grid\n                                        container\n                                        rowSpacing={1}\n                                        columnSpacing={{ xs: 3, sm: 9, md: 3 }}\n                                    >\n                                        <Grid item xs={4}>\n                                            <div style={{ color: 'red' }}>{descriptionError}</div>\n                                            <TextField\n                                                id=\"outlined-decsription-input\"\n                                                label=\"Description\"\n                                                defaultValue={service?.Description}\n                                                onChange={handleDescriptionChange}\n                                                variant=\"outlined\"\n                                                sx={{ m: 1, width: '106ch' }}\n                                            />\n                                        </Grid>\n                                    </Grid>\n\n                                    <Grid\n                                        container\n                                        rowSpacing={4}\n                                        columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n                                    >\n                                        <Grid item xs={3}>\n                                            <div style={{ color: 'red' }}>{addressError}</div>\n                                            <TextField\n                                                required\n                                                id=\"outlined-required\"\n                                                label=\"Address\"\n                                                defaultValue={service?.Address}\n                                                onChange={handleAddressChange}\n                                                variant=\"outlined\"\n                                                sx={{ m: 1, width: '50ch' }}\n                                            />\n                                        </Grid>\n                                        <Grid item xs={3}></Grid>\n                                        <Grid item xs={3}>\n                                            <div style={{ color: 'red' }}>{cityError}</div>\n                                            <TextField\n                                                required\n                                                id=\"outlined-required\"\n                                                label=\"City\"\n                                                defaultValue={service?.City}\n                                                onChange={handleCityChange}\n                                                variant=\"outlined\"\n                                                sx={{ m: 1, width: '50ch' }}\n                                            />\n                                        </Grid>\n                                    </Grid>\n                                    <Grid\n                                        container\n                                        rowSpacing={4}\n                                        columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n                                    >\n                                        <Grid item xs={3}>\n                                            <div style={{ color: 'red' }}>{stateError}</div>\n                                            <TextField\n                                                label=\"State\"\n                                                name=\"state\"\n                                                onChange={handleStateChange}\n                                                required\n                                                select\n                                                SelectProps={{ native: true }}\n                                                defaultValue={service?.State}\n                                                variant=\"outlined\"\n                                                sx={{ m: 1, width: '50ch' }}\n                                            >\n                                                {stateArray.map((option) => (\n                                                    <option key={option.label} value={option.value}>\n                                                        {option.value}\n                                                    </option>\n                                                ))}\n                                            </TextField>\n                                            {/*<TextField\n                                        required\n                                        id=\"outlined-required\"\n                                        label=\"State\"\n                                        defaultValue={service?.State}\n                                        onChange={handleStateChange}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '50ch' }}\n                                        \n                                        />*/}\n                                        </Grid>\n                                        <Grid item xs={3}></Grid>\n                                        <Grid item xs={3}>\n                                            <div style={{ color: 'red' }}>{countryError}</div>\n                                            <TextField\n                                                label=\"Country\"\n                                                name=\"country\"\n                                                onChange={handleCountryChange}\n                                                required\n                                                select\n                                                SelectProps={{ native: true }}\n                                                defaultValue={service?.Country}\n                                                variant=\"outlined\"\n                                                sx={{ m: 1, width: '50ch' }}\n                                            >\n                                                {countryArray.map((option) => (\n                                                    <option key={option.label} value={option.value}>\n                                                        {option.value}\n                                                    </option>\n                                                ))}\n                                            </TextField>\n                                            {/* <TextField\n                                        required\n                                        id=\"outlined-required-input\"\n                                        label=\"Country\"\n                                        defaultValue={service?.Country}\n                                        onChange={handleCountryChange}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '50ch' }}\n                                        \n                                        />*/}\n                                        </Grid>\n                                    </Grid>\n                                    <Grid\n                                        container\n                                        rowSpacing={4}\n                                        columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n                                    >\n                                        <Grid item xs={3}>\n                                            <div style={{ color: 'red' }}>{zipcodeError}</div>\n                                            <TextField\n                                                required\n                                                id=\"outlined-required-input\"\n                                                label=\"Zipcode\"\n                                                defaultValue={service?.Zipcode}\n                                                onChange={handleZipcodeChange}\n                                                variant=\"outlined\"\n                                                sx={{ m: 1, width: '50ch' }}\n                                            />\n                                        </Grid>\n                                        <Grid item xs={3}></Grid>\n                                        <Grid item xs={1}>\n                                            <TextField\n                                                id=\"outlined-read-only-input\"\n                                                sx={{ m: 1 }}\n                                                value={dialCode}\n                                                style={{ width: 70 }}\n                                                // InputProps={{\n                                                //     readOnly: true,\n                                                // }}\n                                            />\n                                        </Grid>\n                                        <Grid item xs={3}>\n                                            <div style={{ color: 'red' }}>{phoneNumError}</div>\n                                            <TextField\n                                                required\n                                                id=\"outlined-required-input\"\n                                                label=\"Phone Number\"\n                                                defaultValue={service?.Phone_Number}\n                                                onChange={handlePhoneNumChange}\n                                                variant=\"outlined\"\n                                                sx={{ m: 1, width: '50ch' }}\n                                            />\n                                        </Grid>\n                                    </Grid>\n                                    <Grid\n                                        container\n                                        rowSpacing={4}\n                                        columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n                                        zIndex={1}\n                                        paddingTop={3}\n                                        style={{\n                                            display: 'flex',\n                                            alignItems: 'right',\n                                            justifyContent: 'right',\n                                        }}\n                                    >\n                                        <Grid item xs={3}>\n                                            <Button\n                                                component={Link}\n                                                to=\"/app/mytransactions\"\n                                                onClick={handleCancel}\n                                                color=\"primary\"\n                                                size=\"medium\"\n                                                variant=\"contained\"\n                                            >\n                                                {' '}\n                                                Cancel\n                                            </Button>\n                                            &nbsp;&nbsp;&nbsp;\n                                            <Button\n                                                component={Link}\n                                                to=\"/app/mytransactions\"\n                                                color=\"primary\"\n                                                variant=\"contained\"\n                                                onClick={handleSubmit}\n                                                size=\"medium\"\n                                            >\n                                                Update\n                                            </Button>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </CardContent>\n                        </Card>\n                    </form>\n                </DialogContent>\n            </Dialog>\n        </Grid>\n    );\n};\n\nconst mapStateToProps = ({ userProfileReducer }) => ({\n    userProfileReducer,\n});\n\nconst mapDispatchToProps = {};\n\nconst ConnectedManageTransactionsCard = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ManageTransactionsCard);\nexport default ConnectedManageTransactionsCard;\n","import * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Container, Grid, Typography } from '@material-ui/core';\n\nimport ManageTransactionsCard from '../../components/mytransactions/ManageTransactionsCard';\n\nconst GiveHelp = () => (\n    <>\n        <Helmet>\n            <title>My Transactions | WeCare</title>\n        </Helmet>\n        <Box\n            sx={{\n                backgroundColor: 'background.default',\n                minHeight: '100%',\n                py: 3,\n            }}\n        >\n            <Container maxWidth=\"lg\">\n                <Grid container spacing={3}>\n                    <Grid item lg={8} md={6} xs={12}>\n                        <Typography variant=\"h2\" component=\"h2\">\n                            My Transactions\n                        </Typography>\n                    </Grid>\n                    <Grid item lg={8} md={6} xs={12}>\n                        <ManageTransactionsCard />\n                    </Grid>\n                </Grid>\n            </Container>\n        </Box>\n    </>\n);\n\nexport default GiveHelp;\n","import * as React from 'react';\nimport { Redirect, Route, Switch, useHistory, useLocation } from 'react-router-dom';\nimport { ThemeProvider, StyledEngineProvider } from '@material-ui/core';\n// import CustomerList from 'pages/CustomerList';\nimport { connect } from 'react-redux';\nimport Dashboard from 'pages/Dashboard/Dashboard';\nimport Account from 'pages/Account/Account';\nimport MedicalAssistance from 'pages/MedicalAssistance/MedicalAssistance';\nimport LookForMedicalAssistance from 'pages/MedicalAssistance/LookForMedicalAssistance';\n\nimport Settings from 'pages/Settings/Settings';\nimport Login from 'pages/Login/Login';\nimport RegisterThruLogin from 'pages/Login/RegisterThruLogin';\nimport Register1 from 'pages/Register/RegisterFirstPage';\nimport Register2 from 'pages/Register/RegisterSecondPage';\nimport ForgotPassword from 'pages/ForgotPassword/ForgotPassword';\nimport ResetPassword from 'pages/ForgotPassword/ResetPassword';\nimport NotFound from 'pages/NotFound';\nimport AuthContextProvider, { useAuth } from 'contexts/AuthContext';\nimport GetHelp from 'pages/GetHelp/GetHelp';\nimport GetHelpItem from 'pages/GetHelpItem/GetHelpItem';\nimport theme from './theme';\nimport MainLayout from './components/MainLayout';\nimport DashboardLayout from './components/DashboardLayout';\nimport RegisterDoctorModal from './components/RegisterDoctorModal';\nimport AddServiceScreen from './pages/GiveHelp/AddService';\nimport GiveHelpScreen from './pages/GiveHelp/LandingPage';\nimport AddResourceScreen from './pages/GiveHelp/AddResource';\nimport MyTransactions from './pages/MyTransactions/MyTransactions';\nimport './styles.css';\nconst App: React.FC<any> = ({ _id, id }) => {\n    const history = useHistory();\n    const { search } = useLocation();\n    React.useEffect(() => {\n        const token = typeof window !== 'undefined' && window.localStorage.getItem('token');\n        const query = new URLSearchParams(search);\n        const isSignedIn = _id || id || token || query.get('mode');\n        if (!isSignedIn) {\n            history.push('/login');\n        }\n    }, [_id, id]);\n    return (\n        <AuthContextProvider>\n            <StyledEngineProvider injectFirst>\n                <ThemeProvider theme={theme}>\n                    <div>\n                        <Switch>\n                            <Route path={'/app'}>\n                                <DashboardLayout>\n                                    <Switch>\n                                        <Route path={'/app/account'} component={Account} />\n\n                                        <Route\n                                            path={'/app/gethelp/:id/:type/:pagetype'}\n                                            component={GetHelpItem}\n                                        />\n                                        <Route path={'/app/gethelp'} component={GetHelp} />\n                                        <Route path={'/app/dashboard'} component={Dashboard} />\n                                        <Route\n                                            path={'/app/mytransactions'}\n                                            component={MyTransactions}\n                                        />\n                                        <Route\n                                            path={'/app/medicalAssistance'}\n                                            component={MedicalAssistance}\n                                        />\n                                        <Route\n                                            path={'/app/lookformedicalAssistance'}\n                                            component={LookForMedicalAssistance}\n                                        />\n                                        <Route\n                                            path={'/app/givehelp/addservice'}\n                                            component={AddServiceScreen}\n                                        />\n                                        <Route\n                                            path={'/app/givehelp/addresource'}\n                                            component={AddResourceScreen}\n                                        />\n                                        <Route\n                                            path={'/app/registerdoctor'}\n                                            component={RegisterDoctorModal}\n                                        />\n                                        <Route path={'/app/givehelp'} component={GiveHelpScreen} />\n                                        <Route path={'/app/settings'} component={Settings} />\n                                    </Switch>\n                                </DashboardLayout>\n                            </Route>\n\n                            <Route path={'/login'}>\n                                <MainLayout>\n                                    <Login />\n                                </MainLayout>\n                            </Route>\n                            <Route path={'/login2register'}>\n                                <MainLayout>\n                                    <RegisterThruLogin />\n                                </MainLayout>\n                            </Route>\n                            <Route path={'/register1'}>\n                                <MainLayout>\n                                    <Register1 />\n                                </MainLayout>\n                            </Route>\n                            <Route path={'/register2'}>\n                                <MainLayout>\n                                    <Register2 />\n                                </MainLayout>\n                            </Route>\n                            <Route path={'/forgot-password'}>\n                                <MainLayout>\n                                    <ForgotPassword />\n                                </MainLayout>\n                            </Route>\n                            <Route path={'/reset-password'}>\n                                <MainLayout>\n                                    <ResetPassword />\n                                </MainLayout>\n                            </Route>\n                            <Route exact path=\"/\">\n                                <Redirect to={_id ? '/app/dashboard' : '/login'} />\n                            </Route>\n                            <Route path={'/404'} component={NotFound} />\n                            <Redirect to=\"/404\" />\n                        </Switch>\n                    </div>\n                </ThemeProvider>\n            </StyledEngineProvider>\n        </AuthContextProvider>\n    );\n};\n\nconst mapStateToProps = ({ userProfileReducer }) => ({\n    ...userProfileReducer,\n});\n\nconst mapDispatchToProps = {};\nconst ConnectedApp = connect(mapStateToProps, mapDispatchToProps)(App);\nexport default ConnectedApp;\n","import * as React from 'react';\nimport { hydrate } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { HelmetProvider } from 'react-helmet-async';\nimport { persistStore } from 'redux-persist';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { configureStore } from '../shared/store';\nimport App from '../shared/App';\n\nconst preloadedState = window.__PRELOADED_STATE__ ? window.__PRELOADED_STATE__ : {};\ndelete window.__PRELOADED_STATE__;\n\n// Create redux store\nconst { persistor, store } = configureStore(preloadedState);\n// Create/use the store\n// history MUST be passed here if you want syncing between server on initial route\n// const store =\n//     window.store ||\n//     configureStore({\n//         initialState: window.__PRELOADED_STATE__,\n//     });\n\n// const persistor = persistStore(store);\n\nhydrate(\n    <Provider store={store}>\n        <BrowserRouter>\n            <HelmetProvider>\n                <PersistGate loading={null} persistor={persistor}>\n                    <App />\n                </PersistGate>\n            </HelmetProvider>\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('app')\n);\n\nif (process.env.NODE_ENV === 'development') {\n    if (module.hot) {\n        module.hot.accept();\n    }\n\n    if (!window.store) {\n        window.store = store;\n    }\n}\n","import { createContext, useContext, useEffect, useState } from 'react';\nimport { auth } from '../utils/firebase';\nimport {\n    createUserWithEmailAndPassword,\n    signInWithEmailAndPassword,\n    onAuthStateChanged,\n    signOut,\n    GoogleAuthProvider,\n    signInWithPopup,\n    sendPasswordResetEmail,\n    confirmPasswordReset,\n} from 'firebase/auth';\n\nconst AuthContext = createContext({\n    currentUser: null,\n    register: (email, password) => new Promise((resolve, reject) => {}),\n    login: (email, password) => new Promise((resolve, reject) => {}),\n    logout: () => new Promise((resolve, reject) => {}),\n    signinWithGoogle: () => new Promise((resolve, reject) => {}),\n    forgotPassword: (email) => new Promise((resolve, reject) => {}),\n    resetPassword: (oobCode, newPassword) => new Promise((resolve, reject) => {}),\n});\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport default function AuthContextProvider({ children }) {\n    const [currentUser, setCurrentUser] = useState(null);\n    useEffect(() => {\n        const unsubscribe = onAuthStateChanged(auth, (user) => setCurrentUser(user));\n        return () => {\n            unsubscribe();\n        };\n    }, []);\n    function register(email, password) {\n        return createUserWithEmailAndPassword(auth, email, password);\n    }\n\n    function login(email, password) {\n        return signInWithEmailAndPassword(auth, email, password);\n    }\n\n    function logout() {\n        return signOut(auth);\n    }\n\n    function signinWithGoogle() {\n        const provider = new GoogleAuthProvider();\n        return signInWithPopup(auth, provider);\n    }\n\n    function forgotPassword(email) {\n        return sendPasswordResetEmail(auth, email, { url: 'http://localhost:8500/login' });\n    }\n\n    function resetPassword(oobCode, newPassword) {\n        return confirmPasswordReset(auth, oobCode, newPassword);\n    }\n    const value = {\n        currentUser,\n        register,\n        login,\n        logout,\n        signinWithGoogle,\n        forgotPassword,\n        resetPassword,\n    };\n\n    return <AuthContext.Provider value={value}> {children}</AuthContext.Provider>;\n}\n","import { initializeApp } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\nimport { getStorage, ref } from 'firebase/storage';\nimport 'firebase/storage';\n\nconst firebaseConfig = {\n    // apiKey: process.env.REACT_APP_API_KEY,\n    // authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    // projectId: process.env.REACT_APP_PROJECT_ID,\n    // storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    // messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    // appId: process.env.REACT_AP_APP_ID,\n    // measurementId: process.env.REACT_APP_MEASUREMENT_ID,\n    apiKey: 'AIzaSyBRhY61TgBU4o_iav8XPGUevbIcO74fmgs',\n    authDomain: 'cmpe295-wecare.firebaseapp.com',\n    projectId: 'cmpe295-wecare',\n    storageBucket: 'cmpe295-wecare.appspot.com',\n    messagingSenderId: '181804813353',\n    appId: '1:181804813353:web:a22ff89a9c9c1397292038',\n    measurementId: 'G-JKZYL2KZQV',\n};\n\nconst app = initializeApp(firebaseConfig);\nconst storage = getStorage();\nconst auth = getAuth(app);\nexport { auth, storage };\n"],"sourceRoot":""}