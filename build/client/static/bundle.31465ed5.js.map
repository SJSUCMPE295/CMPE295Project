{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/shared/store/constants/action-types.ts","webpack:///./src/shared/store/user/reducer.ts","webpack:///./src/shared/store/appReducer.ts","webpack:///./src/shared/store/rootReducer.ts","webpack:///./src/shared/store/index.ts","webpack:///./src/shared/components/dashboard/HealthNews.tsx","webpack:///./src/shared/utils/json.ts","webpack:///./src/shared/components/dashboard/Statistics.tsx","webpack:///./src/shared/pages/Dashboard/Dashboard.tsx","webpack:///./src/shared/utils/config.ts","webpack:///./src/shared/components/account/AccountProfile.tsx","webpack:///./src/shared/components/account/AccountProfileDetails.tsx","webpack:///./src/shared/pages/Account/Account.tsx","webpack:///./src/shared/store/actions.ts","webpack:///./src/shared/pages/MedicalAssistance/MedicalAssistance.tsx","webpack:///./src/shared/pages/MedicalAssistance/LookForMedicalAssistance.tsx","webpack:///./src/shared/components/settings/SettingsProfileStatus.tsx","webpack:///./src/shared/components/settings/SettingsPassword.tsx","webpack:///./src/shared/components/settings/SettingsDoctor.tsx","webpack:///./src/shared/pages/Settings/Settings.tsx","webpack:///./src/shared/icons/Google.tsx","webpack:///./src/shared/pages/hooks/useMounted.tsx","webpack:///./src/shared/pages/Login/Login.tsx","webpack:///./src/shared/pages/Login/RegisterThruLogin.tsx","webpack:///./src/shared/pages/Register/RegisterFirstPage.tsx","webpack:///./src/shared/pages/Register/RegisterSecondPage.tsx","webpack:///./src/shared/pages/ForgotPassword/ForgotPassword.tsx","webpack:///./src/shared/pages/ForgotPassword/ResetPassword.tsx","webpack:///./src/shared/pages/NotFound.tsx","webpack:///./src/shared/pages/GetHelp/GetHelp.tsx","webpack:///./src/shared/pages/GetHelpItem/GetHelpItem.tsx","webpack:///./src/shared/theme.tsx","webpack:///./static/images/logo.png","webpack:///./src/shared/components/Logo.tsx","webpack:///./src/shared/components/MainNavbar.tsx","webpack:///./src/shared/components/MainLayout.tsx","webpack:///./src/shared/components/DashboardNavbar.tsx","webpack:///./src/shared/components/RegisterDoctorModal.tsx","webpack:///./src/shared/components/NavItem.tsx","webpack:///./src/shared/components/DashboardSidebar.tsx","webpack:///./src/shared/components/DashboardLayout.tsx","webpack:///./src/shared/components/givehelp/AddServiceCard.tsx","webpack:///./src/shared/pages/GiveHelp/AddService.tsx","webpack:///./src/shared/components/givehelp/LandingPageCard.tsx","webpack:///./src/shared/pages/GiveHelp/LandingPage.tsx","webpack:///./src/shared/components/givehelp/AddResourceCard.tsx","webpack:///./src/shared/pages/GiveHelp/AddResource.tsx","webpack:///./src/shared/components/mytransactions/ManageTransactionsCard.tsx","webpack:///./src/shared/pages/MyTransactions/MyTransactions.tsx","webpack:///./src/shared/App.tsx","webpack:///./src/client/index.tsx","webpack:///./src/shared/contexts/AuthContext.tsx","webpack:///./src/shared/utils/firebase.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","SETGETHELP","saveUserName","initialState","freeze","locale","appReducer","combineReducers","userProfileReducer","state","action","type","payload","user","ActionTypes","help","doctor","firstName","lastName","userName","id","userMetaData","profile","address","email","rootReducer","undefined","persistConfig","storage","localStorage","persistedReducer","persistReducer","createRootReducer","configureStore","middleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","actionsBlacklist","compose","store","createStore","applyMiddleware","thunk","concat","persistor","persistStore","HealthNews","useState","articles","setArticles","useEffect","fetch","then","res","json","items","filter","item","title","newArticles","Card","CardHeader","Divider","List","map","article","ListItemButton","component","href","link","divider","guid","ListItemIcon","sx","paddingRight","img","alt","src","enclosure","style","height","width","ListItemText","primary","React","Typography","color","variant","secondary","pubDate","objectWithBoolean","obj","keys","reduce","acc","curr","formatDate","dateString","utcTime","dateNow","Date","year","getFullYear","monthWithOffset","getUTCMonth","month","toString","date","getDate","hour","getUTCHours","getHours","minutes","String","getMinutes","padStart","time","prettyDate","selectedTime","toLocaleDateString","day","toLocaleTimeString","ConnectedStatistics","connect","props","UserId","console","log","setData","setError","token","getItem","axios","defaults","withCredentials","params","headers","authtoken","response","error","resourcename","resourcesku","transactiontype","transactioncount","totalusertrans","totalresources","usertransactions","userappointments","theme","useTheme","resources","forEach","element","_id","resource_SKU","number","count","data_donut","datasets","backgroundColor","colors","indigo","orange","borderWidth","borderColor","common","white","hoverBorderColor","labels","options_donut","animation","cutoutPercentage","layout","padding","legend","display","maintainAspectRatio","responsive","tooltips","palette","background","paper","bodyFontColor","text","enabled","footerFontColor","intersect","titleFontColor","datab","barPercentage","barThickness","borderRadius","categoryPercentage","label","maxBarThickness","options","cornerRadius","scales","xAxes","ticks","Color","gridLines","drawBorder","yAxes","fontColor","beginAtZero","min","borderDash","borderDashOffset","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","page","setPage","rowsPerPage","setRowsPerPage","Grid","container","spacing","lg","sm","xl","xs","CardContent","justifyContent","gutterBottom","transactions","Avatar","red","MoneyIcon","Box","pt","alignItems","green","mr","InsertChartIcon","users","PeopleIcon","services","AutoAwesomeIcon","align","direction","md","paddingBottom","position","Bar","Button","endIcon","ArrowRightIcon","size","PerfectScrollbar","minWidth","Table","TableHead","TableRow","TableCell","TableSortLabel","TableBody","service","hover","Service_Name","Category","moment","availableDate","format","Zipcode","TablePagination","rowsPerPageOptions","onPageChange","event","newPage","onRowsPerPageChange","parseInt","target","Doughnut","doctor_name","AppointmentDetails","b","maxHeight","overflow","Dashboard","Helmet","minHeight","py","Container","maxWidth","Statistics","serverUrl","Input","styled","ConnectedAccountProfile","userMetadata","dispatch","useDispatch","setSaveMsg","profilePic","avatar","setAvatar","setShowErrorMsg","getStorage","storageRef","ref","image","findImage","setFindImage","setFileUploadTitle","progress","setProgress","uploadPicture","imageName","files","file","uploadBytesResumable","on","snapshot","bytesTransferred","totalBytes","downloadProfilePic","getDownloadURL","url","updateProfilePic","catch","code","phoneNumber","profileActive","updateProfilePicApiCall","post","status","flexDirection","CircularProgress","city","CardActions","htmlFor","accept","multiple","onChange","fullWidth","input","hidden","onClick","deleteObject","ConnectedAccountProfileDetails","location","country","values","setValues","saveMsg","phone","setPhone","phoneNumbeErr","setPhoneNumberErr","phoneNumbeErrMsg","setPhoneNumberErrMsg","zipCode","zipcode","setZipcode","zipcodeErr","setZipcodeErr","zipcodeErrMsg","setZipcodeErrMsg","countries","registerLocale","require","countryObj","getNames","select","countryArray","entries","handleChange","form","autoComplete","noValidate","subheader","TextField","helperText","InputProps","inputProps","max","required","SelectProps","native","option","Alert","severity","Account","AccountProfile","AccountProfileDetails","api","interceptors","request","use","config","setGetHelp","updateUserProfile","jsonToQueryString","str","encodeURIComponent","join","getAvailableDoctors","createAppointment","getProfile","userId","profileUpdate","put","getProfileData","columns","field","headerName","flex","valueGetter","description","sortable","getValue","gender","mapDispatchToProps","ConnectedDoctorSchedule","activeUser","open","setOpen","setActiveUser","successAlert","setSuccessAlert","available","setAvailable","availability","handleRowClick","row","handleClose","DataTable","rows","div","DataGrid","pageSize","disableSelectionOnClick","onRowClick","mt","mb","appointments","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","className","my","TextareaAutosize","minRows","defaultValue","notes","DialogActions","onSubmit","e","preventDefault","formData","FormData","formProps","fromEntries","setTimeout","err","FormControlLabel","control","Switch","defaultChecked","checked","InputLabelProps","shrink","steps","ConnectedLookForMedicalAssistance","activeStep","setActiveStep","daysFromToday","today","future","setDate","setSelectedTime","doctors","setDoctors","selectedDoctor","setSelectedDoctor","alert","setAlert","notesInput","setNotes","Set","skipped","setSkipped","hasDuplicateAppointment","find","x","indexOf","setTime","isStepOptional","step","isStepSkipped","has","StepContainer","currentTarget","Select","labelId","MenuItem","disabled","em","textarea","aria-label","Stepper","index","stepProps","labelProps","optional","completed","Step","StepLabel","prevActiveStep","Error","prevSkipped","newSkipped","add","last","setDoctorStep","delete","doctorId","appointmentDetails","notesValue","current","saveNotes","ConnectedSettingsProfileStatus","rest","wrap","Checkbox","oldpassword","password","confirm","margin","ConnectedSettingsDoctor","emailNotifications","appNotifications","phoneCalls","ConnectedSettingsView","isDoctor","SettingsDoctor","SettingsProfileStatus","Google","SvgIcon","path","useMounted","mounted","useRef","Login","history","useHistory","useAuth","login","signinWithGoogle","apiCall","loginApi","replace","marginTop","marginBottom","Formik","initialValues","isSubmitting","validationSchema","Yup","shape","accessToken","setItem","finally","errors","handleBlur","handleSubmit","touched","startIcon","GoogleIcon","pb","Boolean","onBlur","Link","RouterLink","to","underline","ConnectedRegisterThruLoginDetails","genderOptions","setChecked","address1","phonenumber","matches","ml","marginLeft","RegisterFirstPage","register","message","_tokenResponse","RegisterSecondPage","useSelector","ForgotPassword","useLocation","errorAlert","setErrorAlert","setMessage","forgotPassword","ResetPassword","resetPassword","query","URLSearchParams","search","NotFound","textAlign","containerStyle","ConnectedGetHelp","CityError","setCityError","setName","setCity","miles","setMiles","currentloc","setCurrentloc","directions","setDirections","datafilter","setDataFilter","ignoreStat","origin","UserCompleteAddress","setUserCompleteAddress","setCount","totalitem","setTotalItem","setPageSize","isLoaded","useJsApiLoader","googleMapsApiKey","getCurrentUserLocation","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","lat","lng","geocoder","google","maps","Geocoder","geocode","results","GeocoderStatus","OK","address_components","element2","types","element3","long_name","formatted_address","user_location","Math","ceil","handlePageLoad","setMap","onLoad","useCallback","bounds","LatLngBounds","fitBounds","onUnmount","span","RadioGroup","Radio","br","startAdornment","InputAdornment","fontSize","SearchIcon","placeholder","NavigationIcon","CircleIcon","resource","ImageUrl","CardMedia","Name","Description","SKU","distance","textTransform","directionsService","DirectionsService","destination","route","travelMode","TravelMode","DRIVING","DirectionsStatus","getDirections","Pagination","paddingTop","GoogleMap","mapContainerStyle","center","zoom","Marker","markertitle","DirectionsRenderer","defaultOptions","suppressMarkers","withRouter","init","ConnectedGetHelpItem","item_type","param","useParams","user_email","errorText","setErrorText","quantity","setQuantity","pagetype","setPageType","substring","handlepageload","handleItemQuantityChange","sendEmail","templateId","variables","emailjs","send","titleTypographyProps","border","boxShadow","TableContainer","Paper","scope","owner_name","Phone_Number","owner_email","resource_email_quantity","qua_date","email_subject","to_user_email","resource_name","resource_description","resource_address","resource_quantity","phone_num","from_name","to_name","subject","to_email","victim_name","victim_phone_num","user_id","aria-labelledby","aria-describedby","autoFocus","createTheme","default","contrastText","main","shadows","typography","h1","fontWeight","letterSpacing","h2","h3","h4","h5","h6","overline","Logo","logo","MainNavbar","AppBar","elevation","Toolbar","MainLayoutRoot","MainLayoutWrapper","MainLayoutContainer","MainLayoutContent","MainLayout","children","DashboardNavbar","onMobileNavOpen","logout","notifications","flexGrow","Hidden","mdDown","IconButton","Badge","badgeContent","NotificationsIcon","clear","InputIcon","mdUp","MenuIcon","BorderLinearProgress","withStyles","root","colorPrimary","bar","LinearProgress","getModalStyle","top","left","transform","bgcolor","RegisterDoctorModal","closeModal","modalStyle","setLoading","fileErr","setFileErr","fileErrMsg","setFileErrMsg","licenseUrl","doctorProfile","fileName","fileUrl","setFileUrl","fileUploadTitle","fileLink","setFileLink","specialityOptions","setSpecialityOptions","errMessage","setErrMessage","saveFile","speciality","license","qualification","experience","when","is","Modal","marginRight","font","round","rel","ConnectedRegisterDoctorDetails","NavItem","Icon","icon","active","matchPath","end","pathname","ListItem","disableGutters","propTypes","PropTypes","string","elementType","ConnectedDashboardSidebar","onMobileClose","openMobile","jobTitle","BarChartIcon","isHidden","PackageIcon","ShoppingBagIcon","PlusCircleIcon","UserIcon","CreditCardIcon","SettingsIcon","content","cursor","Drawer","anchor","PaperProps","DashboardLayoutRoot","DashboardLayoutWrapper","breakpoints","up","paddingLeft","DashboardLayoutContainer","DashboardLayoutContent","DashboardLayout","isMobileNavOpen","setMobileNavOpen","DashboardSidebar","getStates","getCode","ConnectedAddServiceCard","check","setCheck","serviceName","setServiceName","category","setCategory","setDescription","phoneNum","setPhoneNum","dialCode","setDialCode","setAddress","setState","setCountry","CountryData","countryNames","setCode","setAvailability","datePickerIsOpen","togglePicker","setImage","setUrl","serviceNameError","setServiceNameError","ifServiceError","setIfServiceError","availabilityError","setAvailabilityError","setIfAvailabilityError","categoryError","setCategoryError","ifCategoryError","setIfCategoryError","descriptionError","setDescriptionError","ifDescriptionError","setIfDescriptionError","phoneNumError","setPhoneNumError","ifPhoneNumError","setIfPhoneNumError","addressError","setAddressError","ifAddressError","setIfAddressError","cityError","ifCityError","setIfCityError","setStateError","zipcodeError","setZipcodeError","ifZipcodeError","setIfZipcodeError","setCountryError","stateObj","toLowerCase","stateArray","handleTogglePicker","a","getTime","method","body","JSON","stringify","Address","City","State","Country","reload","rowSpacing","columnSpacing","FormHelperText","DatePicker","popperProps","positionFixed","selected","onClickOutside","showOverlay","confirmBtnText","cancelBtnText","zIndex","justify-content","FormGroup","dial_code","uploadBytes","metadata","AddService","AddServiceCard","LandingPageCard","verticalAlign","LandingPage","ConnectedAddResourceCard","resourceName","setResourceName","sku","setSku","resourceNameError","setResourceNameError","ifResourceError","setIfResourceError","skuError","setSkuError","ifSkuError","setIfSkuError","Resource_Name","AddResource","AddResourceCard","ConnectedManageTransactionsCard","givedata","setGiveData","getdata","setGetData","setService","stateError","countryError","handleImageChange","handleCategoryChange","handleDescriptionChange","handlePhoneNumChange","handleAddressChange","handleCityChange","handleStateChange","handleZipcodeChange","handleCountryChange","isValid","handleTransactionSearch","openresource","setOpenresource","openservice","setOpenservice","userid","Availability","getresources","handleCancel","pageGive","setPageGive","rowsPerPageGive","setRowsPerPageGive","toISOString","handleEdit","handleDelete","alignSelf","GiveHelp","ManageTransactionsCard","ConnectedApp","AuthContextProvider","StyledEngineProvider","injectFirst","ThemeProvider","Route","GetHelpItem","GetHelp","MyTransactions","MedicalAssistance","LookForMedicalAssistance","AddServiceScreen","AddResourceScreen","GiveHelpScreen","Settings","RegisterThruLogin","Register1","Register2","exact","Redirect","preloadedState","__PRELOADED_STATE__","hydrate","Provider","BrowserRouter","HelmetProvider","PersistGate","loading","App","document","getElementById","AuthContext","createContext","currentUser","Promise","resolve","reject","oobCode","newPassword","useContext","setCurrentUser","unsubscribe","onAuthStateChanged","auth","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","provider","GoogleAuthProvider","signInWithPopup","sendPasswordResetEmail","confirmPasswordReset","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getAuth"],"mappings":"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","file":"bundle.31465ed5.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/static/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export const SETLOCALE = 'app/set-locale';\nexport const SETGETHELP = 'app/set-get-help';\nexport const SETDOCTORDATA = 'app/set-doctor-data';\nexport const saveUserName = 'save-user-name';\nexport const createUserProfile = 'create-user-profile';\nexport const loginAction = 'login-action';\nexport const logoutAction = 'logout-action';\nexport const updateUser = 'updateUser';\nexport const resetState = 'reset-state';\n","import * as ActionTypes from '../constants/action-types';\nimport { Action } from './types';\n\nexport const initialState = Object.freeze<any>({\n    locale: 'en_US',\n});\n\nexport default (state: any = initialState, action: Action | any): any => {\n    switch (action?.type) {\n        case 'persist/REHYDRATE': {\n            return { ...state, ...action?.payload?.user, ...action?.payload?.userProfileReducer };\n        }\n        case ActionTypes.SETGETHELP: {\n            return { ...state, help: true };\n        }\n        case ActionTypes.updateUser: {\n            return { ...state, ...action?.payload };\n        }\n        case ActionTypes.SETDOCTORDATA: {\n            return { ...state, doctor: action?.payload?.doctor || action?.payload };\n        }\n        case ActionTypes.saveUserName: {\n            return {\n                ...state,\n                firstName: action?.firstName,\n                lastName: action?.lastName,\n                userName: action?.userName,\n            };\n        }\n        case ActionTypes.createUserProfile: {\n            return {\n                ...state,\n                ...action?.payload,\n                id: action?.id,\n                userMetaData: action?.userMetaData,\n                profile: action?.profile,\n                address: action?.address,\n            };\n        }\n        case ActionTypes.loginAction:\n            return {\n                ...state,\n                email: action.email,\n            };\n\n        case ActionTypes.logoutAction:\n            return {};\n        default:\n            return state;\n    }\n};\n","import { combineReducers } from 'redux';\nimport user from './user/reducer';\n\nconst appReducer = combineReducers({\n    userProfileReducer: user,\n});\n\nexport default appReducer;\n","import { resetState } from './constants/action-types';\nimport appReducer from './appReducer';\n\nconst rootReducer = (state, action) => {\n    if (action.type === resetState) {\n        // storage.removeItem(\"persist:root\");\n\n        return appReducer(undefined, action);\n    }\n    return appReducer(state, action);\n};\n\nexport default rootReducer;\nexport type RootState = ReturnType<typeof rootReducer>;\n","import thunk from 'redux-thunk';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport createRootReducer from './rootReducer';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport localStorage from 'redux-persist/lib/storage';\n\ntype StoreParams = {\n    initialState?: { [key: string]: any };\n    middleware?: any[];\n};\n\nconst persistConfig = {\n    key: 'root',\n    storage: localStorage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, createRootReducer);\n\nexport const configureStore = ({ initialState, middleware = [] }: StoreParams) => {\n    const devtools =\n        typeof window !== 'undefined' &&\n        typeof window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ === 'function' &&\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({ actionsBlacklist: [] });\n\n    const composeEnhancers = devtools || compose;\n\n    const store = createStore(\n        persistedReducer,\n        initialState,\n        composeEnhancers(applyMiddleware(...[thunk].concat(...middleware)))\n    );\n\n    if (process.env.NODE_ENV !== 'production') {\n        if (module.hot) {\n            module.hot.accept('./rootReducer', () =>\n                store.replaceReducer(require('./rootReducer').default)\n            );\n        }\n    }\n\n    let persistor = persistStore(store);\n    if (typeof window !== `undefined`) {\n        window.persistor = persistor;\n    }\n\n    return { store, persistor };\n};\n\nexport default configureStore;\n","import * as React from 'react';\nimport { Component, useRef, useEffect, useState, FunctionComponent } from 'react';\nimport moment from 'moment';\nimport {\n    Box,\n    Button,\n    Card,\n    CardHeader,\n    Divider,\n    IconButton,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemButton,\n    ListItemIcon,\n    CardActionArea,\n    CardMedia,\n    CardContent,\n    Typography,\n    ListItemText,\n    Table,\n    TableHead,\n    TableBody,\n    TableRow,\n    TableCell,\n} from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nimport PerfectScrollbar from 'react-perfect-scrollbar';\n\nconst HealthNews = () => {\n    // { headers: { Accept: “application/json” } }\n    const newsRssFeed =\n        'https://api.rss2json.com/v1/api.json?rss_url=https%3A%2F%2Fwww.news-medical.net%2Fsyndication.axd%3Fformat%3Drss';\n    const medicalNewsLink = 'https://www.news-medical.net/syndication.axd';\n    const MAX_ARTICLES = 10;\n    const [articles, setArticles] = useState(null);\n\n    useEffect(() => {\n        //const loadArticles = async () => {\n        fetch(newsRssFeed)\n            .then((res) => res.json())\n            .then((data) => data.items.filter((item) => item.title.length > 0))\n            .then((newArticles) => newArticles.slice(0, MAX_ARTICLES))\n            .then((articles) => setArticles(articles));\n        //.catch((error) => console.log(error))\n        //.then(data => console.log(data))\n        //};\n        //loadArticles();\n    }, [MAX_ARTICLES]);\n\n    /* - SR\nvar convert = require('xml-js');\nfetch(medicalNewsLink)\n.then((resXML) => console.log(resXML))\n\nuseEffect(() => {\n    fetch(medicalNewsLink)\n    .then((res) => res.json())\n    //.then((resJson) => convert.xml2json(resJson, {compact: true, spaces: 4}))\n    .then((data) => data.items.filter((item) => item.title.length > 0))\n    .then((articles) => setArticles(articles))\n    }, [MAX_ARTICLES]);\n\nSR-End */\n\n    //console.log(articles);\n\n    //}, [MAX_ARTICLES]);\n\n    return (\n        <Card>\n            <CardHeader title=\"Health News\" />\n            <Divider />\n\n            {articles != null ? (\n                <List>\n                    {' '}\n                    {articles.map((article, i) => (\n                        <ListItemButton\n                            component=\"a\"\n                            href={article.link}\n                            divider={i < articles.length - 1}\n                            key={article.guid}\n                        >\n                            <ListItemIcon sx={{ paddingRight: 2 }}>\n                                <img\n                                    alt={article.title}\n                                    src={article.enclosure.link}\n                                    style={{\n                                        height: 100,\n                                        width: 70,\n                                    }}\n                                />\n                            </ListItemIcon>\n                            <ListItemText\n                                primary={\n                                    <React.Fragment>\n                                        <Typography color=\"textPrimary\" variant=\"body2\">\n                                            {article.title}\n                                        </Typography>\n                                    </React.Fragment>\n                                }\n                                secondary={\n                                    <Typography color=\"textSecondary\" variant=\"caption\">\n                                        {article.pubDate}\n                                    </Typography>\n                                }\n                            />\n                        </ListItemButton>\n                    ))}\n                </List>\n            ) : null}\n            <Divider />\n        </Card>\n    );\n};\nexport default HealthNews;\n","export const objectWithBoolean = (obj = {}) => ({\n    ...Object.keys(obj).reduce(\n        (acc, curr) => ({\n            ...acc,\n            [curr]: obj[curr] === 'true' ? true : obj[curr],\n        }),\n        {}\n    ),\n});\nexport const getDate = (daysFromToday = 0) => {\n    let dateNow = new Date(); // Creating a new date object with the current date and time\n    if (daysFromToday) {\n        const today = new Date();\n        const future = new Date(today);\n        future.setDate(future.getDate() + daysFromToday);\n        dateNow = future;\n    }\n    const year = dateNow.getFullYear(); // Getting current year from the created Date object\n    const monthWithOffset = dateNow.getUTCMonth() + 1; // January is 0 by default in JS. Offsetting +1 to fix date for calendar.\n    const month = // Setting current Month number from current Date object\n        monthWithOffset.toString().length < 2 // Checking if month is < 10 and pre-prending 0 to adjust for date input.\n            ? `0${monthWithOffset}`\n            : monthWithOffset;\n    const date =\n        dateNow.getDate().toString().length < 2 // Checking if date is < 10 and pre-prending 0 if not to adjust for date input.\n            ? `0${dateNow.getDate()}`\n            : dateNow.getDate();\n    return `${year}-${month}-${date}`; // combining to format for defaultValue or value attribute of material <TextField>\n};\nexport const formatDate = (dateString, utcTime = false) => {\n    const dateNow = new Date(dateString); // Creating a new date object with the current date and time\n    const year = dateNow.getFullYear(); // Getting current year from the created Date object\n    const monthWithOffset = dateNow.getUTCMonth() + 1; // January is 0 by default in JS. Offsetting +1 to fix date for calendar.\n    const month = // Setting current Month number from current Date object\n        monthWithOffset.toString().length < 2 // Checking if month is < 10 and pre-prending 0 to adjust for date input.\n            ? `0${monthWithOffset}`\n            : monthWithOffset;\n    const date =\n        dateNow.getDate().toString().length < 2 // Checking if date is < 10 and pre-prending 0 if not to adjust for date input.\n            ? `0${dateNow.getDate()}`\n            : dateNow.getDate();\n    const hour = utcTime ? dateNow.getUTCHours() : dateNow.getHours();\n    const minutes =\n        String(utcTime ? dateNow.getMinutes() : dateNow.getMinutes()).padStart(2, '0') || '00';\n    const time = hour > 0 ? `T${hour}:${minutes}` : '';\n    return `${year}-${month}-${date}${time}`; // combining to format for defaultValue or value attribute of material <TextField>\n};\n\nexport const prettyDate = (selectedTime) => {\n    const d = new Date(selectedTime);\n    const date = d.toLocaleDateString();\n    const day = d.toLocaleTimeString();\n    return d ? `${date}  ${day}` : '';\n};\n","import React, { Component, useRef, useEffect, useState, FunctionComponent } from 'react';\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport {\n    Avatar,\n    Box,\n    Card,\n    CardContent,\n    Grid,\n    Typography,\n    Button,\n    CardHeader,\n    Divider,\n    useTheme,\n    colors,\n    Chip,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    TableSortLabel,\n    Tooltip,TablePagination\n} from '@material-ui/core';\nimport moment from 'moment';\nimport { v4 as uuid } from 'uuid';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport { Doughnut } from 'react-chartjs-2';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport MoneyIcon from '@material-ui/icons/Money';\nimport { red, green, orange, indigo } from '@material-ui/core/colors';\nimport InsertChartIcon from '@material-ui/icons/InsertChartOutlined';\nimport PeopleIcon from '@material-ui/icons/PeopleOutlined';\nimport { Bar } from 'react-chartjs-2';\nimport AutoAwesomeIcon from '@material-ui/icons/AutoAwesomeMosaic';\nimport HealthNews from '../../components/dashboard/HealthNews';\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport axios from 'axios';\nimport {formatDate, prettyDate } from \"utils/json\";\nconst Statistics: FunctionComponent<any> = ({userProfileReducer,props}) => {\n    const UserId =userProfileReducer.id; //'6225e61bf81d2541a4000bc9'//userProfileReducer.id;\n    console.log(UserId);\n    //const [loading, setLoading] = useState(true);\n    const [data, setData] = useState(null);\n    const [error, setError] = useState(null);\n    //'617f2fb40583ba49a0091425';\n    useEffect(() => {\n       // if (typeof myVar !== 'undefined'\n       const token = localStorage.getItem('token');\n           // set the with credentials to true\n           axios.defaults.withCredentials = true;\n        axios\n            .get('/api/home', {params:{ user: UserId}},{\n                headers : {\n                    authtoken: token\n                }\n                } ) \n            .then(\n                (response) => {\n                    console.log(response.data);\n                    setData(response?.data);\n                },\n                (error) => {\n                    console.log(error);\n                    setError(error);\n                }\n            );\n        //.finally(()=> {setLoading(false); })\n    }, []);\n    //if (loading) return \"Loading....\"\n    //if (error) return \"Error\"\n    let resourcename = [];\n    let resourcesku = [];\n    let transactiontype = [];\n    let transactioncount = [];\n    let totalusertrans = 0;\n    let totalresources=0;\n    let usertransactions={};\n    let userappointments={};\n    const theme = useTheme();\n    if (data != null) {\n        const resources = data.resources;\n\n        resources.forEach((element) => {\n            resourcename.push(element._id);\n            resourcesku.push(element.resource_SKU);\n        });\n         totalresources = resourcesku.reduce((result, number) => result + number);\n\n         usertransactions = data.usertransactions;\n        if (usertransactions.length > 0) {\n            usertransactions.forEach((element) => {\n                transactiontype.push(element._id);\n                transactioncount.push(element.count);\n            });\n            totalusertrans = transactioncount.reduce((result, number) => result + number);\n        }\n        userappointments = data?.userappointments;\n    }\n    const data_donut = {\n        datasets: [\n            {\n                data: transactioncount,\n                backgroundColor: [colors.indigo[500], colors.orange[600]],\n                borderWidth: 8,\n                borderColor: colors.common.white,\n                hoverBorderColor: colors.common.white,\n            },\n        ],\n        labels: transactiontype,\n    };\n\n    const options_donut = {\n        animation: false,\n        cutoutPercentage: 80,\n        layout: { padding: 0 },\n        legend: {\n            display: false,\n        },\n        maintainAspectRatio: false,\n        responsive: true,\n        tooltips: {\n            backgroundColor: theme.palette.background.paper,\n            bodyFontColor: theme.palette.text.secondary,\n            borderColor: theme.palette.divider,\n            borderWidth: 1,\n            enabled: true,\n            footerFontColor: theme.palette.text.secondary,\n            intersect: false,\n            mode: 'index',\n            titleFontColor: theme.palette.text.primary,\n        },\n    };\n\n    const datab = {\n        datasets: [\n            {\n                backgroundColor: colors.indigo[500],\n                barPercentage: 0.5,\n                barThickness: 12,\n                borderRadius: 4,\n                categoryPercentage: 0.5,\n                data: resourcesku,\n                label: 'Quantity available',\n                maxBarThickness: 13,\n            },\n        ],\n        labels: resourcename,\n    };\n\n    const options = {\n        animation: false,\n        cornerRadius: 20,\n        layout: { padding: 0 },\n        legend: { display: false },\n        maintainAspectRatio: false,\n        responsive: true,\n        scales: {\n            xAxes: \n                {\n                    ticks: {\n                        Color: theme.palette.text.secondary,\n                    },\n                    gridLines: {\n                        display: false,\n                        drawBorder: false,\n                    },\n                },\n            \n            yAxes: \n                {\n                    ticks: {\n                        fontColor: theme.palette.text.secondary,\n                        beginAtZero: true,\n                        min: 0,\n                    },\n                    gridLines: {\n                        borderDash: [2],\n                        borderDashOffset: [2],\n                        color: theme.palette.divider,\n                        drawBorder: false,\n                        zeroLineBorderDash: [2],\n                        zeroLineBorderDashOffset: [2],\n                        zeroLineColor: theme.palette.divider,\n                    },\n                },\n            \n        },\n        tooltips: {\n            backgroundColor: theme.palette.background.paper,\n            bodyFontColor: theme.palette.text.secondary,\n            borderColor: theme.palette.divider,\n            borderWidth: 1,\n            enabled: true,\n            footerFontColor: theme.palette.text.secondary,\n            intersect: false,\n            mode: 'index',\n            titleFontColor: theme.palette.text.primary,\n        },\n    };\n\n    const [page, setPage] = React.useState(0);\n\nconst [rowsPerPage, setRowsPerPage] = React.useState(8);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n      };\n    \n      const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n      };\n\n    return (\n        <Grid container spacing={3}>\n            <Grid item lg={3} sm={6} xl={3} xs={12}>\n                <Card sx={{ height: '100%' }} {...props}>\n                    <CardContent>\n                        <Grid container spacing={3} sx={{ justifyContent: 'space-between' }}>\n                            <Grid item>\n                                <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\n                                    TOTAL TRANSACTIONS\n                                </Typography>\n\n                                {data != null ? (\n                                    <Typography color=\"textPrimary\" variant=\"h3\">\n                                        {data.transactions}\n                                    </Typography>\n                                ) : null}\n                            </Grid>\n                            <Grid item>\n                                <Avatar\n                                    sx={{\n                                        backgroundColor: red[600],\n                                        height: 56,\n                                        width: 56,\n                                    }}\n                                >\n                                    <MoneyIcon />\n                                </Avatar>\n                            </Grid>\n                        </Grid>\n                        <Box\n                            sx={{\n                                pt: 2,\n                                display: 'flex',\n                                alignItems: 'center',\n                            }}\n                        >\n                            <Typography\n                                sx={{\n                                    color: green[900],\n                                    mr: 1,\n                                }}\n                                variant=\"body2\"\n                            ></Typography>\n                            <Typography color=\"textSecondary\" variant=\"caption\"></Typography>\n                        </Box>\n                    </CardContent>\n                </Card>\n            </Grid>\n            <Grid item lg={3} sm={6} xl={3} xs={12}>\n                <Card sx={{ height: '100%' }} {...props}>\n                    <CardContent>\n                        <Grid container spacing={3} sx={{ justifyContent: 'space-between' }}>\n                            <Grid item>\n                                <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\n                                    RESOURCES\n                                </Typography>\n                                {data != null ? (\n                                    <Typography color=\"textPrimary\" variant=\"h3\">\n                                      {totalresources}\n                                    </Typography>\n                                ) : null}\n                            </Grid>\n                            <Grid item>\n                                <Avatar\n                                    sx={{\n                                        backgroundColor: orange[600],\n                                        height: 56,\n                                        width: 56,\n                                    }}\n                                >\n                                    <InsertChartIcon />\n                                </Avatar>\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                </Card>\n            </Grid>\n            <Grid item lg={3} sm={6} xl={3} xs={12}>\n                <Card {...props}>\n                    <CardContent>\n                        <Grid container spacing={3} sx={{ justifyContent: 'space-between' }}>\n                            <Grid item>\n                                <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\n                                    TOTAL USERS\n                                </Typography>\n                                {data != null ? (\n                                    <Typography color=\"textPrimary\" variant=\"h3\">\n                                        {data.users}\n                                    </Typography>\n                                ) : null}\n                            </Grid>\n                            <Grid item>\n                                <Avatar\n                                    sx={{\n                                        backgroundColor: green[600],\n                                        height: 56,\n                                        width: 56,\n                                    }}\n                                >\n                                    <PeopleIcon />\n                                </Avatar>\n                            </Grid>\n                        </Grid>\n                        <Box\n                            sx={{\n                                alignItems: 'center',\n                                display: 'flex',\n                                pt: 2,\n                            }}\n                        >\n                            <Typography\n                                variant=\"body2\"\n                                sx={{\n                                    color: green[900],\n                                    mr: 1,\n                                }}\n                            ></Typography>\n                            <Typography color=\"textSecondary\" variant=\"caption\"></Typography>\n                        </Box>\n                    </CardContent>\n                </Card>\n            </Grid>\n            <Grid item lg={3} sm={6} xl={3} xs={12}>\n                <Card {...props} sx={{ height: '100%' }}>\n                    <CardContent>\n                        <Grid container spacing={3} sx={{ justifyContent: 'space-between' }}>\n                            <Grid item>\n                                <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\n                                    SERVICES\n                                </Typography>\n                                {data != null ? (\n                                    <Typography color=\"textPrimary\" variant=\"h3\">\n                                        {data.services.length}\n                                    </Typography>\n                                ) : null}\n                            </Grid>\n                            <Grid item>\n                                <Avatar\n                                    sx={{\n                                        backgroundColor: indigo[600],\n                                        height: 56,\n                                        width: 56,\n                                    }}\n                                >\n                                    <AutoAwesomeIcon />\n                                </Avatar>\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                </Card>\n            </Grid>\n            <Grid align=\"left\" direction=\"row\" item container spacing={3}>\n                <Grid item lg={9} md={12} xl={9} xs={12}>\n                    <Grid item paddingBottom={3}>\n                        <Card {...props}>\n                            <CardHeader\n                                /*action={\n                    <Button endIcon={<ArrowDropDownIcon />} size=\"small\" variant=\"text\">\n                        Medical\n                    </Button>\n                }*/\n                                title=\"Available Resources\"\n                            />\n                            <Divider />\n                            <CardContent>\n                                <Box\n                                    sx={{\n                                        height: 400,\n                                        position: 'relative',\n                                    }}\n                                >\n                                    <Bar data={datab} options={options} />\n                                </Box>\n                            </CardContent>\n                            <Divider />\n                            <Box\n                                sx={{\n                                    display: 'flex',\n                                    justifyContent: 'flex-end',\n                                    p: 2,\n                                }}\n                            >\n                                <Button\n                                    \n                                  \n                                    href=\"/app/gethelp\"\n                                    color=\"primary\"\n                                    endIcon={<ArrowRightIcon />}\n                                    size=\"small\"\n                                    variant=\"text\"\n                                >\n                                    VIEW ALL\n                                </Button>\n                            </Box>\n                        </Card>\n                    </Grid>\n                    <Grid item>\n                        <Card {...props}>\n                            <CardHeader title=\"Available Services\" />\n                            <Divider />\n                            <PerfectScrollbar>\n                                <Box sx={{ minWidth: 800 }}>\n                                    <Table>\n                                        <TableHead>\n                                            <TableRow>\n                                                <TableCell>Service Name</TableCell>\n                                                <TableCell>Category</TableCell>\n                                                <TableCell>\n                                                    <TableSortLabel>Available Date</TableSortLabel>\n                                                </TableCell>\n                                                {/*<TableCell sortDirection=\"desc\">\n                                <Tooltip enterDelay={300} title=\"Sort\">\n                                    <TableSortLabel active direction=\"desc\">\n                                        Available Date\n                                    </TableSortLabel>\n                                </Tooltip>\n                    </TableCell>*/}\n                                                <TableCell>Zip Code</TableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        {data != null ? (\n                                            <TableBody>\n                                                {data.services.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((service) => (\n                                                    <TableRow hover key={service._id}>\n                                                        <TableCell>\n                                                            {service.Service_Name}\n                                                        </TableCell>\n                                                        <TableCell>{service.Category}</TableCell>\n                                                        <TableCell>\n                                                            {moment(service.availableDate).format(\n                                                                'MM/DD/YYYY'\n                                                            )}\n                                                        </TableCell>\n                                                        <TableCell>{service.Zipcode}</TableCell>\n                                                    </TableRow>\n                                                ))}\n                                            </TableBody>\n                                        ) : null}\n                                    </Table><TablePagination\n                                    rowsPerPageOptions={[8, 16, 24]}\n          component=\"div\"\n          count={data?.services.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          \n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n                                    \n                                </Box>\n                            </PerfectScrollbar>\n                            <Box\n                                sx={{\n                                    display: 'flex',\n                                    justifyContent: 'flex-end',\n                                    p: 2,\n                                }}\n                            >\n                                <Button\n                                    \n                                    href=\"/app/gethelp\"\n                                    color=\"primary\"\n                                    endIcon={<ArrowRightIcon />}\n                                    size=\"small\"\n                                    variant=\"text\"\n                                >\n                                    View all\n                                </Button>\n                            </Box>\n                        </Card>\n                    </Grid>\n                </Grid>\n\n                <Grid item lg={3} md={12} xl={3} xs={12}>\n                    {UserId != '' ? (\n                        <Grid item paddingBottom={3}>\n                            <Card {...props}>\n                                <CardHeader title=\"My Activity\" />\n                                <Divider />\n                                <CardContent>\n                                    <Typography variant=\"h6\">\n                                        Total Transactions : {totalusertrans}\n                                    </Typography>\n                                    {data && usertransactions.length > 0 ? (\n                                        <Box\n                                            sx={{\n                                                height: 300,\n                                                position: 'relative',\n                                            }}\n                                        >\n                                            <Doughnut data={data_donut} options={options_donut} />\n                                        </Box>\n                                    ) : null}\n                                    <Divider />\n                                    <Box\n                                        sx={{\n                                            //height: 300,\n                                            position: 'relative',\n                                        }}\n                                    >\n                                        <Typography variant=\"h6\">Upcoming Appointments</Typography>\n                                        {data != null ? (\n                                            userappointments.length > 0 ? (\n                                                userappointments.map(\n                                                    ({\n                                                        doctor_name: doctor_name,\n                                                        AppointmentDetails: AppointmentDetails,\n                                                        time:time,\n                                                        _id:_id\n                                                    }) => (\n                                                        <Typography\n                                                            color=\"textPrimary\"\n                                                            variant=\"text\" key={_id}\n                                                        >\n                                                            You have an appointment with{' '}\n                                                            <b>{doctor_name}</b> at <b>{prettyDate(time)}</b>\n                                                        </Typography>\n                                                    )\n                                                )\n                                            ) : (\n                                                <Typography color=\"textPrimary\" variant=\"h7\">\n                                                    You do not have any appointment scheduled.\n                                                </Typography>\n                                            )\n                                        ) : null}\n                                    </Box>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                    ) : null}\n                    <Grid item style={{ maxHeight: '100vh', overflow: 'auto' }}>\n                        <HealthNews />\n                    </Grid>\n                </Grid>\n            </Grid>\n            {/*<Grid item lg={4} md={6} xl={3} xs={12}></Grid>*/}\n        </Grid>\n    );\n};\n\nconst mapStateToProps = ({ userProfileReducer }) => ({\n    userProfileReducer,\n});\n\nconst mapDispatchToProps = {};\n\nconst ConnectedStatistics = connect(mapStateToProps, mapDispatchToProps)(Statistics);\nexport default ConnectedStatistics;\n//export default Statistics;\n","import * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Container, Grid } from '@material-ui/core';\nimport Statistics from '../../components/dashboard/Statistics';\n\nconst Dashboard = () => (\n    <>\n        <Helmet>\n            <title>Dashboard | WeCare</title>\n        </Helmet>\n        <Box\n            sx={{\n                backgroundColor: 'background.default',\n                minHeight: '100%',\n                py: 3,\n            }}\n        >\n            <Container maxWidth={false}>\n                <Statistics />\n            </Container>\n        </Box>\n    </>\n);\n\nexport default Dashboard;\n","//const serverUrl = 'https://ab3b-71-237-235-43.ngrok.io/api/';\nconst serverUrl = 'http://localhost:8500/api/';\n\nexport default serverUrl;\n","import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { styled } from '@mui/material/styles';\n// import MuiAlert from '@mui/material/Alert';\nimport { Alert, Snackbar}  from '@mui/material';\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL, deleteObject } from 'firebase/storage';\nimport {\n    Avatar,\n    Box,\n    Button,\n    Card,\n    CardActions,\n    CardContent,\n    Divider,\n    Typography,\n} from '@material-ui/core';\nimport axios from 'axios';\nimport serverUrl from '../../utils/config';\nimport { useDispatch } from 'react-redux';\nimport { createUserProfile, saveUserName } from '../../store/constants/action-types';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nconst metadata = {\n    contentType: 'image/jpg',\n};\n\nconst Input = styled('input')({\n    display: 'none',\n});\n\n// const Alert = React.forwardRef(function Alert(props, ref) {\n//     return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n//   });\n\nconst AccountProfile = ({ userProfileReducer, ...props }) => {\n    const user = {\n        // avatar: userProfileReducer.profile.profile_pic,\n        address: userProfileReducer.address,\n        profile: userProfileReducer.profile,\n        userMetaData: userProfileReducer.userMetadata,\n        lastName: userProfileReducer.lastName,\n        firstName: userProfileReducer.firstName,\n        userName: userProfileReducer.userName,\n    };\n    console.log('user ', user);\n    const dispatch = useDispatch();\n    const [open, setOpen] = React.useState(false);\n    const [saveMsg, setSaveMsg] = useState('');\n    const [avatar, setAvatar] = React.useState(userProfileReducer?.profile?.profilePic);\n    const [showErrorMsg, setShowErrorMsg] = React.useState(false);\n    const storage = getStorage();\n    const storageRef = ref(storage, `/${user.userName}/profilePic/userPic`);\n    const [image, setImage] = React.useState('');\n    const [findImage, setFindImage] = React.useState(false);\n    const [fileUploadTitle, setFileUploadTitle] = React.useState('Upload Profile Pic');\n    const [progress, setProgress] = useState(100);\n    // const handleClose = (event?: React.SyntheticEvent | Event, reason?: string) => {\n    //     if (reason === 'clickaway') {\n    //       return;\n    //     }\n    //     setOpen(false);\n    //   };\n    const uploadPicture = (event) => {\n        if (image == null) return;\n        const imageName = event.target.files[0].name;\n        var file = event.target.files[0];\n        console.log(event.target.files[0]);\n        // const storage = getStorage();\n        // const storageRef = ref(storage, `/${user.userName}/profilePic/userPic`);\n        const uploadTask = uploadBytesResumable(storageRef, file);\n        uploadTask.on('state_changed', (snapshot) => {\n            setProgress((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\n            setFileUploadTitle(imageName);\n            downloadProfilePic();\n    }, (error) => {});\n    }\n\n    const deletePicture = () => {\n        // Delete the file\n        deleteObject(storageRef)\n            .then(() => {\n                setAvatar('');\n                var profile = {\n                    phoneNumber: user?.profile?.phoneNumber,\n                    profileActive: user?.profile?.profileActive,\n                    profilePic: '',\n                }\n                // dispatch({\n                //     type: createUserProfile,\n                //     userMetaData: user?.userMetaData,\n                //     profile: profile,\n                //     address: user?.address,\n                // });\n                updateProfilePicApiCall(profile);\n            })\n            .catch((error) => {\n                setShowErrorMsg(true);\n            });\n    };\n    const downloadProfilePic = () => {\n        getDownloadURL(storageRef)\n            .then((url) => {\n                console.log(url);\n                setAvatar(url);\n                user.profile.profilePic = url;\n                console.log('user avatar', user);\n                updateProfilePic();\n                setFindImage(true);\n            })\n            .catch((error) => {\n                switch (error.code) {\n                    case 'storage/object-not-found':\n                        setAvatar('');\n                        setFindImage(false);\n                        break;\n                }\n            });\n    };\n\n    const updateProfilePic = () => {\n        const profile = {\n                phoneNumber: user?.profile?.phoneNumber,\n                profileActive: user?.profile?.profileActive,\n                profilePic: user?.profile?.profilePic,\n        }\n        updateProfilePicApiCall(profile);\n    }\n\n    const updateProfilePicApiCall = (profile) => {\n        const payload = {\n            userName: user.userName,\n            profile: profile,\n        };\n        const token = localStorage.getItem('token');\n        axios.defaults.withCredentials = true;\n        // make a post request with the user data\n        axios.post(serverUrl + 'user/profilePicUpdate', payload, {\n            headers : {\n                authtoken: token\n            }\n            }).then(\n            (response) => {\n                console.log('axios call', response);\n                if (response.status === 200) {\n                    console.log('updated successfully');\n                    dispatch({\n                        type: createUserProfile,\n                        userMetaData: response?.data?.data?.userMetaData,\n                        profile: response?.data?.data?.profile,\n                        address: response?.data?.data?.address,\n                    });\n                    setSaveMsg('Yes');\n                }\n                if (response.status === 401) {\n                    setSaveMsg('No');\n                }\n            },\n            (error) => {\n                console.log('register error');\n                setSaveMsg('No');\n                //   this.setState({\n                //     errorMessage: error.response.data,\n                //     signupFailed: true,\n                //   });\n            }\n        );\n    };\n\n    // useEffect(() => {\n    //     console.log('inside useeffect');\n    //     downloadProfilePic();\n    // }, [1]);\n    return (\n        <Card {...props}>\n            <CardContent>\n                <Box\n                    sx={{\n                        alignItems: 'center',\n                        display: 'flex',\n                        flexDirection: 'column',\n                    }}\n                >\n                    {progress>0 && progress<100&& <CircularProgress variant=\"determinate\" value={progress} />}\n                    {progress==100 &&\n                    <Avatar\n                        src={avatar}\n                        // src=\"https://firebasestorage.googleapis.com/v0/b/cmpe295-wecare.appspot.com/o/test114%40gmail.com%2FprofilePic%2FuserPic?alt=media&token=eb7bdbea-70e3-4b32-be11-712b56d56985\"\n                        sx={{\n                            height: 100,\n                            width: 100,\n                        }}\n                    /> }\n                    <Typography color=\"textPrimary\" gutterBottom variant=\"h4\">\n                        {user?.firstName}\n                    </Typography>\n                    <Typography color=\"textSecondary\" variant=\"body1\">\n                        {`${user?.address?.city}, ${user?.address?.state}`}\n                    </Typography>\n                    {/* <Typography color=\"textSecondary\" variant=\"body1\">\n                    {`${moment().format('hh:mm A')} ${user.timezone}`}\n                </Typography> */}\n                </Box>\n            </CardContent>\n            <Divider />\n        <CardActions\n            sx={{\n                alignItems: 'center',\n                display: 'flex',\n                flexDirection: 'column',\n            }}>\n        <label htmlFor=\"contained-button-file\">\n            <Input accept=\"image/*\" id=\"contained-button-file\" multiple type=\"file\" onChange={uploadPicture}/>\n            <Button color=\"primary\" fullWidth variant=\"text\" component=\"span\">\n                {findImage ? \"Update picture\" : \"Upload picture\"}\n                <input type=\"image\" hidden onChange={uploadPicture} />\n            </Button>\n            </label>\n        </CardActions>\n            <Button color=\"secondary\" fullWidth variant=\"text\" component=\"span\" onClick={deletePicture}\n            style={{\n                color: \"#d11a2a\"\n            }}>\n                Delete Picture\n            </Button>\n            {/* {showErrorMsg? (\n                <Alert severity=\"error\">This is an error message!</Alert>\n            ): ''} */}\n            {/* <div\n                style={{\n                    alignItems: 'center',\n                    display: 'flex',\n                    flexDirection: 'column',\n                }}\n            >\n                {saveMsg == 'Yes' &&\n                <Snackbar autoHideDuration={6000} onClose={handleClose}>\n                 <Alert severity=\"success\">Profile Pic is updated!</Alert>\n                 </Snackbar>}\n                {saveMsg === 'No' && (\n                    <Alert severity=\"error\">Error updating your profile pic.</Alert>\n                )}\n            </div> */}\n        </Card>\n    );\n};\n//`${moment().format('hh:mm A')} ${user.timezone}`\n\nconst mapStateToProps = ({ userProfileReducer }) => ({\n    userProfileReducer,\n});\n\nconst mapDispatchToProps = {};\n\nconst ConnectedAccountProfile = connect(mapStateToProps, mapDispatchToProps)(AccountProfile);\nexport default ConnectedAccountProfile;\n","import * as React from 'react';\nimport { useState } from 'react';\nimport Alert from '@mui/material/Alert';\nimport {\n    Box,\n    Button,\n    Card,\n    CardContent,\n    CardHeader,\n    Divider,\n    Grid,\n    TextField,\n} from '@material-ui/core';\nimport countries from 'i18n-iso-countries';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport serverUrl from '../../utils/config';\nimport { useDispatch } from 'react-redux';\nimport { createUserProfile, saveUserName } from '../../store/constants/action-types';\n\nconst AccountProfileDetails = ({ userProfileReducer, ...props }) => {\n    const [values, setValues] = React.useState({\n        firstName: userProfileReducer.firstName,\n        lastName: userProfileReducer.lastName,\n        userName: userProfileReducer.userName,\n        // phone: userProfileReducer?.profile?.phoneNumber,\n        address: userProfileReducer?.address?.location,\n        // zipcode: userProfileReducer?.address?.zipCode,\n        city: userProfileReducer?.address?.city,\n        state: userProfileReducer?.address?.state,\n        country: userProfileReducer?.address?.country,\n        userMetaData: userProfileReducer.userMetaData,\n        profileActive: userProfileReducer?.profile?.profileActive,\n        profilePic: userProfileReducer?.profile?.profilePic,\n    });\n    console.log('Values', values);\n    const dispatch = useDispatch();\n    const [saveMsg, setSaveMsg] = useState('');\n    const [phone, setPhone] = useState(userProfileReducer?.profile?.phoneNumber)\n    const [phoneNumbeErr, setPhoneNumberErr] = useState(false);\n    const [phoneNumbeErrMsg, setPhoneNumberErrMsg] = useState('');\n    const [zipcode, setZipcode] = useState(userProfileReducer?.address?.zipCode)\n    const [zipcodeErr, setZipcodeErr] = useState(false);\n    const [zipcodeErrMsg, setZipcodeErrMsg] = useState('');\n    countries.registerLocale(require('i18n-iso-countries/langs/en.json'));\n    const countryObj = countries.getNames('en', { select: 'official' });\n    const countryArray = Object.entries(countryObj).map(([key, value]) => {\n        return {\n            label: key,\n            value: value,\n        };\n    });\n    const handleChange = (event) => {\n        setValues({\n            ...values,\n            [event.target.name]: event.target.value,\n        });\n    };\n\n    const validation = () => {\n        console.log('phone length', phone.toString().length);\n        if(phone.toString().length != 10) {\n            setPhoneNumberErr(true);\n            setPhoneNumberErrMsg('Phone Number should be 10 digits');\n            return false;\n        } else if(zipcode.toString().length != 5){\n            setZipcodeErr(true);\n            setZipcodeErrMsg('ZipCode should be 5 digits');\n            return false;\n        }\n        else {\n            return true;\n        }\n    }\n    const handleChangePhone = (event) => {\n        setPhoneNumberErr(false);\n        setPhoneNumberErrMsg('');\n        setPhone(event.target.value);\n    };\n\n    const handleChangeZipcode = (event) => {\n        setZipcodeErr(false);\n        setZipcodeErrMsg('');\n        setZipcode(event.target.value);\n    };\n\n    const handleSave = () => {\n        const isValid = validation();\n        if(isValid) {\n        const payload = {\n            userName: values.userName,\n            firstName: values.firstName,\n            lastName: values.lastName,\n            userMetaData: values.userMetaData,\n            profile: {\n                phoneNumber: phone,\n                profileActive: values?.profileActive,\n                profilePic: values?.profilePic,\n            },\n            address: {\n                location: values.address,\n                city: values.city,\n                state: values.state,\n                country: values.country,\n                zipCode: zipcode,\n            },\n        };\n        const token = localStorage.getItem('token');\n           // set the with credentials to true\n           axios.defaults.withCredentials = true;\n           // make a post request with the user data\n           axios.post(serverUrl + 'user/profileUpdate', payload,  {\n            headers : {\n                authtoken: token\n            }\n            }).then(\n               (response) => {\n                   console.log(\"axios call\", response);\n               if (response.status === 200) {\n                   console.log(\"updated successfully\");\n                   dispatch({\n                       type: saveUserName,\n                       firstName: response.data.data.firstName,\n                       lastName: response.data.data.lastName,\n                       userName: response.data.data.userName,\n                   });\n                   dispatch({\n                       type: createUserProfile,\n                       userMetaData: response.data.data.userMetaData,\n                       profile: response.data.data?.profile,\n                       address: response.data.data.address,\n                   });\n                   setSaveMsg(\"Yes\");\n               }\n               if(response.status === 401) {\n                setSaveMsg(\"No\");\n               }\n            },\n            (error) => {\n                console.log('register error');\n                setSaveMsg('No');\n                //   this.setState({\n                //     errorMessage: error.response.data,\n                //     signupFailed: true,\n                //   });\n            }\n        );\n        }\n    };\n\n    return (\n        <form autoComplete=\"off\" noValidate {...props}>\n            <Card>\n                <CardHeader subheader=\"The information can be edited\" title=\"User Profile\" />\n                <Divider />\n                <CardContent>\n                    <Grid container spacing={3}>\n                        <Grid item md={6} xs={12}>\n                            <TextField\n                                fullWidth\n                                helperText=\"Please specify the first name\"\n                                label=\"First name\"\n                                name=\"firstName\"\n                                onChange={handleChange}\n                                value={values.firstName}\n                                variant=\"outlined\"\n                            />\n                        </Grid>\n                        <Grid item md={6} xs={12}>\n                            <TextField\n                                fullWidth\n                                label=\"Last name\"\n                                name=\"lastName\"\n                                onChange={handleChange}\n                                value={values.lastName}\n                                variant=\"outlined\"\n                            />\n                        </Grid>\n                        <Grid item md={6} xs={12}>\n                            <TextField\n                                fullWidth\n                                label=\"Phone Number\"\n                                error={phoneNumbeErr}\n                                helperText={phoneNumbeErrMsg}\n                                name=\"phone\"\n                                onChange={handleChangePhone}\n                                type=\"number\"\n                                InputProps={{\n                                    inputProps: {\n                                        max: 10,\n                                        min: 10,\n                                    },\n                                }}\n                                value={phone}\n                                variant=\"outlined\"\n                            />\n                        </Grid>\n                        <Grid item md={6} xs={12}>\n                            <TextField\n                                fullWidth\n                                label=\"Address\"\n                                name=\"address\"\n                                onChange={handleChange}\n                                value={values.address}\n                                variant=\"outlined\"\n                            />\n                        </Grid>\n                        <Grid item md={6} xs={12}>\n                            <TextField\n                                fullWidth\n                                label=\"City\"\n                                name=\"city\"\n                                onChange={handleChange}\n                                value={values.city}\n                                variant=\"outlined\"\n                            />\n                        </Grid>\n                        <Grid item md={6} xs={12}>\n                        <TextField\n                                fullWidth\n                                label=\"ZipCode\"\n                                name=\"zipcode\"\n                                type=\"number\"\n                                error={zipcodeErr}\n                                helperText={zipcodeErrMsg}\n                                onChange={handleChangeZipcode}\n                                InputProps={{\n                                    inputProps: {\n                                        max: 5,\n                                        min: 5,\n                                    },\n                                }}\n                                value={zipcode}\n                                variant=\"outlined\"\n                            />\n                        </Grid>\n                        <Grid item md={6} xs={12}>\n                            <TextField\n                                fullWidth\n                                label=\"State\"\n                                name=\"state\"\n                                onChange={handleChange}\n                                value={values.state}\n                                variant=\"outlined\"\n                            />\n                        </Grid>\n                        <Grid item md={6} xs={12}>\n                            <TextField\n                                fullWidth\n                                label=\"Select Country\"\n                                name=\"country\"\n                                onChange={handleChange}\n                                required\n                                select\n                                SelectProps={{ native: true }}\n                                value={values.country}\n                                variant=\"outlined\"\n                            >\n                                {countryArray.map((option) => (\n                                    <option key={option.label} value={option.value}>\n                                        {option.value}\n                                    </option>\n                                ))}\n                            </TextField>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n                <Divider />\n\n                <Box\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        p: 2,\n                    }}\n                >\n                    <Button color=\"primary\" variant=\"contained\" onClick={handleSave}>\n                        Save details\n                    </Button>\n                    {saveMsg == 'Yes' && <Alert severity=\"success\">Profile is updated!</Alert>}\n                    {saveMsg === 'No' && (\n                        <Alert severity=\"error\">Error updating your profile.</Alert>\n                    )}\n                </Box>\n            </Card>\n        </form>\n    );\n};\n\nconst mapStateToProps = ({ userProfileReducer }) => ({\n    userProfileReducer,\n});\n\nconst mapDispatchToProps = {};\n\nconst ConnectedAccountProfileDetails = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AccountProfileDetails);\nexport default ConnectedAccountProfileDetails;\n","import * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Container, Grid } from '@material-ui/core';\nimport AccountProfile from '../../components/account/AccountProfile';\nimport AccountProfileDetails from '../../components/account/AccountProfileDetails';\n\nconst Account = () => (\n    <>\n        <Helmet>\n            <title>WeCare | User Profile</title>\n        </Helmet>\n        <Box\n            sx={{\n                backgroundColor: 'background.default',\n                minHeight: '100%',\n                py: 3,\n            }}\n        >\n            <Container maxWidth=\"lg\">\n                <Grid container spacing={3}>\n                    <Grid item lg={4} md={6} xs={12}>\n                        <AccountProfile />\n                    </Grid>\n                    <Grid item lg={8} md={6} xs={12}>\n                        <AccountProfileDetails />\n                    </Grid>\n                </Grid>\n            </Container>\n        </Box>\n    </>\n);\n\nexport default Account;\n","import axios from 'axios';\nimport * as ActionTypes from './constants/action-types';\nimport { Locale } from './user/types';\nconst api = axios.create({\n    withCredentials: true,\n});\napi.interceptors.request.use((config) => {\n    config.headers.authtoken =\n        (typeof window !== 'undefined' && window.localStorage.getItem('token')) || null;\n    return config;\n});\nexport const setLocale = (locale: Locale) => ({\n    type: ActionTypes.SETLOCALE,\n    payload: locale,\n});\nexport const setGetHelp = (payload = {}) => ({\n    type: ActionTypes.SETGETHELP,\n    payload,\n});\nexport const updateUserProfile = (payload) => ({\n    type: ActionTypes.updateUser,\n    payload: payload?.data?.data || payload?.data || payload || {},\n});\nexport const updateUserProfileDoctorData = (payload = {}) => ({\n    type: ActionTypes.SETDOCTORDATA,\n    payload,\n});\nconst jsonToQueryString = (json = {}) => {\n    const str = Object.keys(json)\n        .map((key) => encodeURIComponent(key) + '=' + encodeURIComponent(json[key]))\n        .join('&');\n    return str ? '?' + str : '';\n};\n\n/* api */\nexport const signUp = (data = {}) => api.post('/api/signup', data);\nexport const loginApi = (data = {}) => api.post('/api/login', data);\nexport const getHome = (data = {}) => api.get('/api/listing' + jsonToQueryString(data));\n\nexport const getAllDoctorsAppointments = (id, data = {}) =>\n    api.get(`/api/appointments/doctors/${id}${jsonToQueryString(data)}`);\nexport const getAvailableDoctors = (data = {}) =>\n    api.get('/api/appointments/doctors' + jsonToQueryString(data));\nexport const setDoctorsAvailability = (data) =>\n    api.post(`/api/appointments/doctors/${data?.userId || data?.id}`, data);\nexport const createAppointment = (data) => api.post('/api/appointments', data);\nexport const getHelp = (data = {}) => api.get('/api/gethelp' + jsonToQueryString(data));\nexport const giveHelp = (data = {}) => api.post('/api/gethelp', data);\nexport const getServiceById = (id, data = {}) =>\n    api.get(`/api/gethelp/services/${id}${jsonToQueryString(data)}`);\nexport const getResourcesById = (id, data = {}) =>\n    api.get(`/api/gethelp/resources/${id}${jsonToQueryString(data)}`);\nexport const getProfile = (data) =>\n    api.get(`/api/user/${data?.userId || data?.id}${jsonToQueryString(data)}`);\nexport const profileUpdate = (data = {}) => api.put('/api/user', data);\n/* Thunk Actions */\nexport const getProfileData = (data = {}) => {\n    return (dispatch) => {\n        getProfile(data).then((r) => {\n            dispatch(updateUserProfile(r));\n        });\n    };\n};\n","import * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport {\n    Box,\n    Button,\n    Container,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    TextField,\n    TextareaAutosize,\n    Typography,\n    Switch,\n    FormControlLabel,\n    Alert,\n} from '@material-ui/core';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { connect } from 'react-redux';\nimport {\n    getAllDoctorsAppointments,\n    setDoctorsAvailability,\n    setGetHelp,\n    getProfileData,\n} from 'store/actions';\nimport { objectWithBoolean, formatDate, prettyDate } from \"utils/json\";\n\nconst columns = [\n    {\n        field: 'time',\n        headerName: 'Time',\n        flex: 1,\n        valueGetter: (params) => prettyDate(params?.value),\n    },\n    {\n        field: 'fullName',\n        headerName: 'Full name',\n        description: 'This column has a value getter and is not sortable.',\n        sortable: false,\n        flex: 1,\n        valueGetter: (params) => {\n            const user = params.getValue(params?.id, 'user');\n            return `${user?.firstName || ''} ${user?.lastName || ''}`;\n        },\n    },\n    {\n        field: 'state',\n        headerName: 'State',\n        flex: 1,\n        valueGetter: (params) => params.getValue(params?.id, 'user')?.address?.state,\n    },\n    {\n        field: 'gender',\n        headerName: 'Gender',\n        flex: 1,\n        valueGetter: (params) => params.getValue(params?.id, 'user')?.userMetaData?.gender,\n    },\n    {\n        field: 'notes',\n        headerName: 'notes',\n        flex: 1,\n    },\n];\n\nexport const DoctorSchedule = (props) => {\n    const [open, setOpen] = React.useState(false);\n    const [activeUser, setActiveUser] = React.useState(null);\n    const [successAlert, setSuccessAlert] = React.useState('');\n    const [available, setAvailable] = React.useState(false);\n    React.useEffect(() => {\n        props?.id && props.getProfileData({ id: props?.id });\n    }, []);\n    React.useEffect(() => {\n        setAvailable(!!props?.doctor?.availability);\n    }, [props?.doctor?.availability]);\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n    const handleRowClick = ({ row }) => {\n        setActiveUser(row);\n    };\n    const setSuccessAlertWithTimer = (msg) => {\n        setSuccessAlert(msg);\n        setTimeout(() => {\n            setSuccessAlert('');\n        }, 6000);\n    };\n    const handleClose = () => {\n        setActiveUser(null);\n        setOpen(false);\n    };\n    const handleToggleAvailability = (e, checked) => {\n        setAvailable(checked);\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const formData = new FormData(e.target);\n        const formProps = objectWithBoolean(Object.fromEntries(formData));\n        if (!formProps?.available) {\n            formProps.availability = '';\n        }\n        console.log(formProps);\n        setDoctorsAvailability({ ...formProps, id: props?.id })\n            .then((data) => {\n                setAvailable(formProps?.availability);\n                setSuccessAlertWithTimer('Updated Availability');\n                props?.id && props.getProfileData({ id: props?.id });\n                setOpen(false);\n            })\n            .catch((err) => {\n                console.log('Db issue');\n            });\n    };\n    const DataTable = ({ rows }) => {\n        if (rows?.length) {\n            return (\n                <div style={{ height: '100vh', width: '100%' }}>\n                    {!rows.length ? (\n                        <Typography sx={{ mt: 2, mb: 1 }}>No Appointments</Typography>\n                    ) : (\n                        <DataGrid\n                            rows={rows}\n                            columns={columns}\n                            pageSize={15}\n                            disableSelectionOnClick\n                            onRowClick={handleRowClick}\n                        />\n                    )}\n                </div>\n            );\n        }\n        return null;\n        //return <Typography sx={{ mt: 2, mb: 1 }}>Loading</Typography>;\n    };\n    return (\n        <>\n            <Helmet>\n                <title>WeCare</title>\n            </Helmet>\n            <Box\n                sx={{\n                    backgroundColor: 'background.default',\n                    minHeight: '100vh',\n                    py: 3,\n                }}\n            >\n                <Container maxWidth={false}>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'flex-end',\n                        }}\n                    >\n                        <Button color=\"primary\" variant=\"contained\" onClick={handleClickOpen}>\n                            Update Availibility\n                        </Button>\n                    </Box>\n                    {successAlert && <Alert severity=\"success\">{successAlert}</Alert>}\n                    <Box sx={{ pt: 3 }}>\n                        <DataTable rows={props?.appointments} />\n                    </Box>\n                </Container>\n            </Box>\n            <Dialog open={!!activeUser} onClose={handleClose} fullWidth>\n                <DialogTitle>{activeUser?.user?.firstName}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>Notes</DialogContentText>\n                    <form className=\"\" noValidate>\n                        <Box sx={{ my: 2 }}>\n                            <TextareaAutosize\n                                id=\"datetime-local\"\n                                minRows={10}\n                                defaultValue={activeUser?.user?.notes}\n                                className=\"full-width\"\n                            />\n                        </Box>\n                    </form>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose}>Cancel</Button>\n                    <Button onClick={handleClose}>Save</Button>\n                </DialogActions>\n            </Dialog>\n            <Dialog open={open} onClose={handleClose}>\n                <form className=\"\" noValidate onSubmit={handleSubmit}>\n                    <DialogTitle>Provide Medical Assistance</DialogTitle>\n                    <DialogContent>\n                        <FormControlLabel\n                            control={\n                                <Switch\n                                    defaultChecked={available}\n                                    onChange={handleToggleAvailability}\n                                    name=\"available\"\n                                    value=\"true\"\n                                />\n                            }\n                            label=\"Available\"\n                        />\n                        {available && (\n                            <>\n                                <DialogContentText>Set up your availability</DialogContentText>\n                                <Box sx={{ my: 2 }}>\n                                    <TextField\n                                        id=\"datetime-local\"\n                                        name=\"availability\"\n                                        label=\"To\"\n                                        type=\"datetime-local\"\n                                        defaultValue={\n                                            (props?.doctor?.availability &&\n                                                formatDate(props?.doctor?.availability)) ||\n                                            '2017-06-04T10:30'\n                                        }\n                                        className=\"mb-2\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    />\n                                </Box>\n                            </>\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleClose}>Cancel</Button>\n                        <Button type=\"submit\">Save Details</Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        </>\n    );\n};\n\nconst mapStateToProps = ({ userProfileReducer }) => ({\n    ...userProfileReducer,\n});\n\nconst mapDispatchToProps = { setGetHelp, getProfileData };\n\nconst ConnectedDoctorSchedule = connect(mapStateToProps, mapDispatchToProps)(DoctorSchedule);\nexport default ConnectedDoctorSchedule;\n","import * as React from 'react';\nimport {\n    Alert,\n    Box,\n    Button,\n    Container,\n    Stepper,\n    Step,\n    StepLabel,\n    Typography,\n    TextField,\n    MenuItem,\n    Select,\n    Avatar,\n    CardHeader,\n    CardContent,\n    Card,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n} from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { createAppointment, getAvailableDoctors, setGetHelp, getProfileData } from 'store/actions';\nimport { getDate, formatDate, prettyDate } from 'utils/json';\nconst steps = ['Select time', 'Select Doctor', 'Notes', 'Overview'];\nexport const LookForMedicalAssistance = (props) => {\n    const [open, setOpen] = React.useState(false);\n    const [activeStep, setActiveStep] = React.useState(0);\n    const [selectedTime, setSelectedTime] = React.useState(getDate(1) + 'T10:30');\n    const [doctors, setDoctors] = React.useState([]);\n    const [selectedDoctor, setSelectedDoctor] = React.useState(null);\n    const [successAlert, setSuccessAlert] = React.useState('');\n    const [alert, setAlert] = React.useState('');\n    const notesInput = React.useRef();\n    const [notes, setNotes] = React.useState('');\n    const [skipped, setSkipped] = React.useState(new Set());\n    const hasDuplicateAppointment = (props?.appointments || []).find(\n        (x) =>\n            selectedTime === x?.time ||\n            selectedTime === formatDate(x?.time) ||\n            x?.time?.indexOf(selectedTime) > 0\n    );\n    const handleClickOpen = () => {\n        setActiveStep(0);\n        setAlert('');\n        setOpen(true);\n    };\n    const handleClose = () => {\n        setNotes('');\n        setSelectedDoctor('');\n        setActiveStep(0);\n        setAlert('');\n        setOpen(false);\n    };\n    const setSuccessAlertWithTimer = (msg) => {\n        setSuccessAlert(msg);\n        setAlert('');\n        setTimeout(() => {\n            setSuccessAlert('');\n        }, 6000);\n    };\n    React.useEffect(() => {\n        props?.id && props.getProfileData({ id: props?.id });\n        setTime();\n    }, []);\n    const isStepOptional = (step) => {\n        return step === 2;\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n    const saveNotes = () => {\n        // @ts-ignore\n        const notesValue = notesInput?.current?.value;\n        if (notesValue && notesValue !== notes) {\n            setNotes(notesValue);\n        }\n    };\n    const handleNext = () => {\n        const last = activeStep === steps.length - 1;\n        const setDoctorStep = activeStep === 1;\n        let newSkipped = skipped;\n        if (isStepSkipped(activeStep)) {\n            newSkipped = new Set(newSkipped.values());\n            newSkipped.delete(activeStep);\n        }\n        if (last) {\n            const data = {\n                userId: props?.id,\n                time: selectedTime,\n                doctorId: selectedDoctor?._id,\n                notes,\n                status: false,\n                appointmentDetails: 'Appointment',\n            };\n            if (data.userId && data.time && data.doctorId) {\n                createAppointment(data)\n                    .then((r) => {\n                        handleClose();\n                        setSuccessAlertWithTimer('Appointment Set');\n                        props?.id && props.getProfileData({ id: props?.id });\n                    })\n                    .catch((e) => setAlert('something went wrong'));\n            } else {\n                setAlert('missing data');\n            }\n            setAlert('');\n        } else {\n            if (activeStep === 0 && hasDuplicateAppointment) {\n                setAlert('Conflict with another appointment');\n                return;\n            }\n            if (setDoctorStep && !selectedDoctor) {\n                setAlert('Please select a different Time');\n                return;\n            }\n            setActiveStep((prevActiveStep) => prevActiveStep + 1);\n            setSkipped(newSkipped);\n            saveNotes();\n            setAlert('');\n        }\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n    const setTime = (time = '') => {\n        time && setSelectedTime(time);\n        getAvailableDoctors({ availability: time ? time : selectedTime })\n            .then((response) => setDoctors(response.data))\n            .catch(console.log);\n    };\n    const handleSkip = () => {\n        if (!isStepOptional(activeStep)) {\n            // You probably want to guard against something like this,\n            // it should never occur unless someone's actively trying to break something.\n            throw new Error(\"You can't skip a step that isn't optional.\");\n        }\n\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        setSkipped((prevSkipped) => {\n            const newSkipped = new Set(prevSkipped.values());\n            newSkipped.add(activeStep);\n            return newSkipped;\n        });\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n    const StepContainer = ({ step }: any) => {\n        switch (step) {\n            case 0: {\n                return (\n                    <TextField\n                        id=\"datetime-local\"\n                        label=\"Time\"\n                        type=\"datetime-local\"\n                        defaultValue={selectedTime}\n                        className=\"mb-2\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        onChange={({ currentTarget }) => {\n                            setTime(currentTarget?.value);\n                        }}\n                    />\n                );\n            }\n            case 1: {\n                if (doctors.length) {\n                    return (\n                        <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            value={selectedDoctor?._id || '-1'}\n                            label=\"Doctors\"\n                            onChange={({ target }) => {\n                                setSelectedDoctor(\n                                    doctors.find((x) => x?._id === target?.value) || null\n                                );\n                            }}\n                        >\n                            <MenuItem disabled value=\"-1\">\n                                <em>Select Doctor</em>\n                            </MenuItem>\n                            {doctors.map((doctor, id) => (\n                                <MenuItem key={id} value={doctor?._id}>\n                                    {doctor?.firstName}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    );\n                }\n                return (\n                    <Typography sx={{ mt: 2, mb: 1 }}>\n                        No Doctors Available Please Select a new time\n                    </Typography>\n                );\n            }\n            case 2: {\n                const props = {\n                    ref: notesInput,\n                    id: 'datetime-local',\n                    rows: 10,\n                    defaultValue: notes,\n                    className: 'full-width',\n                };\n                // @ts-ignore\n                return <textarea {...props} />;\n            }\n            case 3: {\n                const date = new Date(selectedTime).toLocaleDateString();\n                const day = new Date(selectedTime).toLocaleTimeString();\n                const formattedDate = `${date}  ${day}`;\n                return (\n                    <Card sx={{ maxWidth: 345 }}>\n                        <CardHeader\n                            avatar={<Avatar src=\"\" aria-label=\"\" />}\n                            title={selectedDoctor?.firstName}\n                            subheader={prettyDate(selectedTime)}\n                        />\n                        <CardContent>\n                            <Typography variant=\"body2\" color=\"text.secondary\">\n                                {notes || 'appointment'}\n                            </Typography>\n                        </CardContent>\n                    </Card>\n                );\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n    const DataTable = ({ rows }) => {\n        const columns = [\n            {\n                field: 'time',\n                headerName: 'Time',\n                flex: 1,\n                valueGetter: (params) => prettyDate(params?.value),\n            },\n            {\n                field: 'fullName',\n                headerName: 'Full name',\n                description: 'This column has a value getter and is not sortable.',\n                sortable: false,\n                flex: 1,\n                valueGetter: (params) => {\n                    const user = params.getValue(params?.id, 'doctor');\n                    return `${user?.firstName || ''} ${user?.lastName || ''}`;\n                },\n            },\n            {\n                field: 'state',\n                headerName: 'State',\n                flex: 1,\n                valueGetter: (params) => params.getValue(params?.id, 'doctor')?.address?.state,\n            },\n            {\n                field: 'gender',\n                headerName: 'Gender',\n                flex: 1,\n                valueGetter: (params) =>\n                    params.getValue(params?.id, 'doctor')?.userMetaData?.gender,\n            },\n            {\n                field: 'notes',\n                headerName: 'notes',\n                flex: 1,\n            },\n        ];\n        if (rows?.length) {\n            return (\n                <div style={{ height: '100vh', width: '100%' }}>\n                    {!rows.length ? (\n                        <Typography sx={{ mt: 2, mb: 1 }}>No Appointments</Typography>\n                    ) : (\n                        <>\n                            <Typography sx={{ mt: 2, mb: 1 }}>Appointments</Typography>\n                            <DataGrid\n                                rows={rows}\n                                columns={columns}\n                                pageSize={15}\n                                disableSelectionOnClick\n                            />\n                        </>\n                    )}\n                </div>\n            );\n        }\n        return null;\n        //return <Typography sx={{ mt: 2, mb: 1 }}>Loading</Typography>;\n    };\n    return (\n        <Box\n            sx={{\n                backgroundColor: 'background.default',\n                minHeight: '100vh',\n                py: 3,\n            }}\n        >\n            <Container maxWidth={false}>\n                <Box\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'flex-end',\n                    }}\n                >\n                    <Button color=\"primary\" variant=\"contained\" onClick={handleClickOpen}>\n                        Make Appointment\n                    </Button>\n                </Box>\n                {successAlert && <Alert severity=\"success\">{successAlert}</Alert>}\n                <Dialog open={open} onClose={handleClose} fullWidth>\n                    <DialogTitle>Make an Appointment</DialogTitle>\n                    <DialogContent>\n                        {alert && <Alert severity=\"error\">{alert}</Alert>}\n                        <Box sx={{ width: '100%' }}>\n                            <Stepper activeStep={activeStep}>\n                                {steps.map((label, index) => {\n                                    const stepProps = {};\n                                    const labelProps = {};\n                                    if (isStepOptional(index)) {\n                                        labelProps.optional = (\n                                            <Typography variant=\"caption\">Optional</Typography>\n                                        );\n                                    }\n                                    if (isStepSkipped(index)) {\n                                        stepProps.completed = false;\n                                    }\n                                    return (\n                                        <Step key={label} {...stepProps}>\n                                            <StepLabel {...labelProps}>{label}</StepLabel>\n                                        </Step>\n                                    );\n                                })}\n                            </Stepper>\n                            {activeStep === steps.length ? (\n                                <React.Fragment>\n                                    <Typography sx={{ mt: 2, mb: 1 }}>\n                                        All steps completed - you&apos;re finished\n                                    </Typography>\n                                    <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\n                                        <Box sx={{ flex: '1 1 auto' }} />\n                                        <Button onClick={handleReset}>Reset</Button>\n                                    </Box>\n                                </React.Fragment>\n                            ) : (\n                                <React.Fragment>\n                                    <Box sx={{ my: 2, minHeight: '170px' }}>\n                                        <StepContainer step={activeStep} />\n                                    </Box>\n                                    <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\n                                        <Button\n                                            color=\"inherit\"\n                                            disabled={activeStep === 0}\n                                            onClick={handleBack}\n                                            sx={{ mr: 1 }}\n                                        >\n                                            Back\n                                        </Button>\n                                        <Box sx={{ flex: '1 1 auto' }} />\n                                        {isStepOptional(activeStep) && (\n                                            <Button\n                                                color=\"inherit\"\n                                                onClick={handleSkip}\n                                                sx={{ mr: 1 }}\n                                            >\n                                                Skip\n                                            </Button>\n                                        )}\n\n                                        <Button onClick={handleNext} color=\"primary\">\n                                            {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                        </Button>\n                                    </Box>\n                                </React.Fragment>\n                            )}\n                        </Box>\n                    </DialogContent>\n                </Dialog>\n                <Box sx={{ width: '100%' }}>\n                    <DataTable rows={props?.appointments} />\n                </Box>\n            </Container>\n        </Box>\n    );\n};\n\nconst mapStateToProps = ({ userProfileReducer }) => ({\n    ...userProfileReducer,\n});\n\nconst mapDispatchToProps = { setGetHelp, getProfileData, createAppointment };\n\nconst ConnectedLookForMedicalAssistance = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(LookForMedicalAssistance);\nexport default ConnectedLookForMedicalAssistance;\n","import * as React from 'react';\nimport {\n    Alert,\n    Box,\n    Button,\n    Card,\n    CardContent,\n    CardHeader,\n    Checkbox,\n    Divider,\n    FormControlLabel,\n    Grid\n} from \"@material-ui/core\";\nimport { connect } from 'react-redux';\nimport { profileUpdate, updateUserProfile } from 'store/actions';\nimport { objectWithBoolean } from 'utils/json';\nconst SettingsProfileStatus = ({ profile, id, ...rest }) => {\n    const [successAlert, setSuccessAlert] = React.useState('');\n    const setSuccessAlertWithTimer = (msg) => {\n        setSuccessAlert(msg);\n        setTimeout(() => {\n            setSuccessAlert('');\n        }, 6000);\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const formData = new FormData(e.target);\n        const data = Object.fromEntries(formData)\n        const formProps = objectWithBoolean({\n            ...profile,\n            ...data,\n        });\n        console.log('settings',data?.profileActive,{ ...formProps, profileActive: formProps?.profileActive !== 'off' });\n        profileUpdate({\n            id,\n            profile: { ...formProps, profileActive: formProps?.profileActive !== 'off' },\n        })\n            .then(({ data }) => {\n                rest?.updateUserProfile(data);\n                console.log(data);\n                setSuccessAlertWithTimer('Saved');\n\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    return (\n        <form onSubmit={handleSubmit} className=\"mb-2\">\n            {successAlert && <Alert severity=\"success\">{successAlert}</Alert>}\n\n            <Card\n                sx={{\n                    mb: 2,\n                }}\n            >\n                <CardHeader subheader=\"Deactivate Profile\" title=\"Profile Status\" />\n                <Divider />\n                <CardContent>\n                    <Grid container spacing={6} wrap=\"wrap\">\n                        <Grid\n                            item\n                            md={12}\n                            sm={6}\n                            sx={{\n                                display: 'flex',\n                                flexDirection: 'column',\n                            }}\n                            xs={12}\n                        >\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color=\"primary\"\n                                        name=\"profileActive\"\n                                        value=\"off\"\n                                        defaultChecked={!profile?.profileActive}\n                                    />\n                                }\n                                label=\"Deactivate your profile\"\n                            />\n                        </Grid>\n                    </Grid>\n                </CardContent>\n                <Divider />\n                <Box\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'flex-end',\n                        p: 2,\n                    }}\n                >\n                    <Button color=\"primary\" variant=\"contained\" type=\"submit\">\n                        Update\n                    </Button>\n                </Box>\n            </Card>\n        </form>\n    );\n};\n\nconst mapStateToProps = ({ userProfileReducer }) => ({\n    ...userProfileReducer,\n});\n\nconst mapDispatchToProps = { updateUserProfile };\n\nconst ConnectedSettingsProfileStatus = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(SettingsProfileStatus);\nexport default ConnectedSettingsProfileStatus;\n","import * as React from 'react';\nimport { useState } from 'react';\nimport { Box, Button, Card, CardContent, CardHeader, Divider, TextField } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { profileUpdate } from 'store/actions';\n\nconst SettingsPassword = ({ userMetaData }) => {\n    const [values, setValues] = useState({\n        oldpassword: '',\n        password: '',\n        confirm: '',\n    });\n\n    const handleChange = ({ target }) => {\n        target &&\n            setValues({\n                ...values,\n                [target.name]: target.value,\n            });\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        console.log(values);\n        profileUpdate({})\n            .then((data) => {\n                console.log(data);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    return (\n        <form onSubmit={handleSubmit} className=\"mb-2\">\n            <Card\n                sx={{\n                    mb: 2,\n                }}\n            >\n                <CardHeader title=\"Change Password\" />\n                <Divider />\n                <CardContent>\n                    <TextField\n                        fullWidth\n                        label=\"Old Password\"\n                        margin=\"normal\"\n                        name=\"oldpassword\"\n                        onChange={handleChange}\n                        type=\"password\"\n                        value={values.oldpassword}\n                        variant=\"outlined\"\n                    />\n                    <TextField\n                        fullWidth\n                        label=\"New Password\"\n                        margin=\"normal\"\n                        name=\"password\"\n                        onChange={handleChange}\n                        type=\"password\"\n                        value={values.password}\n                        variant=\"outlined\"\n                    />\n                    <TextField\n                        fullWidth\n                        label=\"Confirm New password\"\n                        margin=\"normal\"\n                        name=\"confirm\"\n                        onChange={handleChange}\n                        type=\"password\"\n                        value={values.confirm}\n                        variant=\"outlined\"\n                    />\n                </CardContent>\n                <Divider />\n                <Box\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'flex-end',\n                        p: 2,\n                    }}\n                >\n                    <Button color=\"primary\" variant=\"contained\" type=\"submit\">\n                        Update\n                    </Button>\n                </Box>\n            </Card>\n        </form>\n    );\n};\n\nconst mapStateToProps = ({ userProfileReducer }) => ({\n    ...userProfileReducer,\n});\nconst mapDispatchToProps = {  };\nconst ConnectedSettingsPassword = connect(mapStateToProps, mapDispatchToProps)(SettingsPassword);\nexport default ConnectedSettingsPassword;\n","import * as React from 'react';\nimport {\n    Alert,\n    Box,\n    Button,\n    Card,\n    CardContent,\n    CardHeader,\n    Checkbox,\n    Divider,\n    FormControlLabel,\n    Grid,\n    Typography\n} from \"@material-ui/core\";\nimport { connect } from 'react-redux';\nimport { profileUpdate, updateUserProfile } from 'store/actions';\nimport { objectWithBoolean } from 'utils/json';\n\nconst SettingsDoctor = ({ profile, userMetaData, id, ...rest }) => {\n    const [successAlert, setSuccessAlert] = React.useState('');\n    const setSuccessAlertWithTimer = (msg) => {\n        setSuccessAlert(msg);\n        setTimeout(() => {\n            setSuccessAlert('');\n        }, 6000);\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const formData = new FormData(e.target);\n        const formProps = objectWithBoolean({\n            emailNotifications: false,\n            appNotifications: false,\n            phoneCalls: false,\n            ...Object.fromEntries(formData),\n        });\n        profileUpdate({ id, userMetaData: { ...userMetaData, ...formProps } })\n            .then((data) => {\n                rest?.updateUserProfile(data);\n                setSuccessAlertWithTimer('Saved');\n\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    return (\n        <form onSubmit={handleSubmit} className=\"mb-2\">\n            {successAlert && <Alert severity=\"success\">{successAlert}</Alert>}\n\n            <Card\n                sx={{\n                    mb: 2,\n                }}\n            >\n                <CardHeader subheader=\"Change your status\" title=\"Doctor Settings\" />\n                <Divider />\n                <CardContent>\n                    <Grid container spacing={6} wrap=\"wrap\">\n                        <Grid\n                            item\n                            md={4}\n                            sm={6}\n                            sx={{\n                                display: 'flex',\n                                flexDirection: 'column',\n                            }}\n                            xs={12}\n                        >\n                            <Typography color=\"textPrimary\" gutterBottom variant=\"h6\">\n                                Messages\n                            </Typography>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        name=\"emailNotifications\"\n                                        value={true}\n                                        defaultChecked={userMetaData?.emailNotifications}\n                                    />\n                                }\n                                label=\"Email\"\n                            />\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        name=\"appNotifications\"\n                                        value={true}\n                                        defaultChecked={userMetaData?.appNotifications}\n                                    />\n                                }\n                                label=\"Push Notifications\"\n                            />\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        name=\"phoneCalls\"\n                                        value={true}\n                                        defaultChecked={userMetaData?.phoneCalls}\n                                    />\n                                }\n                                label=\"Phone calls\"\n                            />\n                        </Grid>\n                    </Grid>\n                </CardContent>\n                <Divider />\n                <Box\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'flex-end',\n                        p: 2,\n                    }}\n                >\n                    <Button color=\"primary\" variant=\"contained\" type=\"submit\">\n                        Update\n                    </Button>\n                </Box>\n            </Card>\n        </form>\n    );\n};\nconst mapStateToProps = ({ userProfileReducer }) => ({\n    ...userProfileReducer,\n});\n\nconst mapDispatchToProps = { updateUserProfile };\n\nconst ConnectedSettingsDoctor = connect(mapStateToProps, mapDispatchToProps)(SettingsDoctor);\nexport default ConnectedSettingsDoctor;\n","import * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { connect } from 'react-redux';\nimport { Box, Container } from '@material-ui/core';\nimport SettingsProfileStatus from '../../components/settings/SettingsProfileStatus';\nimport SettingsPassword from '../../components/settings/SettingsPassword';\nimport SettingsDoctor from '../../components/settings/SettingsDoctor';\n\nconst SettingsView = (props) => (\n    <>\n        <Helmet>\n            <title>Settings</title>\n        </Helmet>\n        <Box\n            sx={{\n                backgroundColor: 'background.default',\n                minHeight: '100%',\n                py: 3,\n            }}\n        >\n            <Container maxWidth=\"lg\">\n                {null && <SettingsPassword />}\n                {props.isDoctor && <SettingsDoctor {...props} />}\n                <SettingsProfileStatus />\n            </Container>\n        </Box>\n    </>\n);\n\nconst mapStateToProps = ({ userProfileReducer }) => ({\n    ...userProfileReducer?.userMetaData,\n});\n\nconst mapDispatchToProps = {};\n\nconst ConnectedSettingsView = connect(mapStateToProps, mapDispatchToProps)(SettingsView);\nexport default ConnectedSettingsView;\n","import * as React from 'react';\nimport { SvgIcon } from '@material-ui/core';\n\nconst Google = (props) => (\n    <SvgIcon {...props}>\n        <path d=\"M21,12.2177419 C21,13.9112905 20.6311475,15.4233869 19.8934426,16.7540323 C19.1557377,18.0846776 18.1168031,19.1249998 16.7766393,19.875 C15.4364756,20.6250002 13.8934424,21 12.147541,21 C10.4999998,21 8.97540984,20.5947579 7.57377049,19.7842742 C6.17213115,18.9737905 5.05942604,17.8790323 4.23565574,16.5 C3.41188543,15.1209677 3,13.6209679 3,12 C3,10.3790321 3.41188543,8.87903226 4.23565574,7.5 C5.05942604,6.12096774 6.17213115,5.02620949 7.57377049,4.21572581 C8.97540984,3.40524212 10.4999998,3 12.147541,3 C14.5327871,3 16.5737705,3.78629051 18.2704918,5.35887097 L15.7991803,7.71774194 C15.0122953,6.96774175 14.0655738,6.52016129 12.9590164,6.375 C11.9262295,6.22983871 10.9057375,6.375 9.89754098,6.81048387 C8.88934445,7.24596774 8.07786904,7.89919355 7.46311475,8.77016129 C6.79918033,9.71370968 6.46721311,10.7903228 6.46721311,12 C6.46721311,13.0403228 6.72540984,13.9899192 7.24180328,14.8487903 C7.75819672,15.7076615 8.4467215,16.3971776 9.30737705,16.9173387 C10.1680326,17.4374998 11.1147541,17.6975806 12.147541,17.6975806 C13.2540984,17.6975806 14.2254096,17.455645 15.0614754,16.9717742 C15.7254098,16.5846772 16.2786885,16.0645161 16.7213115,15.4112903 C17.0409838,14.8790321 17.2499998,14.3467744 17.3483607,13.8145161 L12.147541,13.8145161 L12.147541,10.6935484 L20.852459,10.6935484 C20.9508199,11.2258066 21,11.7338712 21,12.2177419 Z\" />\n    </SvgIcon>\n);\n\nexport default Google;\n","import * as React from 'react';\nimport { useState, useRef, useEffect } from 'react';\n\nconst useMounted = () => {\n    const mounted = useRef(false);\n\n    useEffect(() => {\n        mounted.current = true;\n        return () => {\n            mounted.current = false;\n        };\n    });\n\n    return mounted;\n};\n\nexport default useMounted;\n","import * as React from 'react';\nimport { useState, useRef, useEffect } from 'react';\nimport { Link as RouterLink, useHistory, useLocation } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport * as Yup from 'yup';\nimport { getStorage, ref, uploadBytes, getDownloadURL, deleteObject } from 'firebase/storage';\nimport { Formik } from 'formik';\nimport {\n    Box,\n    Button,\n    Container,\n    Grid,\n    Link,\n    TextField,\n    Typography,\n    Alert,\n} from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport { useAuth } from 'contexts/AuthContext';\nimport { loginApi, updateApiToken } from \"store/actions\";\nimport GoogleIcon from '../../icons/Google';\nimport useMounted from '../hooks/useMounted';\nimport { loginAction, createUserProfile, saveUserName } from '../../store/constants/action-types';\n\nconst Login = () => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const [alert, setAlert] = useState(false);\n    const [error, setError] = useState('');\n    const { login, signinWithGoogle } = useAuth();\n    const mounted = useMounted();\n    const handleSubmit = (email, token) => {\n        dispatch({ type: loginAction, email });\n        localStorage.setItem('token', token);\n        apiCall(email, token);\n    };\n\n    // useEffect(() => {\n    //     session();\n    // }, [1]);\n\n    const handleSubmitWithGoogle = (email, token) => {\n        dispatch({ type: loginAction, email });\n        localStorage.setItem('token', token);\n        apiCall(email, token);\n    };\n\n    const apiCall = (email, token) => {\n        const storage = getStorage();\n        const storageRef = ref(storage, `/${email}/profilePic/userPic`);\n\n        const payload = {\n            userName: email,\n        };\n        // make a post request with the user data\n        loginApi(payload).then(\n            (response) => {\n                console.log('axios call', response);\n                if (response.data.status === 401) {\n                    //redirect to register page\n                    history.push('/login2register', { replace: true });\n                } else\n                if (response.status === 200) {\n                    const user = response?.data?.user || response?.data;\n                    console.log('login successful', user);\n                    dispatch({\n                        type: saveUserName,\n                        ...user,\n                    });\n                    dispatch({\n                        type: createUserProfile,\n                        id: user._id,\n                        ...user,\n                        payload: response?.data,\n                    });\n                    history.push('app/dashboard', { replace: true });\n                }\n            },\n            (error) => {\n                console.log('login error', error);\n            }\n        );\n    };\n    return (\n        <>\n            <Helmet>\n                <title>WeCare - Login</title>\n            </Helmet>\n\n            <Box\n                sx={{\n                    backgroundColor: '#ffffff',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    height: '100%',\n                    justifyContent: 'center',\n                }}\n            >\n                <Container maxWidth=\"sm\" style={{ marginTop: '70px' }}>\n                    <div style={{ marginTop: '50px', marginBottom: '50px' }}>\n                        {alert ? <Alert severity=\"error\">{error}</Alert> : <></>}\n                    </div>\n                    <Formik\n                        initialValues={{\n                            email: '',\n                            password: '',\n                            isSubmitting: false,\n                        }}\n                        validationSchema={Yup.object().shape({\n                            email: Yup.string()\n                                .email('Must be a valid email')\n                                .max(255)\n                                .required('Email is required'),\n                            password: Yup.string().max(255).required('Password is required'),\n                        })}\n                        onSubmit={(values) => {\n                            console.log(values);\n                            values.isSubmitting = true;\n                            setAlert(false);\n                            login(values.email, values.password)\n                                .then((response: any) => {\n                                    console.log(response.user);\n                                    handleSubmit(values.email, response.user.accessToken);\n                                })\n                                .catch((error) => {\n                                    //console.log(error.message);\n                                    setAlert(true);\n                                    values.isSubmitting = false;\n                                    switch (error.code) {\n                                        case 'auth/wrong-password': {\n                                            setError('Invalid password');\n                                            break;\n                                        }\n                                        case 'auth/user-not-found': {\n                                            setError('Username does not exists');\n                                            break;\n                                        }\n                                    }\n                                    // setError(error.message);\n                                })\n                                .finally(() => {\n                                    mounted.current && (values.isSubmitting = false);\n                                });\n                            // history.push('/app/dashboard', { replace: true });\n                        }}\n                    >\n                        {({\n                            errors,\n                            handleBlur,\n                            handleChange,\n                            handleSubmit,\n                            isSubmitting,\n                            touched,\n                            values,\n                        }) => (\n                            <form onSubmit={handleSubmit}>\n                                <Box\n                                    sx={{ mb: 3 }}\n                                    display=\"flex\"\n                                    flexDirection=\"column\"\n                                    alignItems=\"center\"\n                                    justifyContent=\"center\"\n                                >\n                                    <Typography color=\"textPrimary\" variant=\"h2\">\n                                        Sign in\n                                    </Typography>\n                                    <Typography\n                                        color=\"textSecondary\"\n                                        gutterBottom\n                                        variant=\"body2\"\n                                        style={{ marginTop: '5px' }}\n                                    >\n                                        Sign in on the WeCare platform using Social\n                                    </Typography>\n                                </Box>\n                                {/* <Grid\n                                    container\n                                    spacing={3}\n                                    display=\"flex\"\n                                    flexDirection=\"column\"\n                                    alignItems=\"center\"\n                                    justifyContent=\"center\"\n                                > */}\n                                {/* <Grid item xs={12} md={6}> */}\n                                <Box>\n                                    <Button\n                                        fullWidth\n                                        startIcon={<GoogleIcon />}\n                                        onClick={() =>\n                                            signinWithGoogle()\n                                                .then((user: any) => {\n                                                    console.log(user.user);\n                                                    handleSubmitWithGoogle(\n                                                        user.user.email,\n                                                        user.user.accessToken\n                                                    );\n                                                    // history.push(location.state?.from ?? '/app/dashboard', { replace: true });\n                                                })\n                                                .catch((error) => {\n                                                    console.log(error);\n                                                })\n                                        }\n                                        size=\"large\"\n                                        variant=\"contained\"\n                                    >\n                                        Login with Google\n                                    </Button>\n                                </Box>\n                                {/* </Grid>\n                                </Grid> */}\n                                <Box\n                                    sx={{\n                                        pb: 1,\n                                        pt: 3,\n                                    }}\n                                >\n                                    <Typography\n                                        align=\"center\"\n                                        color=\"textSecondary\"\n                                        variant=\"body1\"\n                                    >\n                                        or login with email address\n                                    </Typography>\n                                </Box>\n                                <TextField\n                                    error={Boolean(touched.email && errors.email)}\n                                    fullWidth\n                                    helperText={touched.email && errors.email}\n                                    label=\"Email Address\"\n                                    margin=\"normal\"\n                                    name=\"email\"\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    type=\"email\"\n                                    value={values.email}\n                                    variant=\"outlined\"\n                                />\n                                <TextField\n                                    error={Boolean(touched.password && errors.password)}\n                                    fullWidth\n                                    helperText={touched.password && errors.password}\n                                    label=\"Password\"\n                                    margin=\"normal\"\n                                    name=\"password\"\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    type=\"password\"\n                                    value={values.password}\n                                    variant=\"outlined\"\n                                />\n                                <Box sx={{ py: 2 }}>\n                                    <Button\n                                        color=\"primary\"\n                                        disabled={values.isSubmitting}\n                                        fullWidth\n                                        size=\"large\"\n                                        type=\"submit\"\n                                        variant=\"contained\"\n                                    >\n                                        Sign in now\n                                    </Button>\n                                </Box>\n                                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                                    <Typography color=\"textSecondary\" variant=\"body1\">\n                                        <Link\n                                            component={RouterLink}\n                                            to=\"/forgot-password\"\n                                            variant=\"h6\"\n                                            underline=\"hover\"\n                                        >\n                                            Forgot Password?\n                                        </Link>\n                                    </Typography>\n                                    <Typography color=\"textSecondary\" variant=\"body1\">\n                                        Don&apos;t have an account?{' '}\n                                        <Link\n                                            component={RouterLink}\n                                            to=\"/register1\"\n                                            variant=\"h6\"\n                                            underline=\"hover\"\n                                        >\n                                            Sign up\n                                        </Link>\n                                    </Typography>\n                                </div>\n                            </form>\n                        )}\n                    </Formik>\n                </Container>\n            </Box>\n        </>\n    );\n};\n\nexport default Login;\n","import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport axios from 'axios';\nimport serverUrl from '../../utils/config';\nimport countries from 'i18n-iso-countries';\nimport { connect } from 'react-redux';\n// import './Register.css';\nimport {\n    Box,\n    Button,\n    Checkbox,\n    Container,\n    FormHelperText,\n    Link,\n    TextField,\n    Typography,\n    Grid,\n    FormControlLabel,\n    FormControl,\n    InputLabel,\n    MenuItem,\n    Select,\n} from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createUserProfile, saveUserName } from '../../store/constants/action-types';\n// import {storage} from '../../utils/firebase';\nimport { getStorage, ref, uploadBytes } from 'firebase/storage';\n// import RootState from '../../store/rootReducer';\n\nconst RegisterThruLogin = ({userProfileReducer}) => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    countries.registerLocale(require('i18n-iso-countries/langs/en.json'));\n    const countryObj = countries.getNames('en', { select: 'official' });\n    const countryArray = Object.entries(countryObj).map(([key, value]) => {\n        return {\n            label: key,\n            value: value,\n        };\n    });\n    const [user, setUser] = React.useState(userProfileReducer.email);\n    const genderOptions = [\n        {\n            key: 1,\n            value: 'Female',\n        },\n        {\n            key: 2,\n            value: 'Male',\n        },\n        {\n            key: 3,\n            value: 'Do not want to specify',\n        },\n    ];\n    var [checked, setChecked] = React.useState(false);\n    const handleSubmit = (values) => {\n        console.log('inside submit');\n        console.log('first page data', user);\n        const isDoctor = checked;\n        const payload = {\n            userName: user,\n            firstName: values.firstName,\n            lastName: values.lastName,\n            userMetaData: {\n                isDoctor: checked,\n                gender: values.gender,\n                appNotifications: true,\n                emailNotifications: true,\n                phoneCalls: true,\n            },\n            profile: {\n                phoneNumber: values.phonenumber,\n                profileActive: true,\n                profilePic: '',\n            },\n            address: {\n                location: values.address1,\n                city: values.city,\n                state: values.state,\n                country: values.country,\n                zipCode: values.zipcode,\n            },\n        };\n        console.log(\"payload\", payload);\n        const token = localStorage.getItem('token');\n        // set the with credentials to true\n          axios.defaults.withCredentials = true;\n          // make a post request with the user data\n          axios.post(serverUrl + 'signup/user', payload, {\n            headers : {\n                authtoken: token\n            }\n        }).then(\n            (response) => {\n                console.log('axios call', response);\n                if (response.status === 200) {\n                    console.log('updated successfully');\n                    dispatch({\n                        type: saveUserName,\n                        firstName: response.data.data.firstName,\n                        lastName: response.data.data.lastName,\n                        userName: response.data.data.userName,\n                    });\n                    dispatch({\n                        type: createUserProfile,\n                        id: response.data.data._id,\n                        userMetaData: response.data.data.userMetaData,\n                        profile: response.data.data.profile,\n                        address: response.data.data.address,\n                    });\n                    history.push('app/dashboard', { replace: true });\n                }\n            },\n            (error) => {\n                console.log('register error');\n                //   this.setState({\n                //     errorMessage: error.response.data,\n                //     signupFailed: true,\n                //   });\n            }\n        );\n    };\n\n    return (\n        <>\n            <Helmet>\n                <title>WeCare - Register</title>\n            </Helmet>\n            <Box\n                sx={{\n                    backgroundColor: '#ffffff',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    height: '100%',\n                    justifyContent: 'center',\n                }}\n            >\n                <Container maxWidth=\"sm\" style={{ marginTop: '100px' }}>\n                    <Formik\n                        initialValues={{\n                            firstName: '',\n                            lastName: '',\n                            address1: '',\n                            city: '',\n                            state: '',\n                            zipcode: '',\n                            phonenumber: '',\n                            gender: '',\n                            country: '',\n                            isSubmitting: false,\n                        }}\n                        validationSchema={Yup.object().shape({\n                            firstName: Yup.string().max(255).required('First Name is required'),\n                            lastName: Yup.string().max(255).required('Last Name is required'),\n                            address1: Yup.string().max(255).required('Address is required'),\n                            city: Yup.string().max(255).required('City is required'),\n                            country: Yup.string().max(255).required('Country is required'),\n                            state: Yup.string().max(255).required('State is required'),\n                            zipcode: Yup.string().required('ZipCode is required')\n                                .matches(/^[0-9]+$/, \"Must be a number\")\n                                .min(5, \"Must be exactly 5 digits\")\n                                .max(5, \"Must be exactly 5 digits\"),\n                            gender: Yup.string().max(255),\n                            phonenumber: Yup.string().required('Phone Number is required')\n                                .matches(/^[0-9]+$/, \"Must be a number\")\n                                .min(10, \"Must be exactly 10 digits\")\n                                .max(10, \"Must be exactly 10 digits\")\n                        })}\n                        onSubmit={(values) => {\n                            console.log('insde submit', values);\n                            values.isSubmitting = true;\n                            handleSubmit(values);\n                        }}\n                    >\n                        {({\n                            errors,\n                            handleBlur,\n                            handleChange,\n                            handleSubmit,\n                            isSubmitting,\n                            touched,\n                            values,\n                        }) => (\n                            <form onSubmit={handleSubmit}>\n                                <Box\n                                    sx={{ mb: 3 }}\n                                    display=\"flex\"\n                                    flexDirection=\"column\"\n                                    alignItems=\"center\"\n                                    justifyContent=\"center\"\n                                >\n                                    <Typography color=\"textPrimary\" variant=\"h2\">\n                                        New User! Complete the Registration\n                                    </Typography>\n                                </Box>\n                                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                                    <TextField\n                                        error={Boolean(touched.firstName && errors.firstName)}\n                                        helperText={touched.firstName && errors.firstName}\n                                        label=\"First Name\"\n                                        margin=\"normal\"\n                                        name=\"firstName\"\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        value={values.firstName}\n                                        variant=\"outlined\"\n                                        style={{\n                                            width: '250px',\n                                        }}\n                                    />\n                                    <TextField\n                                        error={Boolean(touched.lastName && errors.lastName)}\n                                        helperText={touched.lastName && errors.lastName}\n                                        label=\"Last Name\"\n                                        margin=\"normal\"\n                                        name=\"lastName\"\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        value={values.lastName}\n                                        variant=\"outlined\"\n                                        style={{\n                                            width: '250px',\n                                        }}\n                                    />\n                                </div>\n                                <div>\n                                    <FormControlLabel\n                                        label=\"I am a Doctor\"\n                                        control={\n                                            <Checkbox\n                                                checked={checked}\n                                                onChange={() => {\n                                                    setChecked(!checked);\n                                                }}\n                                            />\n                                        }\n                                    />\n                                </div>\n                                <div style={{ display: 'flex', justifyContent: 'flex-start' }}>\n                                    <div\n                                        style={{\n                                            width: '250px',\n                                        }}\n                                    >\n                                        <TextField\n                                            error={Boolean(touched.gender && errors.gender)}\n                                            helperText={touched.gender && errors.gender}\n                                            label=\"Gender\"\n                                            select\n                                            margin=\"normal\"\n                                            name=\"gender\"\n                                            onBlur={handleBlur}\n                                            onChange={handleChange('gender')}\n                                            value={values.gender}\n                                            variant=\"outlined\"\n                                            fullWidth\n                                        >\n                                            <MenuItem value=\"\">\n                                                <em>None</em>\n                                            </MenuItem>\n                                            {genderOptions.map((state) => (\n                                                <MenuItem key={state.key} value={state.value}>\n                                                    {state.value}\n                                                </MenuItem>\n                                            ))}\n                                        </TextField>\n                                    </div>\n                                </div>\n                                <div style={{ display: 'flex', justifyContent: 'flex-start' }}>\n                                    <TextField\n                                        error={Boolean(touched.phonenumber && errors.phonenumber)}\n                                        helperText={touched.phonenumber && errors.phonenumber}\n                                        label=\"Phone Number\"\n                                        margin=\"normal\"\n                                        name=\"phonenumber\"\n                                        style={{\n                                            width: '250px',\n                                            height: '60px',\n                                        }}\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        value={values.phonenumber}\n                                        variant=\"outlined\"\n                                    />\n                                </div>\n                                <div style={{ display: 'flex', justifyContent: 'flex-start' }}>\n                                    <TextField\n                                        error={Boolean(touched.address1 && errors.address1)}\n                                        helperText={touched.address1 && errors.address1}\n                                        label=\"Address\"\n                                        margin=\"normal\"\n                                        name=\"address1\"\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        value={values.address1}\n                                        variant=\"outlined\"\n                                        fullWidth\n                                    />\n                                </div>\n                                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                                    <TextField\n                                        error={Boolean(touched.city && errors.city)}\n                                        helperText={touched.city && errors.city}\n                                        label=\"City\"\n                                        margin=\"normal\"\n                                        name=\"city\"\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        value={values.city}\n                                        variant=\"outlined\"\n                                        style={{\n                                            width: '250px',\n                                        }}\n                                    />\n                                    <div style={{ width: '250px' }}>\n                                        <TextField\n                                            error={Boolean(touched.country && errors.country)}\n                                            helperText={touched.country && errors.country}\n                                            label=\"Country\"\n                                            select\n                                            margin=\"normal\"\n                                            name=\"country\"\n                                            onBlur={handleBlur}\n                                            onChange={handleChange('country')}\n                                            value={values.country}\n                                            variant=\"outlined\"\n                                            fullWidth\n                                        >\n                                            <MenuItem value=\"\">\n                                                <em>None</em>\n                                            </MenuItem>\n                                            {countryArray.map((state) => (\n                                                <MenuItem key={state.label} value={state.value}>\n                                                    {state.value}\n                                                </MenuItem>\n                                            ))}\n                                        </TextField>\n                                    </div>\n                                </div>\n                                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                                    <TextField\n                                        error={Boolean(touched.state && errors.state)}\n                                        helperText={touched.state && errors.state}\n                                        label=\"State\"\n                                        margin=\"normal\"\n                                        name=\"state\"\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        value={values.state}\n                                        variant=\"outlined\"\n                                        style={{\n                                            width: '250px',\n                                        }}\n                                    />\n                                    <TextField\n                                        error={Boolean(touched.zipcode && errors.zipcode)}\n                                        helperText={touched.zipcode && errors.zipcode}\n                                        label=\"Zipcode\"\n                                        margin=\"normal\"\n                                        name=\"zipcode\"\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        value={values.zipcode}\n                                        variant=\"outlined\"\n                                        style={{\n                                            width: '250px',\n                                        }}\n                                    />\n                                </div>\n                                <Box sx={{ py: 2, alignItems: 'center', display: 'flex', ml: 5 }}>\n                                    <Button\n                                        color=\"primary\"\n                                        disabled={values.isSubmitting}\n                                        size=\"large\"\n                                        type=\"submit\"\n                                        variant=\"contained\"\n                                        style={{ width: '475px' }}\n                                        // onClick={()=>handleSubmit}\n                                        // onClick={()=>{history.push('app/dashboard', { replace: true })}}\n                                    >\n                                        Create\n                                    </Button>\n                                </Box>\n                                <Typography\n                                    color=\"textSecondary\"\n                                    variant=\"body1\"\n                                    style={{ marginLeft: '40px' }}\n                                >\n                                    Have an account?{' '}\n                                    <Link\n                                        component={RouterLink}\n                                        to=\"/login\"\n                                        variant=\"h6\"\n                                        underline=\"hover\"\n                                    >\n                                        Sign in\n                                    </Link>\n                                </Typography>\n                            </form>\n                        )}\n                    </Formik>\n                </Container>\n            </Box>\n        </>\n    );\n};\nconst mapStateToProps = ({ userProfileReducer }) => ({\n    userProfileReducer,\n});\n\nconst mapDispatchToProps = {};\n\nconst ConnectedRegisterThruLoginDetails = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(RegisterThruLogin);\nexport default ConnectedRegisterThruLoginDetails;\n","import * as React from 'react';\nimport { useState, useRef, useEffect } from 'react';\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport axios from 'axios';\nimport serverUrl from '../../utils/config';\nimport { deleteUser } from \"firebase/auth\";\nimport {\n    Box,\n    Button,\n    Checkbox,\n    Container,\n    FormHelperText,\n    Link,\n    TextField,\n    Typography,\n    Grid,\n    Snackbar,\n    Divider,\n    Alert,\n} from '@material-ui/core';\nimport GoogleIcon from '../../icons/Google';\nimport { useAuth } from '../../contexts/AuthContext';\nimport useMounted from '../hooks/useMounted';\nimport { useDispatch } from 'react-redux';\nimport { saveUserName } from '../../store/constants/action-types';\n\nconst RegisterFirstPage = () => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const [alert, setAlert] = useState(false);\n    const [error, setError] = useState('');\n    const [userExists, setUserExists] = useState(false);\n\n    const { login, register, signinWithGoogle } = useAuth();\n    const mounted = useMounted();\n\n    const handleSubmit = (userName, firstName, lastName, token) => {\n       localStorage.setItem(\"token\", token); \n       apiCall(userName, firstName, lastName, token);\n    };\n\n    const checkUser = (userName) => {\n        axios.defaults.withCredentials = true;\n        // make a post request with the user data\n        axios.post(serverUrl + 'common/exists', userName).then(\n          (response) => {\n              console.log(\"axios call\")\n            if (response.status === 200) {\n                setUserExists(true);\n            } else if(response.status === 404) {\n                setUserExists(false);\n            }\n          });\n    }\n    const apiCall = (userName, firstName, lastName, token) => {\n        const payload = {\n            userName: userName,\n            firstName: firstName,\n            lastName: lastName,\n        };\n        axios.defaults.withCredentials = true;\n        // make a post request with the user data\n        axios.post(serverUrl + 'signup/user', payload, {\n            headers : {\n                authtoken: token\n            }\n        }).then(\n          (response) => {\n              console.log(\"axios call\")\n            if (response.status === 200) {\n                console.log(\"updated successfully\", response);\n                dispatch({ type: saveUserName, firstName, lastName, userName });\n                history.push('/register2', { replace: true });\n            }\n          });\n    }\n    const handleSubmitWithGoogle = (userName, firstName, lastName, token) => {\n        localStorage.setItem('token', token);\n        apiCall(userName, firstName, lastName, token);\n        // dispatch({ type: saveUserName, firstName, lastName, userName });\n        // history.push('/register2', { replace: true });\n    };\n\n    return (\n        <>\n            <Helmet>\n                <title>WeCare - Register</title>\n            </Helmet>\n            <Box\n                sx={{\n                    backgroundColor: '#ffffff',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    height: '100%',\n                    justifyContent: 'center',\n                }}\n            >\n                <Container maxWidth=\"sm\" style={{ marginTop: '50px' }}>\n                    <div style={{ marginTop: '20px', marginBottom: '50px' }}>\n                        {alert ? <Alert severity=\"error\">{error}</Alert> : <></>}\n                    </div>\n                    <Formik\n                        initialValues={{\n                            userName: '',\n                            firstName: '',\n                            lastName: '',\n                            password: '',\n                            isSubmitting: false,\n                        }}\n                        validationSchema={Yup.object().shape({\n                            userName: Yup.string()\n                                .email('Must be a valid email')\n                                .max(255)\n                                .required('Email is required'),\n                            firstName: Yup.string().max(255).required('First name is required'),\n                            lastName: Yup.string().max(255).required('Last name is required'),\n                            password: Yup.string().max(255).required('Password is required'),\n                        })}\n                        onSubmit={(values) => {\n                            console.log(values);\n                            values.isSubmitting = true;\n                            register(values.userName, values.password)\n                                .then((response: any) => {\n                                    console.log('response',response);\n                                    handleSubmit(values.userName, values.firstName, values.lastName, response.user.accessToken);\n                                })\n                                .catch((error) => {\n                                    console.log(error.message);\n                                    values.isSubmitting = false;\n                                    setAlert(true);\n                                    switch (error.code) {\n                                        case 'auth/email-already-in-use': {\n                                            setError('User Name already registered');\n                                            // checkUser(values.userName);\n                                            // if(userExists) {\n                                                \n                                            // } else {\n                                          \n                                            // }\n                                            break;\n                                        }\n                                    }\n                                    // setError(error.message);\n                                })\n                                .finally(() => {\n                                    mounted.current && (values.isSubmitting = false);\n                                });\n                            //history.push('/register2', { replace: true });\n                        }}\n                    >\n                        {({ errors, handleBlur, handleChange, handleSubmit, touched, values }) => (\n                            <form onSubmit={handleSubmit}>\n                                <Box\n                                    sx={{ mb: 3 }}\n                                    display=\"flex\"\n                                    flexDirection=\"column\"\n                                    alignItems=\"center\"\n                                    justifyContent=\"center\"\n                                >\n                                    <Typography color=\"textPrimary\" variant=\"h2\">\n                                        Create new account\n                                    </Typography>\n                                    <Typography color=\"textSecondary\" gutterBottom variant=\"body2\">\n                                        Use your email to create new account\n                                    </Typography>\n                                </Box>\n                                <TextField\n                                    error={Boolean(touched.firstName && errors.firstName)}\n                                    fullWidth\n                                    helperText={touched.firstName && errors.firstName}\n                                    label=\"First name\"\n                                    margin=\"normal\"\n                                    name=\"firstName\"\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    value={values.firstName}\n                                    variant=\"outlined\"\n                                />\n                                <TextField\n                                    error={Boolean(touched.lastName && errors.lastName)}\n                                    fullWidth\n                                    helperText={touched.lastName && errors.lastName}\n                                    label=\"Last name\"\n                                    margin=\"normal\"\n                                    name=\"lastName\"\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    value={values.lastName}\n                                    variant=\"outlined\"\n                                />\n                                <TextField\n                                    error={Boolean(touched.userName && errors.userName)}\n                                    fullWidth\n                                    helperText={touched.userName && errors.userName}\n                                    label=\"User Name(Email)\"\n                                    margin=\"normal\"\n                                    name=\"userName\"\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    type=\"email\"\n                                    value={values.userName}\n                                    variant=\"outlined\"\n                                />\n                                <TextField\n                                    error={Boolean(touched.password && errors.password)}\n                                    fullWidth\n                                    helperText={touched.password && errors.password}\n                                    label=\"Password\"\n                                    margin=\"normal\"\n                                    name=\"password\"\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    type=\"password\"\n                                    value={values.password}\n                                    variant=\"outlined\"\n                                />\n                                <Box\n                                    sx={{\n                                        alignItems: 'center',\n                                        display: 'flex',\n                                        ml: -1,\n                                    }}\n                                >\n                                    {/* <Checkbox\n                                        checked={values.policy}\n                                        name=\"policy\"\n                                        onChange={handleChange}\n                                    />\n                                    <Typography color=\"textSecondary\" variant=\"body1\">\n                                        I have read the{' '}\n                                        <Link\n                                            color=\"primary\"\n                                            component={RouterLink}\n                                            to=\"#\"\n                                            underline=\"always\"\n                                            variant=\"h6\"\n                                        >\n                                            Terms and Conditions\n                                        </Link>\n                                    </Typography> */}\n                                </Box>\n                                {/* {Boolean(touched.policy && errors.policy) && (\n                                    <FormHelperText error>{errors.policy}</FormHelperText>\n                                )} */}\n                                <Box sx={{ py: 2 }}>\n                                    <Button\n                                        color=\"primary\"\n                                        disabled={values.isSubmitting}\n                                        fullWidth\n                                        size=\"large\"\n                                        type=\"submit\"\n                                        variant=\"contained\"\n                                    >\n                                        Next\n                                    </Button>\n                                </Box>\n                                <Typography color=\"textSecondary\" variant=\"body1\">\n                                    Have an account?{' '}\n                                    <Link\n                                        component={RouterLink}\n                                        to=\"/login\"\n                                        variant=\"h6\"\n                                        underline=\"hover\"\n                                    >\n                                        Sign in\n                                    </Link>\n                                </Typography>\n                                <Divider>\n                                    <Typography\n                                        align=\"center\"\n                                        color=\"textSecondary\"\n                                        variant=\"body1\"\n                                    >\n                                        or signup with social platform\n                                    </Typography>\n                                </Divider>\n                                {/* <Box\n                                    sx={{\n                                        pb: 1,\n                                        pt: 3,\n                                    }}\n                                >\n                                    <Typography\n                                        align=\"center\"\n                                        color=\"textSecondary\"\n                                        variant=\"body1\"\n                                    >\n                                        or signup with social platform\n                                    </Typography>\n                                </Box> */}\n                                {/* <Grid\n                                    container\n                                    spacing={3}\n                                    display=\"flex\"\n                                    flexDirection=\"column\"\n                                    alignItems=\"center\"\n                                    justifyContent=\"center\"\n                                >\n                                    <Grid item xs={12} md={6}> */}\n                                <Box\n                                    sx={{\n                                        pb: 1,\n                                        pt: 3,\n                                    }}\n                                >\n                                    <Button\n                                        fullWidth\n                                        startIcon={<GoogleIcon />}\n                                        onClick={() =>\n                                            signinWithGoogle()\n                                                .then((user: any) => {\n                                                    console.log(user);\n                                                    handleSubmitWithGoogle(\n                                                        user.user.email,\n                                                        user._tokenResponse.firstName,\n                                                        user._tokenResponse.lastName,\n                                                        user.user.accessToken\n                                                    );\n                                                    // history.push('/register2');\n                                                })\n                                                .catch((error) => {\n                                                    console.log(error);\n                                                })\n                                        }\n                                        size=\"large\"\n                                        variant=\"contained\"\n                                    >\n                                        Signup with Google\n                                    </Button>\n                                </Box>\n                                {/* </Grid>\n                                </Grid> */}\n                            </form>\n                        )}\n                    </Formik>\n                </Container>\n            </Box>\n        </>\n    );\n};\n\nexport default RegisterFirstPage;\n","import * as React from 'react';\nimport { useState } from 'react';\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport axios from 'axios';\nimport serverUrl from '../../utils/config';\nimport countries from 'i18n-iso-countries';\nimport './Register.css';\nimport {\n    Box,\n    Button,\n    Checkbox,\n    Container,\n    Link,\n    TextField,\n    Typography,\n    FormControlLabel,\n    FormControl,\n    InputLabel,\n    MenuItem,\n    Select,\n} from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createUserProfile, saveUserName } from '../../store/constants/action-types';\n// import {storage} from '../../utils/firebase';\n// import { getStorage, ref, uploadBytes } from 'firebase/storage';\n\nconst RegisterSecondPage = () => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const [user, setUser] = React.useState(useSelector((state: any) => state.userProfileReducer.userName));\n    countries.registerLocale(require(\"i18n-iso-countries/langs/en.json\"));\n    const countryObj = countries.getNames(\"en\",{select:\"official\"});\n    const countryArray = Object.entries(countryObj).map(([key, value]) =>{\n        return {\n            label: key,\n            value: value,\n        };\n    });\n    const genderOptions = [\n        {\n            key: 1,\n            value: 'Female',\n        },\n        {\n            key: 2,\n            value: 'Male',\n        },\n        {\n            key: 3,\n            value: 'Do not want to specify',\n        },\n    ];\n\n    var [checked, setChecked] = React.useState(false);\n   \n    const handleSubmit = (address1, city, zipCode, phoneNumber, state, gender, country) => {\n        const payload = {\n            userName: user,\n            userMetaData: {\n                isDoctor: checked,\n                gender: gender,\n                appNotifications: true,\n                emailNotifications: true,\n                phoneCalls: true,\n            },\n            profile: {\n                phoneNumber: phoneNumber,\n                profileActive: true,\n                profilePic: '',\n            },\n            address: {\n                location: address1,\n                city: city,\n                state: state,\n                country: country,\n                zipCode: zipCode,\n            },\n        };\n        console.log('payload', payload);\n        // set the with credentials to true\n        const token = localStorage.getItem('token');\n        axios.defaults.withCredentials = true;\n        // make a post request with the user data\n        axios.post(serverUrl + 'signup/user/register', payload, {\n            headers : {\n                authtoken: token\n            }\n        }).then(\n            (response) => {\n                console.log('axios call', response);\n                if (response.status === 200) {\n                    console.log('updated successfully');\n                    dispatch({\n                        type: saveUserName,\n                        firstName: response.data.data.firstName,\n                        lastName: response.data.data.lastName,\n                        userName: response.data.data.userName,\n                    });\n                    dispatch({\n                        type: createUserProfile,\n                        userMetaData: response.data.data.userMetaData,\n                        profile: response.data.data.profile,\n                        address: response.data.data.address,\n                    });\n\n                    history.push('app/dashboard', { replace: true });\n                }\n            },\n            (error) => {\n                console.log('register error');\n                //   this.setState({\n                //     errorMessage: error.response.data,\n                //     signupFailed: true,\n                //   });\n            }\n        );\n    };\n    return (\n        <>\n            <Helmet>\n                <title>WeCare - Register</title>\n            </Helmet>\n            <Box\n                sx={{\n                    backgroundColor: '#ffffff',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    height: '100%',\n                    justifyContent: 'center',\n                }}\n            >\n                <Container maxWidth=\"sm\" style={{ marginTop: '100px' }}>\n                    <Formik\n                        initialValues={{\n                            address1: '',\n                            city: '',\n                            zipcode: '',\n                            phonenumber: '',\n                            state: '',\n                            gender: '',\n                            country: '',\n                            isSubmitting: false,\n                        }}\n                        validationSchema={Yup.object().shape({\n                            address1: Yup.string().max(255).required('Address is required'),\n                            city: Yup.string().max(255).required('City is required'),\n                            country: Yup.string().max(255).required('Country is required'),\n                            state: Yup.string().max(255).required('State is required'),\n                            zipcode: Yup.string().required('ZipCode is required')\n                                .matches(/^[0-9]+$/, \"Must be a number\")\n                                .min(5, \"Must be exactly 5 digits\")\n                                .max(5, \"Must be exactly 5 digits\"),\n                            gender: Yup.string().max(255),\n                            phonenumber: Yup.string().required('Phone Number is required')\n                                .matches(/^[0-9]+$/, \"Must be a number\")\n                                .min(10, \"Must be exactly 10 digits\")\n                                .max(10, \"Must be exactly 10 digits\")\n                        })}\n                        onSubmit={(values) => {\n                            values.isSubmitting = true;\n                            handleSubmit(\n                                values.address1,\n                                values.city,\n                                values.zipcode,\n                                values.phonenumber,\n                                values.state,\n                                values.gender,\n                                values.country\n                            );\n                        }}\n                    >\n                        {({\n                            errors,\n                            handleBlur,\n                            handleChange,\n                            handleSubmit,\n                            isSubmitting,\n                            touched,\n                            values,\n                        }) => (\n                            <form onSubmit={handleSubmit}>\n                                <Box\n                                    sx={{ mb: 3 }}\n                                    display=\"flex\"\n                                    flexDirection=\"column\"\n                                    alignItems=\"center\"\n                                    justifyContent=\"center\"\n                                >\n                                    <Typography color=\"textPrimary\" variant=\"h2\">\n                                        Create new account\n                                    </Typography>\n                                </Box>\n                                <div>\n                                    <FormControlLabel\n                                        label=\"I am a Doctor\"\n                                        control={\n                                            <Checkbox\n                                                checked={checked}\n                                                onChange={() => {\n                                                    setChecked(!checked);\n                                                }}\n                                            />\n                                        }\n                                    />\n                                </div>\n                                <div style={{  display: 'flex', justifyContent: 'flex-start' }}>\n                                    <div style={{\n                                            width:\"250px\"\n                                        }}>\n                                        <TextField\n                                            error={Boolean(touched.gender && errors.gender)}\n                                            helperText={touched.gender && errors.gender}\n                                            label=\"Gender\"\n                                            select\n                                            margin=\"normal\"\n                                            name=\"gender\"\n                                            onBlur={handleBlur}\n                                            onChange={handleChange('gender')}\n                                            value={values.gender}\n                                            variant=\"outlined\"\n                                            fullWidth\n                                        >\n                                            <MenuItem value=\"\">\n                                                <em>None</em>\n                                            </MenuItem>\n                                            {genderOptions.map((state) => (\n                                                <MenuItem key={state.key} value={state.value}>\n                                                    {state.value}\n                                                </MenuItem>\n                                            ))}\n                                        </TextField>\n                                    </div>\n                                </div>\n                                <div style={{ display: 'flex', justifyContent: 'flex-start' }}>\n                                    <TextField\n                                        error={Boolean(touched.phonenumber && errors.phonenumber)}\n                                        helperText={touched.phonenumber && errors.phonenumber}\n                                        label=\"Phone Number\"\n                                        margin=\"normal\"\n                                        name=\"phonenumber\"\n                                        style={{\n                                            width: '250px',\n                                            height: '60px',\n                                        }}\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        value={values.phonenumber}\n                                        variant=\"outlined\"\n                                    />\n                                </div>\n                                <div style={{ display: 'flex', justifyContent: 'flex-start' }}>\n                                    <TextField\n                                        error={Boolean(touched.address1 && errors.address1)}\n                                        helperText={touched.address1 && errors.address1}\n                                        label=\"Address\"\n                                        margin=\"normal\"\n                                        name=\"address1\"\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        value={values.address1}\n                                        variant=\"outlined\"\n                                        fullWidth\n                                    />\n                                </div>\n                                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                                    <TextField\n                                        error={Boolean(touched.city && errors.city)}\n                                        helperText={touched.city && errors.city}\n                                        label=\"City\"\n                                        margin=\"normal\"\n                                        name=\"city\"\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        value={values.city}\n                                        variant=\"outlined\"\n                                        style={{\n                                            width: '250px',\n                                        }}\n                                    />\n                                    <div\n                                        style={{\n                                            width: '250px',\n                                        }}\n                                    >\n                                        <TextField\n                                            error={Boolean(touched.country && errors.country)}\n                                            helperText={touched.country && errors.country}\n                                            label=\"Country\"\n                                            select\n                                            margin=\"normal\"\n                                            name=\"country\"\n                                            onBlur={handleBlur}\n                                            onChange={handleChange('country')}\n                                            value={values.country}\n                                            variant=\"outlined\"\n                                            fullWidth\n                                        >\n                                            <MenuItem value=\"\">\n                                                <em>None</em>\n                                            </MenuItem>\n                                            {countryArray.map((state) => (\n                                                <MenuItem value={state.value}>\n                                                    {state.value}\n                                                </MenuItem>\n                                            ))}\n                                        </TextField>\n                                    </div>\n                                </div>\n                                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                                    <TextField\n                                        error={Boolean(touched.state && errors.state)}\n                                        helperText={touched.state && errors.state}\n                                        label=\"State\"\n                                        margin=\"normal\"\n                                        name=\"state\"\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        value={values.state}\n                                        variant=\"outlined\"\n                                        style={{\n                                            width: '250px',\n                                        }}\n                                    />\n                                    <TextField\n                                        error={Boolean(touched.zipcode && errors.zipcode)}\n                                        helperText={touched.zipcode && errors.zipcode}\n                                        label=\"Zipcode\"\n                                        margin=\"normal\"\n                                        name=\"zipcode\"\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        value={values.zipcode}\n                                        variant=\"outlined\"\n                                        style={{\n                                            width: '250px',\n                                        }}\n                                    />\n                                </div>\n                                <Box sx={{ py: 2, alignItems: 'center', display: 'flex', ml: 5 }}>\n                                    <Button\n                                        color=\"primary\"\n                                        disabled={values.isSubmitting}\n                                        size=\"large\"\n                                        type=\"submit\"\n                                        variant=\"contained\"\n                                        style={{ width: '475px' }}\n                                    >\n                                        Create\n                                    </Button>\n                                </Box>\n                                <Typography\n                                    color=\"textSecondary\"\n                                    variant=\"body1\"\n                                    style={{ marginLeft: '40px' }}\n                                >\n                                    Have an account?{' '}\n                                    <Link\n                                        component={RouterLink}\n                                        to=\"/login\"\n                                        variant=\"h6\"\n                                        underline=\"hover\"\n                                    >\n                                        Sign in\n                                    </Link>\n                                </Typography>\n                            </form>\n                        )}\n                    </Formik>\n                </Container>\n            </Box>\n        </>\n    );\n};\n\nexport default RegisterSecondPage;\n","import * as React from 'react';\nimport { useState, useRef, useEffect } from 'react';\nimport { Link as RouterLink, useHistory, useLocation } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n    Box,\n    Button,\n    Container,\n    Grid,\n    Link,\n    TextField,\n    Typography,\n    Alert,\n    Divider,\n} from '@material-ui/core';\nimport GoogleIcon from '../../icons/Google';\nimport { useAuth } from 'contexts/AuthContext';\nimport useMounted from '../hooks/useMounted';\n\nconst ForgotPassword = () => {\n    const history = useHistory();\n    const location = useLocation();\n    const [errorAlert, setErrorAlert] = useState(false);\n    const [successAlert, setSuccessAlert] = useState(false);\n    const [message, setMessage] = useState('');\n    const { forgotPassword } = useAuth();\n    const mounted = useMounted();\n\n    return (\n        <>\n            <Helmet>\n                <title>WeCare - ForgotPassword</title>\n            </Helmet>\n\n            <Box\n                sx={{\n                    backgroundColor: '#ffffff',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    height: '100%',\n                    justifyContent: 'center',\n                }}\n            >\n                <Container maxWidth=\"sm\" style={{ marginTop: '70px' }}>\n                    {errorAlert ? (\n                        <div style={{ marginTop: '50px', marginBottom: '50px' }}>\n                            <Alert severity=\"error\">{message}</Alert>\n                        </div>\n                    ) : (\n                        <></>\n                    )}\n                    {successAlert ? (\n                        <div style={{ marginTop: '50px', marginBottom: '50px' }}>\n                            <Alert severity=\"success\">{message}</Alert>\n                        </div>\n                    ) : (\n                        <></>\n                    )}\n                    <Formik\n                        initialValues={{\n                            email: '',\n                        }}\n                        validationSchema={Yup.object().shape({\n                            email: Yup.string()\n                                .email('Must be a valid email')\n                                .max(255)\n                                .required('Email is required'),\n                        })}\n                        onSubmit={(values) => {\n                            forgotPassword(values.email)\n                                .then((response) => {\n                                    console.log(response);\n                                    setSuccessAlert(true);\n                                    setErrorAlert(false);\n                                    setMessage('Email has been sent to reset the password');\n                                })\n                                .catch((error) => {\n                                    console.log(error);\n                                    setErrorAlert(true);\n                                    setSuccessAlert(false);\n                                    setMessage(error.message);\n                                });\n                        }}\n                    >\n                        {({\n                            errors,\n                            handleBlur,\n                            handleChange,\n                            handleSubmit,\n                            isSubmitting,\n                            touched,\n                            values,\n                        }) => (\n                            <form onSubmit={handleSubmit}>\n                                <Box\n                                    sx={{ mb: 3 }}\n                                    display=\"flex\"\n                                    flexDirection=\"column\"\n                                    alignItems=\"center\"\n                                    justifyContent=\"center\"\n                                >\n                                    <Typography color=\"textPrimary\" variant=\"h2\">\n                                        Forgot Password\n                                    </Typography>\n                                </Box>\n                                <TextField\n                                    error={Boolean(touched.email && errors.email)}\n                                    fullWidth\n                                    helperText={touched.email && errors.email}\n                                    label=\"Email Address\"\n                                    margin=\"normal\"\n                                    name=\"email\"\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    type=\"email\"\n                                    value={values.email}\n                                    variant=\"outlined\"\n                                />\n                                <Box sx={{ py: 2 }}>\n                                    <Button\n                                        color=\"primary\"\n                                        disabled={isSubmitting}\n                                        fullWidth\n                                        size=\"large\"\n                                        type=\"submit\"\n                                        variant=\"contained\"\n                                    >\n                                        Submit\n                                    </Button>\n                                </Box>\n                                <Divider>\n                                    <Typography\n                                        align=\"center\"\n                                        color=\"textSecondary\"\n                                        variant=\"body2\"\n                                    >\n                                        OR\n                                    </Typography>\n                                </Divider>\n                                <div style={{ marginLeft: '260px', marginTop: '10px' }}>\n                                    <Typography\n                                        color=\"textSecondary\"\n                                        variant=\"body1\"\n                                        alignItems=\"center\"\n                                    >\n                                        <Link\n                                            component={RouterLink}\n                                            to=\"/login\"\n                                            variant=\"h5\"\n                                            underline=\"hover\"\n                                        >\n                                            Login\n                                        </Link>\n                                    </Typography>\n                                </div>\n                            </form>\n                        )}\n                    </Formik>\n                </Container>\n            </Box>\n        </>\n    );\n};\n\nexport default ForgotPassword;\n","import * as React from 'react';\nimport { useState, useRef, useEffect } from 'react';\nimport { Link as RouterLink, useHistory, useLocation } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n    Box,\n    Button,\n    Container,\n    Grid,\n    Link,\n    TextField,\n    Typography,\n    Alert,\n} from '@material-ui/core';\nimport GoogleIcon from '../../icons/Google';\nimport { useAuth } from 'contexts/AuthContext';\nimport useMounted from '../hooks/useMounted';\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\nconst ResetPassword = () => {\n    const history = useHistory();\n    const [errorAlert, setErrorAlert] = useState(false);\n    const [successAlert, setSuccessAlert] = useState(false);\n    const [message, setMessage] = useState('');\n    const { resetPassword } = useAuth();\n    const mounted = useMounted();\n    const query = useQuery();\n    return (\n        <>\n            <Helmet>\n                <title>WeCare - ResetPassword</title>\n            </Helmet>\n\n            <Box\n                sx={{\n                    backgroundColor: '#ffffff',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    height: '100%',\n                    justifyContent: 'center',\n                }}\n            >\n                <Container maxWidth=\"sm\" style={{ marginTop: '70px' }}>\n                    {/* <Paper elevation={0}>\n                    <img src={image} height=\"100\" style={{marginLeft:\"400\"}}/>\n                </Paper> */}\n                    {errorAlert ? (\n                        <div style={{ marginTop: '50px', marginBottom: '50px' }}>\n                            <Alert severity=\"error\">{message}</Alert>\n                        </div>\n                    ) : (\n                        <></>\n                    )}\n                    {successAlert ? (\n                        <div style={{ marginTop: '50px', marginBottom: '50px' }}>\n                            <Alert severity=\"success\">{message}</Alert>\n                        </div>\n                    ) : (\n                        <></>\n                    )}\n                    <Formik\n                        initialValues={{\n                            password: '',\n                        }}\n                        validationSchema={Yup.object().shape({\n                            password: Yup.string().max(255).required('Password is required'),\n                        })}\n                        onSubmit={(values) => {\n                            resetPassword(query.get('oobCode'), values.password)\n                                .then((response) => {\n                                    console.log(response);\n                                    setSuccessAlert(true);\n                                    setErrorAlert(false);\n                                    setMessage('Password Changed Sucessfully');\n                                    history.push('/login', { replace: true });\n                                })\n                                .catch((error) => {\n                                    console.log(error);\n                                    setErrorAlert(true);\n                                    setSuccessAlert(false);\n                                    setMessage(error.message);\n                                });\n                        }}\n                    >\n                        {({\n                            errors,\n                            handleBlur,\n                            handleChange,\n                            handleSubmit,\n                            isSubmitting,\n                            touched,\n                            values,\n                        }) => (\n                            <form onSubmit={handleSubmit}>\n                                <Box\n                                    sx={{ mb: 3 }}\n                                    display=\"flex\"\n                                    flexDirection=\"column\"\n                                    alignItems=\"center\"\n                                    justifyContent=\"center\"\n                                >\n                                    <Typography color=\"textPrimary\" variant=\"h2\">\n                                        Reset Password\n                                    </Typography>\n                                </Box>\n                                <TextField\n                                    error={Boolean(touched.password && errors.password)}\n                                    fullWidth\n                                    helperText={touched.password && errors.password}\n                                    label=\"New Password\"\n                                    margin=\"normal\"\n                                    name=\"password\"\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    type=\"password\"\n                                    value={values.password}\n                                    variant=\"outlined\"\n                                />\n                                <Box sx={{ py: 2 }}>\n                                    <Button\n                                        color=\"primary\"\n                                        disabled={isSubmitting}\n                                        fullWidth\n                                        size=\"large\"\n                                        type=\"submit\"\n                                        variant=\"contained\"\n                                    >\n                                        Reset Password\n                                    </Button>\n                                </Box>\n                            </form>\n                        )}\n                    </Formik>\n                </Container>\n            </Box>\n        </>\n    );\n};\n\nexport default ResetPassword;\n","import * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Container, Typography } from '@material-ui/core';\n\nconst NotFound = () => (\n    <>\n        <Helmet>\n            <title>404 | Material Kit</title>\n        </Helmet>\n        <Box\n            sx={{\n                backgroundColor: 'background.default',\n                display: 'flex',\n                flexDirection: 'column',\n                height: '100%',\n                justifyContent: 'center',\n            }}\n        >\n            <Container maxWidth=\"md\">\n                <Typography align=\"center\" color=\"textPrimary\" variant=\"h1\">\n                    404: The page you are looking for isn’t here\n                </Typography>\n                <Typography align=\"center\" color=\"textPrimary\" variant=\"subtitle2\">\n                    You either tried some shady route or you came here by mistake. Whichever it is,\n                    try using the navigation\n                </Typography>\n                <Box sx={{ textAlign: 'center' }}>\n                    <img\n                        alt=\"Under development\"\n                        src=\"/static/images/undraw_page_not_found_su7k.svg\"\n                        style={{\n                            marginTop: 50,\n                            display: 'inline-block',\n                            maxWidth: '100%',\n                            width: 560,\n                        }}\n                    />\n                </Box>\n            </Container>\n        </Box>\n    </>\n);\n\nexport default NotFound;\n","/*global google*/\nimport React, { Component, useRef, useEffect, useState, FunctionComponent } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport moment from 'moment';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { connect } from 'react-redux';\nimport { Box, Grid,\nContainer,\nTypography,Card,\nCardContent,TextField,Divider,\nInputAdornment,CardActions,\nSvgIcon,Button, CardMedia,Pagination\n} from '@material-ui/core';\nimport {\n    Search as SearchIcon,\n    Navigation as NavigationIcon,\n    Globe as CircleIcon,\n    AlignRight\n} from 'react-feather';\nimport axios from 'axios';\nimport { GoogleMap, useJsApiLoader,Marker ,DirectionsRenderer } from '@react-google-maps/api';\n\n\n\nimport { withRouter,useLocation ,Link} from 'react-router-dom';\n\n\n\n\nconst containerStyle = {\n    width: '570px',\n    height: '770px'\n  };\n  \n  const center = {\n    lat: 37.318400,\n    lng: -121.8381589\n  };\nconst GetHelp : FunctionComponent<any> = ({userProfileReducer,props }) => {\n  const location = useLocation();\n    const UserId = userProfileReducer?.id;\n    \n    //console.log(UserId);\n    const [error, setError] = useState(\"\");\n    const [CityError, setCityError] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [city, setCity] = useState(\"\");\n    const [miles, setMiles] = useState('45');\n    const [currentloc, setCurrentloc] = useState(null);\n    const [directions,setDirections]= useState(null);\n    const [datafilter,setDataFilter]=React.useState(\"all\");\n    const [data, setData] = useState(null);\n    let ignoreStat=false;\n    let origin = {};\n    const [UserCompleteAddress,setUserCompleteAddress]=useState(null);\n\n    ////Pagination code\n    const [page, setPage] = useState(1);\n    const [count, setCount] = useState(0);\n    const [totalitem, setTotalItem] = useState(0);\n    const [pageSize, setPageSize] = useState(4);\n    let pageSizes = [4, 8, 16];\n    const handlePageChange = (event, newPage) => {\n      setPage(newPage);\n    };\n    const handlePageSizeChange = (event) => {\n      setPageSize(event.target.value);\n      setPage(1);\n  };\n    \n  \n    \n    \n    const handleChangeName = (event) => {\n        setName(event.target.value)\n    };\n    const handleChangeCity = (event) => {\n      setCityError(\"\");\n        setCity(event.target.value);\n    };\n    const handleChangeMiles = (event) => {\n        setMiles(event.target.value);\n        \n    };\n    const handlePageLoad= () => {\n      const token = localStorage.getItem('token');\n      // set the with credentials to true\n      axios.defaults.withCredentials = true;\n     axios\n      .get('/api/gethelp', { params: { name: name , miles : miles, city :\"\",datafilter:datafilter,user_location:UserCompleteAddress}}, {\n        headers : {\n            authtoken: token\n        }\n        }) \n      .then(\n          (response) => {\n            ignoreStat = true;\n              setData(response?.data?.resources);\n              setDirections(null);\n              \n              setTotalItem(Object.keys(response?.data?.resources).length);\n              setCount(Math.ceil((Object.keys(response?.data?.resources).length) / pageSize));\n              setPage(1);\n              \n          },\n          (error) => {\n              console.log(error);\n              setError(error);\n          }\n      );\n  };\n    \n    const handleSearch= (event) => {\n        event.preventDefault();\n        setData(null);setTotalItem(0);\n       if(miles!=\"\" && city==\"\"){\n        setCityError(\"Please enter a city to search\");\n         setData(null);\n         setDirections(null);\n                \n          setTotalItem(0);\n                setCount(0);\n                setPage(1);\n       }\n       else{\n        setCityError(\"\");\n        const token = localStorage.getItem('token');\n        // set the with credentials to true\n        axios.defaults.withCredentials = true;\n\n        axios\n        .get('/api/gethelp', { params: { name: name , miles : miles, city :city,datafilter:datafilter,user_location:UserCompleteAddress} }, {\n          headers : {\n              authtoken: token\n          }\n          }) \n        .then(\n            (response) => {\n                setData(response?.data?.resources);\n                setDirections(null);\n                \n                setTotalItem(Object.keys(response?.data?.resources).length);\n                setCount(Math.ceil((Object.keys(response?.data?.resources).length) / pageSize));\n                setPage(1);\n            },\n            (error) => {\n                console.log(error);\n                setError(error);\n            }\n        );\n          }\n    };\n   \n    const { isLoaded } = useJsApiLoader({\n      id: 'google-map-script',\n      googleMapsApiKey: \"AIzaSyCW3O6PQctDxoSoSNYWVa44nXc1ze4V-Nw\"\n    })\n    const getCurrentUserLocation=() =>{      \n      navigator.geolocation.getCurrentPosition(function(position) {\n      //console.log(\"position\",position);\n      console.log(\"Latitude is :\", position.coords.latitude);\n      console.log(\"Longitude is :\", position.coords.longitude);\n      let location={lat: position.coords.latitude, lng: position.coords.longitude}\n      setCurrentloc(location);currentloc=location;\n      console.log(currentloc);\n      var geocoder = new google.maps.Geocoder,\n    latitude = position.coords.latitude, //sub in your latitude\n    longitude =position.coords.longitude, //sub in your longitude\n    city=\"\",\n    state=\"\";\n    geocoder.geocode({'location': {lat:latitude, lng:longitude}}, function(results, status) {\n     if (status === google.maps.GeocoderStatus.OK) {\n          ignoreStat = true;\n    results.forEach(function(element){\n      element.address_components.forEach(function(element2){\n        element2.types.forEach(function(element3){\n          switch(element3){\n            case 'administrative_area_level_1':\n              state = element2.long_name;\n              break;\n            case 'locality':\n              city = element2.long_name;\n              break;\n          }\n        })\n      });\n    });\n    setUserCompleteAddress(results[0].formatted_address);UserCompleteAddress=results[0].formatted_address;\n    setCity(city+\", \"+state);handlePageLoad();\n  }\n});\n\n  \n \n      });\n\n  };\n  \n    const [map, setMap] = React.useState(null);\n  \n    const onLoad = React.useCallback(function callback(map) {\n      const bounds = new window.google.maps.LatLngBounds();\n      map.fitBounds(bounds);\n      setMap(map);\n      if(ignoreStat ==false){\n      getCurrentUserLocation();\n       }\n      \n    }, [])\n  \n    const onUnmount = React.useCallback(function callback(map) {\n      setMap(null)\n    }, [])\n  \n    //function that is calling the directions service\n   const getDirections = (resource) => {\n      const directionsService = new google.maps.DirectionsService();\n     let destination=resource.address;\n  if (origin !== null && destination !== null) {\n      directionsService.route(\n        {\n          origin: currentloc,\n          destination: destination,\n          travelMode: google.maps.TravelMode.DRIVING\n        },\n        (result, status) => {\n          if (status === google.maps.DirectionsStatus.OK) {\n            //changing the state of directions to the result of direction service\n              setDirections(null);\n              setDirections(result);//setShow(true);\n          \n          } else {\n            console.error(`error fetching directions ${result}`);\n          }\n        }\n      );\n  }\n    };\n    \n\n    const handleRadioChange = (event) => {\n      setDataFilter(event.target.value);\n    };  \n\n    \n    return(\n   <>\n        <Helmet>\n            <title>GetHelp | WeCare</title>\n        </Helmet>\n <Box\n            sx={{\n                backgroundColor: 'background.default',\n                minHeight: '100%',\n                py: 3,\n            }}\n        >\n            <Container maxWidth={false}>\n    <Box {...props}>\n       \n        <Box sx={{ mt: 3 }}>\n            <Card>\n                <CardContent>\n                    <Box sx={{ display: 'flex', maxWidth: 1200 }}>\n                        <Box sx={{ maxWidth: 700 }}>\n                       <span>        </span> <RadioGroup row \n\ndefaultValue=\"all\"\nvalue={datafilter}\nonChange={handleRadioChange}\n>\n<FormControlLabel value=\"all\" control={<Radio />} label=\"All\" />\n<FormControlLabel value=\"resources\" control={<Radio />} label=\"Resources\" />\n<FormControlLabel value=\"services\" control={<Radio />} label=\"Services\" />\n                        </RadioGroup><br />\n                            <TextField\n                                style={{ width: 600 }}\n                                InputProps={{\n                                    startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                            <SvgIcon fontSize=\"small\" color=\"action\">\n                                                <SearchIcon />\n                                            </SvgIcon>\n                                        </InputAdornment>\n                                    ),\n                                }}\n                                placeholder=\"Search resource/service\"\n                                value={name}\n                                variant=\"outlined\"\n                                onChange={handleChangeName}\n                            />\n                            <br />\n                            <br />\n                            <TextField\n                                style={{ width: 300 }}\n                                //fullWidth\n                                InputProps={{\n                                    startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                            <SvgIcon fontSize=\"small\" color=\"action\">\n                                                <NavigationIcon />\n                                            </SvgIcon>\n                                        </InputAdornment>\n                                    ),\n                                }}\n                                placeholder=\"Search within City\"\n                                helperText=\"Search within City\"\n                                value={city}\n                                variant=\"outlined\"\n                                \n                                onChange={handleChangeCity}\n                            />\n                            <span> </span>\n                            <TextField\n                                style={{ width: 300 }}\n                                //fullWidth\n                                InputProps={{\n                                    startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                            <SvgIcon fontSize=\"small\" color=\"action\">\n                                                <CircleIcon />\n                                            </SvgIcon>\n                                        </InputAdornment>\n                                    ),\n                                }}\n                                placeholder=\"Search within miles\"\n                                helperText=\"Search within miles\"\n                                value={miles}\n                                variant=\"outlined\"\n                                onChange={handleChangeMiles}\n                            />\n                            \n                            <br />\n                            <br />    \n                            <div style={{ color: 'red' }}>{CityError}</div>     \n                           \n                           \n                            \n \n                        </Box>\n                        <Box sx={{ display: 'flex', width: 200, alignItems: 'center' }}>\n                            <br />\n                            <br />\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <br />\n                            <br />\n                            <br />\n                            <Button\n                                style={{ width: 150, height: 50 }}\n                                color=\"primary\"\n                                variant=\"contained\"\n                                onClick={handleSearch}\n                            >\n                                Search\n                            </Button>\n                        </Box>\n                    </Box>\n                </CardContent>\n            </Card>\n            \n        </Box>\n    </Box>\n    <Grid container spacing={2}>\n    \n    \n    <Grid item xs={6}>\n    <Box sx={{ pt: 3 }}>\n    {data != null && datafilter!=null ?(\n    <Grid container spacing={2}>\n     \n      {(\n        pageSize > 0 \n    ? data.slice((page-1) * pageSize, (page-1) *  pageSize + pageSize)\n    : data).map((resource) => (\n      \n    <Grid item xs={6} key={resource._id}>\n        <Card>\n        {resource.ImageUrl != \"\" ? \n            <CardMedia\n        component=\"img\"\n        height=\"140\"\n        src={resource.ImageUrl}\n        alt={resource.Name} \n      />: <CardMedia\n      component=\"img\"\n      height=\"140\"\n      alt={resource.Name} \n      image=\"/static/images/avatars/resource.png\"\n    />}\n                <CardContent>\n        <Typography  gutterBottom variant=\"h5\" component=\"div\">\n        {resource.Name}\n        </Typography>\n        <Typography  variant=\"body2\" color=\"text.secondary\">\n        {resource.Description}\n        </Typography> \n        <Typography variant=\"body2\" color=\"text.secondary\">\n        {resource.type != \"resource\" ? (\"Available on \" +moment(resource.availableDate).format('MM/DD/YYYY')) :(resource.SKU)+\" item(s) available\"}\n        </Typography>\n        <Typography   variant=\"body2\" color=\"text.secondary\">\n            {resource.distance+\"miles\"}</Typography>\n        <Typography  variant=\"body2\" color=\"text.secondary\">\n        {resource.address}\n        <Button style={{ marginLeft: \"none\",textTransform: 'none' }} onClick={() => getDirections(resource)}>Direction</Button></Typography>\n        \n      </CardContent>\n      <CardActions>\n       \n        <Box style={{ marginLeft: \"auto\" }}>\n        <Button size=\"large\" component={Link} to={`/app/gethelp/:${resource._id}/:${resource.type}/:gethelpitem`}>Reserve</Button></Box>\n      </CardActions>\n      \n                \n                    </Card>\n                    </Grid>))}\n                    </Grid>):null}\n                </Box><div><br></br>{\"Total Items: \"}{totalitem} &nbsp;&nbsp;{\"Items per Page: \"}<select onChange={handlePageSizeChange} value={pageSize}>\n              {pageSizes.map((size) => (\n                <option key={size} value={size}>\n                  {size}\n                </option>\n              ))}</select><br></br><br></br>\n            <Pagination\n              count={count}\n              page={page}\n              variant=\"outlined\"\n              shape=\"rounded\"\n              onChange={handlePageChange}\n            />\n          </div></Grid><Grid item xs={6}>\n                <Box paddingTop={3}>\n                \n               { isLoaded ? (\n\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={currentloc}\n        zoom={13}\n        onLoad={onLoad}\n        onUnmount={onUnmount}\n      >\n          {currentloc !== null && (<Marker  title=\"Your current location\" key=\"marker_1\" position={currentloc} />)}\n          {data != null && directions == null ? (data.map((resource) => (<Marker title={resource.markertitle} key={resource._id} position={resource.location} />))):null}\n        { /* Child components, such as markers, info windows, etc. */ }\n        {directions !== null && (\n                <DirectionsRenderer\n                  directions={directions}\n                  defaultOptions={{\n                    suppressMarkers: false\n                  }}\n                />\n                \n              )}\n        <></>\n      </GoogleMap>\n  ) : <></>}\n              \n          </Box>\n          </Grid>\n                </Grid>\n            </Container>\n        </Box>\n    </>\n);\n\n        };\n\nconst mapStateToProps = ({ userProfileReducer }) => ({\n          userProfileReducer,\n      });\n      \n      const mapDispatchToProps = {};\n      \n      const ConnectedGetHelp = connect(mapStateToProps, mapDispatchToProps)(GetHelp);\n      export default withRouter(ConnectedGetHelp); \n          \n\n","\nimport React, { Component, useRef, useEffect, useState, FunctionComponent } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport { Box, Grid,\nContainer,Card,CardHeader,\nCardContent,TextField,CardActions,Divider,Button, CardMedia, Table,TableBody,\nTableCell,Dialog,DialogActions,DialogContent,DialogContentText,\nTableRow,TableContainer,Paper,Typography\n} from '@material-ui/core';\nimport axios from 'axios';\nimport emailjs from '@emailjs/browser';\nimport{ init } from '@emailjs/browser';\ninit(\"Tf7lGE0yewFvOLxah\");\n\nimport serverUrl from '../../utils/config';\nimport { GoogleMap, useJsApiLoader,Marker ,DirectionsRenderer } from '@react-google-maps/api';\n\n\nimport { withRouter,useLocation ,Link,useHistory,useParams} from 'react-router-dom';\nconst GetHelpItem : FunctionComponent<any>= ({userProfileReducer,props}) => {\n  \nconst param=useParams();\nconst location=useLocation();\n  const user_email=userProfileReducer?.userName;//\"abc@gmail.com\";//change\n  const history = useHistory();\n    const [resource, setResource] = React.useState({});\n    const [currentloc,setCurrentloc]= React.useState({\n      lat: 37.318400,\n      lng: -121.8381589\n    });\n    const [data, setData] = useState(null);\n    const [error, setError] = useState(null);\n    const [errorText,setErrorText]=useState(\"\");\n    const [directions,setDirections]= useState(null);\n    const [open, setOpen] = React.useState(false);\n    const [quantity,setQuantity]=useState(0);\n    const [pagetype, setPageType] = useState(null);\n    let ignoreStat=false;\n    const [UserCompleteAddress,setUserCompleteAddress]=useState(null);\nconst containerStyle = {\n    width: '1125px',\n    height: '450px'\n  };\n  \n  const center = {\n    lat: 37.318400,\n    lng: -121.8381589\n  };\n  //change start\n  const UserId = userProfileReducer?.id;//'6225e61bf81d2541a4000bc9';\n   let id;\n   let item_type;\n  // let pagetype; \nReact.useEffect(() => {\n  id = param?.id?.substring(param?.id?.indexOf(':') + 1);\n  item_type = param?.type?.substring(param?.type?.indexOf(':') + 1)+\"s\";\n  pagetype = param?.pagetype?.substring(param?.pagetype?.indexOf(':') + 1);\n  //console.log(pagetype);\n  setPageType(pagetype);\n    \n       }, []);\n\n       const handlepageload=()=>{\n        const token = localStorage.getItem('token');\n        // set the with credentials to true\n        axios.defaults.withCredentials = true;\n      \n             axios\n              .get('/api/gethelp/search', { params: {item_type:item_type,id:id,user_location:UserCompleteAddress}},  {\n                headers : {\n                    authtoken: token\n                }\n                }) \n              .then(\n                  (response) => {\n                    ignoreStat = true;\n                       if(response?.data?.resources[0].type==\"resource\"){\n                      setQuantity(response?.data?.resources[0].SKU);\n                    }\n                      setData(response?.data?.resources);\n                      //setCity(response.data.user_currentcity);\n                      //setCurrentloc(response?.data?.user_currentaddress);\n                      getDirections(response?.data?.resources[0]);\n                  },\n                  (error) => {\n                      console.log(error);\n                      setError(error);\n                  }\n              );\n       }\n\n       const { isLoaded } = useJsApiLoader({\n        id: 'google-map-script',\n        googleMapsApiKey: \"AIzaSyCW3O6PQctDxoSoSNYWVa44nXc1ze4V-Nw\"\n      })\n    \n      const [map, setMap] = React.useState(null);\n    \n      const onLoad = React.useCallback(function callback(map) {\n        const bounds = new window.google.maps.LatLngBounds();\n        map.fitBounds(bounds);\n        setMap(map);\n        if(ignoreStat ==false){\n          getCurrentUserLocation();\n           }\n      }, [])\n    \n      const onUnmount = React.useCallback(function callback(map) {\n        setMap(null)\n      }, [])\n      const getCurrentUserLocation=() =>{      \n        navigator.geolocation.getCurrentPosition(function(position) {\n        //console.log(\"position\",position);\n        console.log(\"Latitude is :\", position.coords.latitude);\n        console.log(\"Longitude is :\", position.coords.longitude);\n        let location={lat: position.coords.latitude, lng: position.coords.longitude}\n        setCurrentloc(location);currentloc=location;\n        console.log(currentloc);\n        var geocoder = new google.maps.Geocoder,\n      latitude = position.coords.latitude, //sub in your latitude\n      longitude =position.coords.longitude, //sub in your longitude\n      city=\"\",\n      state=\"\";\n      geocoder.geocode({'location': {lat:latitude, lng:longitude}}, function(results, status) {\n       if (status === google.maps.GeocoderStatus.OK) {\n            ignoreStat = true;\n      results.forEach(function(element){\n        element.address_components.forEach(function(element2){\n          element2.types.forEach(function(element3){\n            switch(element3){\n              case 'administrative_area_level_1':\n                state = element2.long_name;\n                break;\n              case 'locality':\n                city = element2.long_name;\n                break;\n            }\n          })\n        });\n      });\n      setUserCompleteAddress(results[0].formatted_address);UserCompleteAddress=results[0].formatted_address;\n      //setCity(city+\", \"+state);\n      handlepageload();\n    }\n  });\n  \n    \n   \n        });\n  \n    };\n      //function that is calling the directions service\n     const getDirections = (resource) => {\n        const directionsService = new google.maps.DirectionsService();\n       let destination=resource.address;\n       //let origin=\"2239 McLaughlin Ave,San Jose,95122\"\n      // console.log(destination);\n      // console.log(currentloc);\n    if (origin !== null && destination !== null) {\n        directionsService.route(\n          {\n            origin: currentloc,\n            destination: destination,\n            travelMode: google.maps.TravelMode.DRIVING\n          },\n          (result, status) => {\n            if (status === google.maps.DirectionsStatus.OK) {\n              //changing the state of directions to the result of direction service\n                setDirections(null);\n                setDirections(result);//setShow(true);\n            \n            } else {\n              console.error(`error fetching directions ${result}`);\n            }\n          }\n        );\n    }\n      };\n          \n        \n          \n          const handleItemQuantityChange=(event)=> {\n            if ((1 < event.target.value) &&  (event.target.value> data[0].SKU)){\n              setErrorText(\"Quantity should be between 1 and \"+data[0].SKU);\n            }\n            else{\n              setErrorText(\"\");\n              setQuantity(event.target.value);\n            }\n           \n         }  \n         \n         \n        ////Email \n\n         let state = { feedback: '', name: 'Name',to_email:\"snehathomasdiv@gmail.com\",subject:'Subject'};\n          const sendEmail = (templateId, variables) => {\n        \n  \n        emailjs.send(\n          'service_wgfnh0b', templateId,\n          variables\n          ).then(res => {\n            console.log('Email successfully sent!')\n          })\n          .catch(err => console.error('Oh well, you failed. Here some thoughts on the error that occured:', err))\n      }\n    \n         const handleConfirm = (event) => {\n           if(errorText===\"\"){\n            let resource=data[0];\n            ///email to victim\n            let resource_email_quantity=resource.type==\"resource\"?quantity:moment(resource.availableDate).format('MM-DD-YYYY');\n            let qua_date=resource.type==\"resource\"?\"Quantity\":\"Available Date\";\n            let email_subject=resource.type==\"resource\"?\"Resource reservation details\":\"Service reservation details\";\n            let to_user_email=userProfileReducer.userName; //change later state.to_email;\n            let url =\"http://localhost:8500\"+\"/app/gethelp/:\"+resource._id+\"/:\"+resource.type+\"/:email\"+resource_email_quantity;console.log(url);\n            //serverUrl+'app/gethelp/:'+resource._id+'/:resource';console.log(url);console.log(location.pathname);\n            const templateId = 'template_v9fkqmy';\n          \n\n    \n        sendEmail(templateId, {resource_name: resource.Name,resource_description:resource.Description,resource_address:resource.address,\n          resource_quantity:resource_email_quantity,qua_date:qua_date,owner_name:resource.owner_name,phone_num:resource.Phone_Number,\n          \n          from_name: state.name,to_name:userProfileReducer.firstName+\" \"+userProfileReducer.lastName//'Katarina Smith'//\n          ,subject:email_subject,to_email:to_user_email,url:url})\n          //email to owner\n          sendEmail('template_znup9ah', {resource_name: resource.Name,resource_description:resource.Description,resource_address:resource.address,\n            resource_quantity:resource_email_quantity,qua_date:qua_date,\n            victim_name:userProfileReducer.firstName+\" \"+userProfileReducer.lastName,\n            victim_phone_num:userProfileReducer.profile.phoneNumber,\n            \n            from_name: state.name,to_name:resource.owner_name//'Katarina Smith'//\n            ,subject:state.subject,to_email:resource.owner_email})\n           if(quantity == null){\n             setQuantity(data[0].SKU);\n           }\n           const token = localStorage.getItem('token');\n      // set the with credentials to true\n      axios.defaults.withCredentials = true;\n           axios\n           .post('/api/gethelp', {resource:data[0],user_id:UserId,quantity:quantity},  {\n            headers : {\n                authtoken: token\n            }\n            }) \n           .then(\n               (response) => {\n                //handleSearch(event);\nsetOpen(true);\n                //history.push('/app/gethelp') ;\n              },\n               (error) => {\n                   console.log(error);\n                   setError(error);\n               }\n           );}\n           else{\n            setErrorText(\"Maximum available Quantity is \"+data[0].SKU+\". Please update Quantity between 1 and \"+data[0].SKU+\" before confirming the reservation.\");\n           }\n         }; \n         const handleClose = (event) => {\n          setOpen(false);\n          history.push('/app/gethelp') ;\n         }\n\n       return (\n        <>\n           \n               <Helmet>\n                   <title>GetHelpItem | WeCare</title>\n               </Helmet>\n               <Box\n                   sx={{\n                       backgroundColor: 'background.default',\n                       minHeight: '100%',\n                       py: 3,\n                   }}\n               >\n  <Container maxWidth={false}>\n    <Box {...props}>\n   <Card><CardHeader sx={{\n                        display: 'flex',\n                        justifyContent: 'flex-start',\n                    }}\n                    titleTypographyProps={{ variant: 'h2' }}\n                    title=\"GetHelp Reservation\" />\n                    <Divider />\n                    <CardContent>\n    <Grid container spacing={2}>\n    {data != null ? data.map((resource) => (\n      \n    <Grid item  key={resource._id}>\n        <Card  sx={{ display: 'flex' }} style={{ border: \"none\", boxShadow: \"none\" }}>\n        {resource.ImageUrl != \"\" ? \n            <CardMedia\n        component=\"img\"\n        height=\"475\"\n        src={resource.ImageUrl}\n        alt={resource.Name} \n        sx={{ width:400 }}\n      />: <CardMedia\n      component=\"img\"\n      height=\"475\"\n      alt={resource.Name} \n      sx={{ width:400 }}\n      image=\"/static/images/avatars/resource.png\"\n    />}\n                <CardContent>\n                <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n        <TableBody>\n            <TableRow\n              key=\"1\"\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n            >\n              <TableCell component=\"th\" scope=\"row\"> <b>Name</b>\n              </TableCell>\n              <TableCell align=\"left\">:{resource.Name}</TableCell>\n            </TableRow>\n            <TableRow\n              key=\"2\"\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n            >\n              <TableCell component=\"th\" scope=\"row\"> {resource.type==\"resource\"?<b>Quantity</b>:<b>Available date</b>}\n              </TableCell>\n              {pagetype?.substring(0,5)!=\"email\"?\n              (resource.type==\"resource\"?<TableCell align=\"left\">:<TextField\n          id=\"standard-number\"\n          type=\"number\"\n          InputLabelProps={{\n            shrink: true,style : {color : 'blue'},\n          }}\n          InputProps={{\n            inputProps: {\n              type: 'number',\n              min: 1\n            },\n          }}\n          variant=\"standard\"\n          defaultValue= {resource.SKU}\n          error={errorText.length === 0 ? false : true }\n          helperText={errorText.length === 0 ? \"Update required quantity\":errorText}\n          sx={{  width: '41ch' }}\n          onChange={handleItemQuantityChange}\n        /></TableCell>: <TableCell>:{moment(resource.availableDate).format('MM/DD/YYYY')}</TableCell>):\n        <TableCell>:{pagetype?.substring(5,pagetype.length)}</TableCell>}\n            </TableRow>\n            \n\n            <TableRow\n              key=\"3\"\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n            >\n              <TableCell component=\"th\" scope=\"row\"> <b>Description</b>\n              </TableCell>\n              <TableCell align=\"left\">:{resource.Description}</TableCell>\n            </TableRow>\n            <TableRow\n              key=\"6\"\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n            >\n              <TableCell component=\"th\" scope=\"row\"> <b>Owner Name</b>\n              </TableCell>\n              <TableCell align=\"left\">:{resource.owner_name}</TableCell>\n            </TableRow>\n            <TableRow\n              key=\"4\"\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n            >\n              <TableCell component=\"th\" scope=\"row\"> <b>Address</b>\n              </TableCell>\n              <TableCell align=\"left\">:{resource.address}</TableCell>\n            </TableRow>\n            \n            <TableRow\n              key=\"5\"\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n            >\n              <TableCell component=\"th\" scope=\"row\"> <b>Distance</b>\n              </TableCell>\n              <TableCell align=\"left\">:{resource.distance} miles</TableCell>\n            </TableRow>\n            \n            <TableRow\n              key=\"7\"\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n            >\n              <TableCell component=\"th\" scope=\"row\"> <b>Phone Number</b>\n              </TableCell>\n              <TableCell align=\"left\">:{resource.Phone_Number}</TableCell>\n            </TableRow>\n            <TableRow\n              key=\"8\"\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n            >\n              <TableCell component=\"th\" scope=\"row\"> <b>Email</b>\n              </TableCell>\n              <TableCell align=\"left\">:{resource.owner_email}</TableCell>\n            </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n                  \n       \n      </CardContent>\n      \n                \n                    </Card>\n                    </Grid> )):null}</Grid>\n                    <Grid>\n                <Box paddingTop={3}>\n                \n               { isLoaded ? (\n\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={currentloc}\n        zoom={13}\n        onLoad={onLoad}\n        onUnmount={onUnmount}\n      >\n\n        { /* Child components, such as markers, info windows, etc. */ }\n        {directions !== null && (\n                <DirectionsRenderer\n                  directions={directions}\n                  defaultOptions={{\n                    suppressMarkers: true\n                  }}\n                />\n                \n              )}\n        <></>\n      </GoogleMap>\n  ) : <></>}\n              \n          </Box>\n          </Grid>\n\n\n\n\n\n</CardContent>\n                \n<CardActions>\n  <Box style={{ marginLeft: \"auto\" }}>\n  <Button component={Link} to={'/app/gethelp'} color=\"primary\" variant=\"contained\" size=\"medium\">Cancel</Button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n  {pagetype?.substring(0,5)!=\"email\"?\n  <Button color=\"primary\" variant=\"contained\" size=\"medium\"  onClick={handleConfirm}>Confirm</Button>:null}\n          </Box></CardActions>\n           </Card>\n                </Box> </Container></Box>\n                <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Reservation details were successfully send to {user_email}.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} autoFocus>\n            CLOSE\n          </Button>\n        </DialogActions>\n      </Dialog>\n         \n   </>\n);\n\n        };\n  // export default withRouter(GetHelpItem);\n\nconst mapStateToProps = ({ userProfileReducer }) => ({\n    userProfileReducer,\n});\n\nconst mapDispatchToProps = {};\n\nconst ConnectedGetHelpItem = connect(mapStateToProps, mapDispatchToProps)(GetHelpItem);\nexport default withRouter(ConnectedGetHelpItem); \n//export default GetHelpItem;\n","import { createTheme } from '@material-ui/core';\n\nconst theme = createTheme({\n    palette: {\n        background: {\n            default: '#f4f6f8',\n            paper: '#ffffff',\n        },\n        primary: {\n            contrastText: '#ffffff',\n            main: '#5664d2',\n        },\n        text: {\n            primary: '#172b4d',\n            secondary: '#6b778c',\n        },\n    },\n    shadows: [\n        'none',\n        '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\n        '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\n        '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n        '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n        '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n        '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n        '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\n        '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\n        '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\n        '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\n        '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\n        '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\n        '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\n        '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\n        '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\n        '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\n        '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\n        '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\n        '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\n        '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\n        '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\n        '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\n        '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\n        '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)',\n    ],\n    typography: {\n        h1: {\n            fontWeight: 500,\n            fontSize: 35,\n            letterSpacing: '-0.24px',\n        },\n        h2: {\n            fontWeight: 500,\n            fontSize: 29,\n            letterSpacing: '-0.24px',\n        },\n        h3: {\n            fontWeight: 500,\n            fontSize: 24,\n            letterSpacing: '-0.06px',\n        },\n        h4: {\n            fontWeight: 500,\n            fontSize: 20,\n            letterSpacing: '-0.06px',\n        },\n        h5: {\n            fontWeight: 500,\n            fontSize: 16,\n            letterSpacing: '-0.05px',\n        },\n        h6: {\n            fontWeight: 500,\n            fontSize: 14,\n            letterSpacing: '-0.05px',\n        },\n        overline: {\n            fontWeight: 500,\n        },\n    },\n});\n\nexport default theme;\n","export default __webpack_public_path__ + \"assets/logo.56dd12f6.png\";","import { fontFamily } from '@material-ui/system';\nimport * as React from 'react';\nimport logo from '../../../static/images/logo.png';\nconst Logo = (props) => <img alt=\"Logo\" src={logo} width=\"60\" height=\"50\" {...props} />;\n\nexport default Logo;\n","import * as React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { AppBar, Toolbar } from '@material-ui/core';\nimport Logo from './Logo';\n\nconst MainNavbar = (props) => (\n    <AppBar elevation={0} {...props}>\n        <Toolbar sx={{ height: 64 }}>\n            <RouterLink to=\"/\">\n                <Logo />\n            </RouterLink>\n        </Toolbar>\n    </AppBar>\n);\n\nexport default MainNavbar;\n","import * as React from 'react';\n//import { Outlet } from 'react-router-dom';\nimport { styled } from '@material-ui/core/styles';\nimport MainNavbar from './MainNavbar';\n\nconst MainLayoutRoot = styled('div')(({ theme }) => ({\n    backgroundColor: theme.palette.background.paper,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%',\n}));\n\nconst MainLayoutWrapper = styled('div')({\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n    paddingTop: 64,\n});\n\nconst MainLayoutContainer = styled('div')({\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n});\n\nconst MainLayoutContent = styled('div')({\n    flex: '1 1 auto',\n    height: '100%',\n    overflow: 'auto',\n});\n\nconst MainLayout = ({ children, ...props }) => (\n    <MainLayoutRoot>\n        <MainNavbar />\n        <MainLayoutWrapper>\n            <MainLayoutContainer>\n                <MainLayoutContent>{children || '<Outlet />'}</MainLayoutContent>\n            </MainLayoutContainer>\n        </MainLayoutWrapper>\n    </MainLayoutRoot>\n);\n\nexport default MainLayout;\n","import * as React from 'react';\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { AppBar, Badge, Box, Hidden, IconButton, Toolbar } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\nimport InputIcon from '@material-ui/icons/Input';\nimport { useAuth } from 'contexts/AuthContext';\nimport { useDispatch } from 'react-redux';\nimport { logoutAction, resetState } from '../store/constants/action-types';\nimport Logo from './Logo';\n\nconst DashboardNavbar = ({ onMobileNavOpen, ...rest }) => {\n    const { logout } = useAuth();\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [notifications] = React.useState([]);\n\n    const signout = () => {\n        logout().then((data) => {\n            // dispatch({ type: logoutAction });\n            localStorage.clear();\n            dispatch({ type: resetState });\n        });\n        history.push('/login');\n    };\n\n    return (\n        <AppBar elevation={0} {...rest}>\n            <Toolbar>\n                <RouterLink to=\"/\">\n                    <Logo />\n                </RouterLink>\n                <Box sx={{ flexGrow: 1 }} />\n                <Hidden mdDown>\n                    <IconButton color=\"inherit\" size=\"large\">\n                        <Badge badgeContent={notifications.length} color=\"primary\" variant=\"dot\">\n                            <NotificationsIcon />\n                        </Badge>\n                    </IconButton>\n                    <IconButton color=\"inherit\" size=\"large\" onClick={signout}>\n                        <InputIcon />\n                    </IconButton>\n                </Hidden>\n                <Hidden mdUp>\n                    <IconButton color=\"inherit\" onClick={onMobileNavOpen} size=\"large\">\n                        <MenuIcon />\n                    </IconButton>\n                </Hidden>\n            </Toolbar>\n        </AppBar>\n    );\n};\n\n// DashboardNavbar.propTypes = {\n//     onMobileNavOpen: PropTypes.func,\n// };\n\nexport default DashboardNavbar;\n","import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { \n    Modal,\n    Box,\n    Button,\n    Card,\n    CardContent,\n    CardHeader,\n    Divider,\n    Grid,\n    TextField,\n    MenuItem,\n    Link,\n    Typography,\n    FormControlLabel,\n    Checkbox\n} from '@material-ui/core';\nimport Alert from '@mui/material/Alert';\nimport { withStyles} from '@material-ui/styles'\nimport { styled } from '@mui/material/styles';\nimport { connect } from 'react-redux';\nimport {  useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport serverUrl from '../utils/config';\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL } from 'firebase/storage';\nimport { createUserProfile, saveUserName } from '../store/constants/action-types';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst BorderLinearProgress = withStyles((theme) => ({\n    root: {\n      height: 15,\n      borderRadius: 5,\n    },\n    colorPrimary: {\n      backgroundColor: \"#EEEEEE\",\n    },\n    bar: {\n      borderRadius: 5,\n      backgroundColor: '#1a90ff',\n    },\n  }))(LinearProgress);\n\n  const Input = styled('input')({\n    display: 'none',\n  });\nfunction getModalStyle() {\n    // const top = 50 + rand();\n    // const left = 50 + rand();\n    return {\n        position: 'absolute' as 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: 600,\n        bgcolor: 'background.paper',\n        border: '1px solid #000',\n        boxShadow: 24,\n        p: 4,\n        // top: `${top}%`,\n        // left: `${left}%`,\n        // transform: `translate(-${top}%, -${left}%)`,\n    };\n}\nexport const RegisterDoctorModal = ({closeModal, open, userProfileReducer, ...props }) => {\n    // const [open, setOpen] = React.useState(false);\n    const [modalStyle] = React.useState(getModalStyle);\n    const [isLoading, setLoading] = useState(true);\n    const[fileErr, setFileErr] = useState(false);\n    const [fileErrMsg, setFileErrMsg] = useState('');\n    const dispatch = useDispatch();\n    var userMetaData = userProfileReducer.userMetaData;\n    const [doctorProfile, setDoctorProfile] = React.useState({\n        firstName: userProfileReducer.firstName,\n        userId: userProfileReducer.id,\n        user: userProfileReducer.userName,\n        licenseUrl: ''\n\n    });\n    var fileName = '';\n    const [fileUrl, setFileUrl] = useState('');\n    const [fileUploadTitle, setFileUploadTitle] = React.useState('Upload License');\n    const [fileLink, setFileLink] = React.useState('');\n    const [specialityOptions, setSpecialityOptions] = React.useState([]);\n    const [progress, setProgress] = useState(0);\n    const [errMessage, setErrMessage] = useState('');\n    // const [fileErrMsg, setFileErrMsg] = useState('');\n    useEffect(() => {\n        // set the with credentials to true\n        axios.defaults.withCredentials = true;\n        // make a post request with the user data\n        axios.get(serverUrl + 'common/speciality').then(\n          (response) => {\n              console.log(\"axios call\")\n            if (response.status === 200) {\n                console.log(\"updated successfully\", response.data[0].name);\n                setSpecialityOptions(response.data[0].name);\n                setLoading(false);\n            }\n          },\n          (error) => {\n              console.log(\"register error\")\n                // this.setState({\n                // errorMessage: error.response.data,\n                // signupFailed: true,\n                // });\n          }\n        );\n      },[1]);\n\n    const saveFile = (event) => {\n        setFileErr(false);\n        setFileErrMsg('');\n        fileName = event.target.files[0].name;\n        const storage = getStorage();\n        const storageRef = ref(storage, `/${doctorProfile.user}/license/${fileName}`);\n\n        const file = event.target.files[0];\n        const uploadTask = uploadBytesResumable(storageRef, file);\n        uploadTask.on('state_changed', (snapshot) => {\n            setProgress((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\n            setFileLink(fileName);\n    }, (error) => {},\n    ()=> {\n            getDownloadURL(storageRef).then((url) => {\n                    setFileUrl(url);\n            })\n            .catch((error) => {\n                switch (error.code) {\n                case 'storage/object-not-found':\n                    setFileUrl('');\n                    break;\n                }\n            });\n    }\n    );\n    }\n\n    const handleSubmit = (values) => {\n        console.log(values);\n        console.log('filename', fileName);\n        if(fileLink == '' && values.isDoctor) {\n            setFileErr(true);\n            setFileErrMsg('Please upload the license');\n            return;\n        } else {\n            setFileErr(false);\n            setFileErrMsg('');\n       \n        userMetaData.isDoctor = values.isDoctor;\n        const payload = {\n            userId: doctorProfile.userId,\n            userMetaData: userMetaData,\n            speciality: values.speciality,\n            license: values.license,\n            qualification: values.qualification,\n            experience: values.experience,\n            description: values.description,\n            licenseUrl: fileUrl.replace,\n            availability: ''\n        };\n        const token = localStorage.getItem('token');\n           // set the with credentials to true\n           axios.defaults.withCredentials = true;\n           // make a post request with the user data\n           axios.post(serverUrl + 'signup/doctor', payload, {\n            headers : {\n                authtoken: token\n            }\n            }).then(\n               (response) => {\n                   console.log(\"axios call\", response);\n               if (response.status === 200) {\n                   console.log(\"updated successfully\");\n                   const user = response?.data?.user || response?.data;\n                    dispatch({\n                        type: saveUserName,\n                        ...user,\n                        });\n                    dispatch({\n                        type: createUserProfile,\n                        id: user._id,\n                        ...user,\n                        payload: response?.data,\n                    });\n                   closeModal();\n               }\n               if(response.status === 401) {\n                    setErrMessage('System Error, contact Administrator!');\n               }\n            },\n               (error) => {\n                   console.log(\"register error\")\n                    setErrMessage('System Error, contact Administrator!');\n               }\n           );\n        }\n     }\n    \n    return (\n        <>\n                <Formik\n                // userProfileReducer?.doctor?.speciality\n                        initialValues={{\n                            isDoctor: userProfileReducer?.userMetaData?.isDoctor,\n                            speciality: '',\n                            license: userProfileReducer?.doctor?.license,\n                            qualification: userProfileReducer?.doctor?.qualification,\n                            experience: userProfileReducer?.doctor?.experience,\n                            description: userProfileReducer?.doctor?.description,\n                            file: null,\n                            isSubmitting: false,\n                        }}\n                        validationSchema={Yup.object().shape({\n                            isDoctor: Yup.boolean(),\n                            speciality: Yup.string().max(255)\n                            .when(\"isDoctor\", {\n                                is: true,\n                                then: Yup.string().required('Speciality is required')}),\n                            license: Yup.string().max(255)\n                            .when(\"isDoctor\", {\n                                is: true,\n                                then: Yup.string().required('License is required')}),\n                            qualification: Yup.string().max(255)\n                            .when(\"isDoctor\", {\n                                is: true,\n                                then: Yup.string().required('Qualification is required')}),\n                            experience: Yup.string().max(255)\n                            .when(\"isDoctor\", {\n                                is: true,\n                                then: Yup.string().required('Experience is required')}),\n                            description: Yup.string().max(255)\n                            .when(\"isDoctor\", {\n                                is: true,\n                                then: Yup.string().required('Description is required')})\n                        })}\n                        onSubmit={(values, errors) => {\n                            console.log('insde submit', errors);\n                            values.isSubmitting = true;\n                            handleSubmit(values);\n                        }}\n                    >\n                        {({\n                            errors,\n                            handleBlur,\n                            handleChange,\n                            handleSubmit,\n                            isSubmitting,\n                            touched,\n                            values,\n                        }) => (\n             <Modal\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n                open={open}\n                onClose={closeModal}\n            >\n                <form autoComplete=\"off\" noValidate {...props} style={modalStyle}>\n            <Card>\n                <CardHeader subheader=\"The information will be edited if already exists\" title=\"Register As a Doctor\" />\n                <Divider />\n                <CardContent>\n                    <div>\n                        <FormControlLabel\n                            label=\"I am a Doctor\"\n                            name=\"isDoctor\"\n                            control={\n                            <Checkbox\n                                checked={values.isDoctor}\n                                onChange={handleChange}\n                            />\n                            }\n                        />\n                    </div>\n                    {!values.isDoctor && <div style={{\n                                            width:\"300px\", height:\"50px\", display: 'flex', justifyContent: 'flex-start'\n                                        }}>\n                        <Alert variant=\"standard\" severity=\"info\">\n                            This will delete your Doctor info!\n                        </Alert>\n                    </div>}\n                    <Grid container spacing={3}>\n                        <Grid item md={6} xs={12}>\n                            <TextField\n                                error={Boolean(touched.speciality && errors.speciality)}\n                                helperText={touched.speciality && errors.speciality}\n                                fullWidth\n                                label=\"Speciality\"\n                                name=\"speciality\"\n                                select\n                                onChange={handleChange}\n                                required\n                                disabled={!values.isDoctor}\n                                value={values.speciality}\n                                variant=\"outlined\"\n                            >\n                              isLoading ? (<div>Loading ...</div>) :\n                                ({specialityOptions.map((speciality) => (\n                                <MenuItem key={speciality} value={speciality}>{speciality}</MenuItem>\n                                ))})          \n                            </TextField>\n                        </Grid>\n                        <Grid item md={6} xs={12}>\n                            <TextField\n                                error={Boolean(touched.license && errors.license)}\n                                helperText={touched.license && errors.license}\n                                fullWidth\n                                label=\"License\"\n                                name=\"license\"\n                                disabled={!values.isDoctor}\n                                onChange={handleChange}\n                                required\n                                value={values.license}\n                                variant=\"outlined\"\n                            />\n                        </Grid>\n                        <Grid item md={6} xs={12}>\n                            <TextField\n                                error={Boolean(touched.qualification && errors.qualification)}\n                                helperText={touched.qualification && errors.qualification}\n                                fullWidth\n                                label=\"Qualification\"\n                                name=\"qualification\"\n                                disabled={!values.isDoctor}\n                                onChange={handleChange}\n                                value={values.qualification}\n                                variant=\"outlined\"\n                                required\n                            />\n                        </Grid>\n                        <Grid item md={6} xs={12}>\n                            <TextField\n                                error={Boolean(touched.experience && errors.experience)}\n                                helperText={touched.experience && errors.experience}\n                                fullWidth\n                                label=\"experience\"\n                                name=\"experience\"\n                                disabled={!values.isDoctor}\n                                onChange={handleChange}\n                                value={values.experience}\n                                variant=\"outlined\"\n                                required\n                            />\n                        </Grid>\n                        <Grid item md={6} xs={12}>\n                            <TextField\n                                error={Boolean(touched.description && errors.description)}\n                                helperText={touched.description && errors.experience}\n                                fullWidth\n                                label=\"Description\"\n                                name=\"description\"\n                                disabled={!values.isDoctor}\n                                onChange={handleChange}\n                                value={values.description}\n                                variant=\"outlined\"\n                                required\n                            />\n                        </Grid>\n                        <Grid item md={6} xs={12}>\n                            {!fileLink &&\n                            <Button\n                                variant=\"outlined\"\n                                component=\"label\"\n                                size=\"small\"\n                                onClick={()=>{setFileErr(false);\n                                    setFileErrMsg('');}}\n                                disabled={!values.isDoctor}\n                                style={{ marginRight: '50px' }}\n                            >\n                                {fileUploadTitle}\n                            <input type=\"file\" hidden onChange={saveFile}  />\n                        </Button>\n                        }\n                        \n                        {fileErr && <div style={{font:\"sans-serif\", color:\"red\"}}> {fileErrMsg}</div>}\n                        {progress>0 && progress<100 && (\n                        <Box className=\"mb25\" display=\"flex\" alignItems=\"center\">\n                            <Box width=\"100%\" mr={1}>\n                            <BorderLinearProgress variant=\"determinate\" value={progress} />\n                            </Box>\n                            <Box minWidth={35}>\n                            <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(progress)}%`}</Typography>\n                            </Box>\n                        </Box>)}\n                        {progress==100 && \n                        <Link href={fileUrl} \n                              variant=\"body2\"\n                              rel=\"noopener noreferrer\"  \n                              target=\"_blank\"\n                        > {fileLink}</Link> }\n                        </Grid>\n                    </Grid>\n                    <Grid>\n                    {errMessage && <Grid item md={12} xs={12}>\n                            <Alert variant=\"standard\" severity=\"error\">\n                                {errMessage}\n                            </Alert>\n                        </Grid>}\n                    </Grid>\n                </CardContent>\n                <Divider />\n                \n                <Box\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        p: 2,\n                    }}\n                >\n                    <Button color=\"primary\" variant=\"contained\" \n                        onClick={handleSubmit}\n                    >\n                            Save details\n                    </Button>\n                </Box>\n            </Card>\n        </form>\n            </Modal>\n                        )}\n                        </Formik>\n        </>\n    );\n};\nconst mapStateToProps = ({ userProfileReducer }) => ({\n    userProfileReducer,\n});\n\nconst mapDispatchToProps = {};\n\nconst ConnectedRegisterDoctorDetails = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(RegisterDoctorModal);\nexport default ConnectedRegisterDoctorDetails;\n","import * as React from 'react';\nimport { NavLink as RouterLink, matchPath, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Button, ListItem } from '@material-ui/core';\n\nconst NavItem = ({ href, icon: Icon, title, ...rest }) => {\n    const location = useLocation();\n\n    const active = href\n        ? !!matchPath(\n              {\n                  path: href,\n                  end: false,\n              },\n              location.pathname\n          )\n        : false;\n\n    return (\n        <ListItem\n            disableGutters\n            sx={{\n                display: 'flex',\n                py: 0,\n            }}\n            {...rest}\n        >\n            <Button\n                component={RouterLink}\n                sx={{\n                    'color': 'text.secondary',\n                    'fontWeight': 'medium',\n                    'justifyContent': 'flex-start',\n                    'letterSpacing': 0,\n                    'py': 1.25,\n                    'textTransform': 'none',\n                    'width': '100%',\n                    ...(active && {\n                        color: 'primary.main',\n                    }),\n                    '& svg': {\n                        mr: 1,\n                    },\n                }}\n                to={href}\n            >\n                {Icon && <Icon size=\"20\" />}\n                <span>{title}</span>\n            </Button>\n        </ListItem>\n    );\n};\n\nNavItem.propTypes = {\n    href: PropTypes.string,\n    icon: PropTypes.elementType,\n    title: PropTypes.string,\n};\n\nexport default NavItem;\n","import * as React from 'react';\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\nimport { useState } from 'react';\nimport { Avatar, Box, Button, Divider, Drawer, Hidden, List, Typography } from '@material-ui/core';\nimport {\n    AlertCircle as AlertCircleIcon,\n    BarChart as BarChartIcon,\n    Lock as LockIcon,\n    Settings as SettingsIcon,\n    ShoppingBag as ShoppingBagIcon,\n    User as UserIcon,\n    UserPlus as UserPlusIcon,\n    Package as PackageIcon,\n    Users as UsersIcon,\n    Gift as GiftIcon,\n    PlusCircle as PlusCircleIcon,\n    CreditCard as CreditCardIcon,\n} from 'react-feather';\nimport { connect } from 'react-redux';\nimport { RegisterDoctorModal} from './RegisterDoctorModal';\n\n// const items = [\n//     {\n//         href: '/app/dashboard',\n//         icon: BarChartIcon,\n//         title: 'Dashboard',\n//     },\n//     {\n//         href: '/app/gethelp',\n//         icon: PackageIcon,\n//         title: 'Get Help',\n//     },\n//     {\n//         href: '/app/givehelp',\n//         icon: ShoppingBagIcon,\n//         title: 'Give Help',\n//     },\n//     {\n//         href: '/app/medicalAssistance',\n//         icon: PlusCircleIcon,\n//         title: 'Medical Assistance',\n//     },\n//     {\n//         href: '/app/account',\n//         icon: UserIcon,\n//         title: 'Account',\n//     },\n//     {\n//         href: '/app/settings',\n//         icon: SettingsIcon,\n//         title: 'Settings',\n//     },\n    /*\n    {\n        href: '/login',\n        icon: LockIcon,\n        title: 'Login',\n    },\n    {\n        href: '/register1',\n        icon: UserPlusIcon,\n        title: 'Register',\n    },\n    {\n        href: '/404',\n        icon: AlertCircleIcon,\n        title: 'Error',\n    },*/\n// ];\nimport NavItem from './NavItem';\n\nconst DashboardSidebar = ({ onMobileClose, openMobile, userProfileReducer }) => {\n    const location = useLocation();\n    const [open, setOpen] = useState(false);\n    const user = {\n        avatar: userProfileReducer?.profile?.profilePic, //'/static/images/avatars/avatar_2.png',\n        jobTitle: userProfileReducer?.address?.city + ', ' + userProfileReducer?.address?.state, //\"San Jose, CA\",//\n        name: userProfileReducer?.firstName + ' ' + userProfileReducer?.lastName, //\"katarina Smith\"//\n    };\n    React.useEffect(() => {\n        if (openMobile && onMobileClose) {\n            onMobileClose();\n        }\n    }, [location.pathname]);\n\n    const registerDoctor = () => {\n        setOpen(true);\n    }\n\n    const closeModal = () => {\n        setOpen(false);\n    }\n\n    const items = [\n        {\n            href: '/app/dashboard',\n            icon: BarChartIcon,\n            title: 'Dashboard',\n            isHidden: !userProfileReducer?.profile?.profileActive,\n        },\n        {\n            href: '/app/gethelp',\n            icon: PackageIcon,\n            title: 'Get Help',\n            isHidden: !userProfileReducer?.profile?.profileActive,\n        },\n        {\n            href: '/app/givehelp',\n            icon: ShoppingBagIcon,\n            title: 'Give Help',\n            isHidden: !userProfileReducer?.profile?.profileActive,\n        },\n        {\n            href: userProfileReducer?.userMetaData?.isDoctor\n                ? '/app/medicalAssistance'\n                : '/app/lookformedicalAssistance',\n            icon: PlusCircleIcon,\n            title: 'Medical Assistance',\n            isHidden: !userProfileReducer?.profile?.profileActive,\n        },\n        {\n            href: '/app/account',\n            icon: UserIcon,\n            title: 'Account',\n        },\n        {\n            href: '/app/mytransactions',\n            icon: CreditCardIcon,\n            title: 'My Transactions',\n            isHidden: !userProfileReducer?.profile?.profileActive,\n        },\n        {\n            href: '/app/settings',\n            icon: SettingsIcon,\n            title: 'Settings',\n        },\n    ];\n    const content = (\n        <Box\n            sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                height: '100%',\n            }}\n        >\n            <Box\n                sx={{\n                    alignItems: 'center',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    p: 2,\n                }}\n            >\n                <Avatar\n                    component={RouterLink}\n                    src={user.avatar}\n                    sx={{\n                        cursor: 'pointer',\n                        width: 64,\n                        height: 64,\n                    }}\n                    to=\"/app/account\"\n                />\n                <Typography color=\"textPrimary\" variant=\"h5\">\n                    {user.name}\n                </Typography>\n                <Typography color=\"textSecondary\" variant=\"body2\">\n                    {user.jobTitle}\n                </Typography>\n            </Box>\n            <Divider />\n            <Box sx={{ p: 2 }}>\n                <List>\n                    {items.map((item) => (\n                        <>\n                            {!item.isHidden && (\n                                <NavItem\n                                    href={item.href}\n                                    key={item.title}\n                                    title={item.title}\n                                    icon={item.icon}\n                                />\n                            )}\n                        </>\n                    ))}\n                </List>\n            </Box>\n            <Box sx={{ flexGrow: 1 }} />\n            <Box\n                sx={{\n                    backgroundColor: 'background.default',\n                    m: 2,\n                    p: 2,\n                }}\n            >\n                <Typography align=\"center\" gutterBottom variant=\"h4\">\n                    Are you a Doctor?\n                </Typography>\n                <Typography align=\"center\" variant=\"body2\">\n                    Help us in assisting non-urgent medical needs\n                </Typography>\n                <Box\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'center',\n                        pt: 2,\n                    }}\n                >\n                    <Button\n                        color=\"primary\"\n                        component=\"a\"\n                        // href=\"/app/registerdoctor\"\n                        variant=\"contained\"\n                        onClick={registerDoctor}\n                    >\n                        Register as Doctor\n                    </Button>\n                </Box>\n            </Box>\n        </Box>\n    );\n\n    return (\n        <>\n        {open && <RegisterDoctorModal closeModal={closeModal} open={open} userProfileReducer={userProfileReducer}/> }\n            <Hidden mdUp>\n                <Drawer\n                    anchor=\"left\"\n                    onClose={onMobileClose}\n                    open={openMobile}\n                    variant=\"temporary\"\n                    PaperProps={{\n                        sx: {\n                            width: 256,\n                        },\n                    }}\n                >\n                    \n                    {content}\n                </Drawer>\n            </Hidden>\n            <Hidden mdDown>\n                <Drawer\n                    anchor=\"left\"\n                    open\n                    variant=\"persistent\"\n                    PaperProps={{\n                        sx: {\n                            width: 256,\n                            top: 64,\n                            height: 'calc(100% - 64px)',\n                        },\n                    }}\n                >\n                    {content}\n                </Drawer>\n            </Hidden>\n        </>\n    );\n};\n\n// DashboardSidebar.propTypes = {\n//     onMobileClose: PropTypes.func,\n//     openMobile: PropTypes.bool,\n// };\n//\n// DashboardSidebar.defaultProps = {\n//     onMobileClose: () => {},\n//     openMobile: false,\n// };\n\n//export default DashboardSidebar;\nconst mapStateToProps = ({ userProfileReducer }) => ({\n    userProfileReducer,\n});\nconst mapDispatchToProps = {};\n\nconst ConnectedDashboardSidebar = connect(mapStateToProps, mapDispatchToProps)(DashboardSidebar);\nexport default ConnectedDashboardSidebar;\n","import * as React from 'react';\nimport { useState } from 'react';\n//import { Outlet } from 'react-router-dom';\nimport { styled } from '@material-ui/core/styles';\nimport DashboardNavbar from './DashboardNavbar';\nimport DashboardSidebar from './DashboardSidebar';\n\nconst DashboardLayoutRoot = styled('div')(({ theme }) => ({\n    backgroundColor: theme.palette.background.default,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%',\n}));\n\nconst DashboardLayoutWrapper = styled('div')(({ theme }) => ({\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n    paddingTop: 64,\n    [theme.breakpoints.up('lg')]: {\n        paddingLeft: 256,\n    },\n}));\n\nconst DashboardLayoutContainer = styled('div')({\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n});\n\nconst DashboardLayoutContent = styled('div')({\n    flex: '1 1 auto',\n    height: '100%',\n    overflow: 'auto',\n});\n\nconst DashboardLayout = ({ children, ...props }) => {\n    const [isMobileNavOpen, setMobileNavOpen] = useState(false);\n\n    return (\n        <DashboardLayoutRoot>\n            <DashboardNavbar onMobileNavOpen={() => setMobileNavOpen(true)} />\n            <DashboardSidebar\n                onMobileClose={() => setMobileNavOpen(false)}\n                openMobile={isMobileNavOpen}\n            />\n            <DashboardLayoutWrapper>\n                <DashboardLayoutContainer>\n                    <DashboardLayoutContent>{children || '<Outlet />'}</DashboardLayoutContent>\n                </DashboardLayoutContainer>\n            </DashboardLayoutWrapper>\n        </DashboardLayoutRoot>\n    );\n};\n\nexport default DashboardLayout;\n","import * as React from 'react';\nimport {\n    Box,\n    Button,\n    Card,\n    CardContent,\n    CardHeader,\n    TextField,\n    Divider,\n    FormControlLabel,\n    FormGroup,\n    Grid,\n} from '@material-ui/core';\nimport { FormHelperText } from '@mui/material';\nimport Checkbox from '@mui/material/Checkbox';\nimport { useState, FunctionComponent, forwardRef } from 'react';\nimport { connect } from 'react-redux';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { getStorage, ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport countries from 'i18n-iso-countries';\nconst { getStates } = require('country-state-picker');\nconst { getCode } =require('country-list');\nimport CountryData from \"./CountryData.json\";\n\nconst metadata = {\n    contentType: 'image/jpeg',\n};\n\nconst AddServiceCard: FunctionComponent<any> = ({ userProfileReducer = {}, ...props }) => {\n    const [check, setCheck] = useState(false);\n    const userId = userProfileReducer._id;\n    // console.log(\"User Id\")\n    // console.log(userProfileReducer._id)\n    const [serviceName, setServiceName] = useState('');\n    const [category, setCategory] = useState('');\n    const [description, setDescription] = useState('');\n    const [phoneNum, setPhoneNum] = useState('');\n    const [dialCode, setDialCode] = useState(\"+1\");\n    const [address, setAddress] = useState('');\n    const [city, setCity] = useState('');\n    const [state, setState] = useState('');\n    const [zipcode, setZipcode] = useState(null);\n    const [country, setCountry] = useState(\"United States of America\");\n    const [countryNames, setCountryNames] = useState(CountryData);\n    const [code,setCode] = useState('us');\n    const [availability, setAvailability] = useState(new Date());\n    const [datePickerIsOpen, togglePicker] = useState(false);\n    const [showErrorMsg, setShowErrorMsg] = React.useState('');\n    const storage = getStorage();\n    const [image, setImage] = useState(null);\n    const [url, setUrl] = useState('');\n    const [fileUploadTitle, setFileUploadTitle] = React.useState('Upload Resource Pic');\n    const [findImage, setFindImage] = React.useState(false);\n    const today=new Date();\n\n    const [serviceNameError, setServiceNameError] = useState(\"\");\n    const [ifServiceError, setIfServiceError] = useState(false);\n    const [availabilityError, setAvailabilityError] = useState(\"\");\n    const [ifAvailabilityError, setIfAvailabilityError] = useState(false);\n    const [categoryError, setCategoryError] = useState(\"\");\n    const [ifCategoryError, setIfCategoryError] = useState(false);\n    const [descriptionError, setDescriptionError] = useState(\"\");\n    const [ifDescriptionError, setIfDescriptionError] = useState(false);\n    const [phoneNumError, setPhoneNumError] = useState(\"\");\n    const [ifPhoneNumError, setIfPhoneNumError] = useState(false);\n    const [addressError, setAddressError] = useState(\"\");\n    const [ifAddressError, setIfAddressError] = useState(false);\n    const [cityError, setCityError] = useState(\"\");\n    const [ifCityError, setIfCityError] = useState(false);\n    const [stateError, setStateError] = useState(\"\");\n    const [zipcodeError, setZipcodeError] = useState(\"\");\n    const [ifZipcodeError, setIfZipcodeError] = useState(false);\n    const [countryError, setCountryError] = useState(\"\");\n\n    let validateForm = () => {\n        if (serviceName === \"\" || serviceName === null) {\n            setServiceNameError(\"Please enter service name\");\n            setIfServiceError(true);\n            return false;\n        } else if(availability.getTime() < today.getTime()) {\n            setAvailabilityError(\"Please select a valid date!\");\n            setIfAvailabilityError(true);\n            return false;\n        } else if (category === \"\" || category === null) {\n            setCategoryError(\"Please enter a category\");\n            setIfCategoryError(true);\n            return false;\n        } else if (description === \"\" || description === null) {\n            setDescriptionError(\"Please enter description of service\");\n            setIfDescriptionError(true);\n            return false;\n        } else if (address === \"\" || address === null) {\n            setAddressError(\"Please enter a valid address\");\n            setIfAddressError(true);\n            return false;\n        }  else if (city === \"\" || city === null) {\n            setCityError(\"Please enter your city of residence\");\n            setIfCityError(true)\n            return false;\n        } else if (state === \"\" || city === null) {\n            setCityError(\"Please enter your state of residence\");\n            setIfCityError(true)\n            return false;\n        } else if (country === \"\" || country === null) {\n            setCountryError(\"Please enter your country of residence\");\n            return false;\n        } else if (zipcode === null || zipcode === \"\") {\n            setZipcodeError(\"Please enter your zipcode\");\n            return false;\n        } else if (zipcode.toString().length != 5) {\n            setZipcodeError(\"Please enter a valid zipcode!\");\n            setIfZipcodeError(true);\n            return false;\n        } else if (phoneNum === \"\" || phoneNum === null) {\n            setPhoneNumError(\"Please enter your contact number\");\n            setIfPhoneNumError(true);\n            return false;\n        } else if (phoneNum.toString().length != 10) {\n            setPhoneNumError(\"Please enter a valid phone number!\");\n            setIfPhoneNumError(true);\n            return false;\n        } else {\n            return true;\n        }\n    };\n\n    countries.registerLocale(require('i18n-iso-countries/langs/en.json'));\n    const countryObj = countries.getNames('en', { select: 'official' });\n    const countryArray = Object.entries(countryObj).map(([key, value]) => {\n        return {\n            label: key,\n            value: value,\n        };\n    });\n\n    const handleImageUpload = (event) => {\n        console.log('Reached upload image task');\n        var file = event.target.files[0];\n        if (file == null || !file) {\n            console.log('No image');\n            setShowErrorMsg('Error: No image available');\n            setFindImage(false);\n        } else {\n            setImage(file);\n            setFindImage(true);\n            console.log(file);\n            const storageRef = ref(\n                storage,\n                `/${userProfileReducer.userName}/services/${file.name}`\n            );\n            uploadBytes(storageRef, file).then((snapshot) => {\n                console.log('Uploaded a blob or file!', snapshot.metadata);\n                setFileUploadTitle(snapshot.metadata.name);\n                setFindImage(true);\n                setShowErrorMsg('Image Uploaded successfully to firebase!');\n                getDownloadURL(storageRef)\n                    .then((url) => {\n                        console.log(url);\n                        setUrl(url);\n                        console.log('url', url);\n                        // setFindImage(true);\n                    })\n                    .catch((error) => {\n                        switch (error.code) {\n                            case 'storage/object-not-found':\n                                setUrl('');\n                                // setFindImage(false);\n                                break;\n                        }\n                    });\n            });\n        }\n    };\n\n    const handleImageChange = (e) => {\n        console.log('Reached image change');\n        if (!findImage) {\n            console.log('Image upload failed!');\n            alert('Image upload failed! Please try again');\n        } else {\n            console.log('Image uploaded successfully');\n            alert('Image uploaded to firebase!');\n        }\n    };\n\n    const handleNameChange = (e) => {\n        setServiceNameError(\"\")\n        setIfServiceError(false)\n        setServiceName(e.target.value);\n    };\n\n    const handleCategoryChange = (e) => {\n        setCategoryError(\"\")\n        setIfCategoryError(false)\n        setCategory(e.target.value);\n    };\n\n    const handleDescriptionChange = (e) => {\n        setDescriptionError(\"\")\n        setIfDescriptionError(false)\n        setDescription(e.target.value);\n    };\n\n    const handlePhoneNumChange = (e) => {\n        setPhoneNumError(\"\")\n        setIfPhoneNumError(false)\n        setPhoneNum(e.target.value);\n    };\n\n    const handleAddressChange = (e) => {\n        setAddressError(\"\")\n        setIfAddressError(false)\n        setAddress(e.target.value);\n    };\n\n    const handleCityChange = (e) => {\n        setCityError(\"\")\n        setIfCityError(false)\n        setCity(e.target.value);\n    };\n\n    const handleStateChange = (e) => {\n        setStateError(\"\")\n        setState(e.target.value);\n    };\n\n    const handleZipcodeChange = (e) => {\n        setZipcodeError(\"\")\n        setIfZipcodeError(false)\n        setZipcode(e.target.value);\n    };\n\n    const handleAvailabilityChange = (date) => {\n        setAvailabilityError(\"\")\n        setIfAvailabilityError(false)\n        setAvailability(date);\n    };\n\n    const handleCountryChange = (e) => {\n        setCountryError(\"\")\n        setCountry(e.target.value);\n        const obj = countryNames.find(({ name }) => name === e.target.value);\n        setCode(getCode(e.target.value))\n        setDialCode(obj.dial_code)\n    };\n\n    const stateObj = getStates(code.toLowerCase())   \n    const stateArray = Object.entries(stateObj).map(([key, value]) => {\n        return {\n            label: value,\n            value: value,\n        };\n    });\n\n    const handleSetCheck = (e) => {\n        setAddressError(\"\");\n        setCityError(\"\");\n        setStateError(\"\");\n        setCountryError(\"\");\n        setZipcodeError(\"\");\n        setPhoneNumError(\"\");\n        setCheck(!check);\n        if (!check) {\n            const { address = {}, profile = {} } = userProfileReducer;\n            const obj = countryNames.find(({ code }) => code === getCode(address.country));\n            setAddress(address.location);\n            setCity(address.city);\n            setCountry(address.country);\n            setZipcode(address.zipCode);\n            setState(address.state);\n            setPhoneNum(profile.phoneNumber);\n            setCode(getCode(address.country))\n            setDialCode(obj.dial_code)\n        } else {\n            setAddress('');\n            setCity('');\n            setCountry('United States of America');\n            setZipcode('');\n            setState('');\n            setPhoneNum('');\n        }\n    };\n    const handleTogglePicker = (e) => {\n        togglePicker(!datePickerIsOpen);\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const isValid = validateForm();\n\n        if (isValid) {\n            const res = await fetch('/api/givehelp/service', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    UserId: userId,\n                    Service_Name: serviceName,\n                    Category: category,\n                    Description: description,\n                    Phone_Number: phoneNum,\n                    Address: address,\n                    availableDate: availability,\n                    City: city,\n                    State: state,\n                    Zipcode: zipcode,\n                    Country: country,\n                    ImageUrl: url,\n                }),\n            });\n\n            const data = await res.json();\n            console.log(data);\n\n            if (res.status === 200) {\n                window.alert('Service added!');\n                console.log('Service added!');\n                window.location.reload();\n            } else if (!findImage){\n                window.alert(\"Please select an image to upload!\");\n                console.log(\"Please select an image to upload!\");\n            } else {\n                window.alert('Failed to upload service data!');\n                console.log('Failed to upload service data!');\n                window.location.reload();\n            }\n        }\n    };\n\n    return (\n        <Box {...props}>\n            <Box\n                sx={{\n                    display: 'flex',\n                    justifyContent: 'flex-start',\n                    width: 500,\n                    height: 700,\n                    p: 1,\n                }}\n            >\n                <form autoComplete=\"off\" noValidate {...props}>\n                    <Card\n                        sx={{\n                            height: 700,\n                            width: 900,\n                            justifyContent: 'center',\n                        }}\n                    >\n                        <CardHeader\n                            sx={{\n                                display: 'flex',\n                                justifyContent: 'flex-start',\n                            }}\n                            titleTypographyProps={{ variant: 'h2' }}\n                            subheader=\"update the resource/service details you would like to provide\"\n                            title=\"Give Help\"\n                        />\n                        <Divider />\n                        <CardContent>\n                            <Grid container rowSpacing={1} columnSpacing={{ xs: 3, sm: 9, md: 3 }}>\n                                <Grid item xs={4}>\n                                    <TextField\n                                        id=\"filled-basic\"\n                                        label=\"Type\"\n                                        variant=\"filled\"\n                                        sx={{ m: 1, width: '30ch' }}\n                                        value=\"Service\"\n                                    />\n                                </Grid>\n                                <Grid item xs={4}>\n                                    {/* <div style={{ color: 'red' }}>{serviceNameError}</div> */}\n                                    <TextField\n                                        required\n                                        error={ifServiceError}\n                                        id=\"outlined-required\"\n                                        label=\"Service Name\"\n                                        defaultValue={serviceName}\n                                        onChange={handleNameChange}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '30ch' }}\n                                        placeholder=\"Car Pool, Accomodation etc\"\n                                        helperText={serviceNameError}\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}  \n\n                                    />\n                                    <FormHelperText style={{color: 'red'}}></FormHelperText>\n                                </Grid>\n                                <Grid item xs={4} alignItems=\"right\">\n                                    {/* <div style={{ color: 'red' }}>{availabilityError}</div> */}\n                                    <Button\n                                        color=\"primary\"\n                                        variant=\"contained\"\n                                        onClick={handleTogglePicker}\n                                        size=\"large\"\n                                    >\n                                        Select Availability\n                                    </Button>\n                                    <DatePicker\n                                        popperProps={{\n                                            positionFixed: true,\n                                        }}\n                                        selected={availability}\n                                        onChange={handleAvailabilityChange}\n                                        // todayButton={\"Today\"}\n                                        open={datePickerIsOpen}\n                                        onClickOutside={handleTogglePicker}\n                                        showOverlay\n                                        confirmBtnText=\"OK\"\n                                        cancelBtnText=\"Cancel\"\n                                    />\n                                    <FormHelperText>*Only dates from future are valid</FormHelperText>\n                                    <FormHelperText style={{color: 'red'}}>{availabilityError}</FormHelperText>\n                                </Grid>\n                            </Grid>\n\n                            <Grid\n                                container\n                                rowSpacing={6}\n                                columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n                                zIndex={3}\n                                justify-content=\"center\"\n                            >\n                                <Grid item xs={3}>\n                                    {/* <div style={{ color: 'red' }}>{categoryError}</div> */}\n                                    <TextField\n                                        required\n                                        error={ifCategoryError}\n                                        id=\"outlined-required\"\n                                        label=\"Category Name\"\n                                        defaultValue={category}\n                                        onChange={handleCategoryChange}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '50ch' }}\n                                        helperText={categoryError}\n                                    />\n                                </Grid>\n                                <Grid item xs={3}></Grid>\n                                <Grid item xs={3}>\n                                    {/* <div style={{ color: 'red' }}>{descriptionError}</div> */}\n                                    <TextField\n                                        required\n                                        error={ifDescriptionError}\n                                        id=\"outlined-required\"\n                                        label=\"Description\"\n                                        defaultValue={description}\n                                        onChange={handleDescriptionChange}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '50ch' }}\n                                        helperText={descriptionError}\n                                    />\n                                </Grid>\n                            </Grid>\n                            <Grid container rowSpacing={4} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n                                <Grid item xs={6}>\n                                    <FormGroup>\n                                        <FormControlLabel\n                                            control={<Checkbox />}\n                                            label=\"Use my profile address\"\n                                            onChange={handleSetCheck}\n                                        />\n                                    </FormGroup>\n                                </Grid>\n                            </Grid>\n                            <Grid\n                                container\n                                rowSpacing={1}\n                                columnSpacing={{ xs: 3, sm: 3, md: 3 }}\n                                zIndex={1}\n                            >\n                                <Grid item xs={6}>\n                                    {/* <div style={{ color: 'red' }}>{addressError}</div> */}\n                                    <TextField\n                                        required\n                                        error={ifAddressError}\n                                        id=\"outlined-required\"\n                                        label=\"Address\"\n                                        value={address}\n                                        onChange={handleAddressChange}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '50ch' }}\n                                        helperText={addressError}\n                                    />\n                                </Grid>\n                                <Grid item xs={6}>\n                                    {/* <div style={{ color: 'red' }}>{cityError}</div> */}\n                                    <TextField\n                                        required\n                                        error={ifCityError}\n                                        id=\"outlined-required\"\n                                        label=\"City\"\n                                        value={city}\n                                        onChange={handleCityChange}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '50ch' }}\n                                        helperText={cityError}\n                                    />\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <TextField\n                                        label=\"Select State\"\n                                        name=\"state\"\n                                        onChange={handleStateChange}\n                                        required\n                                        select\n                                        SelectProps={{ native: true }}\n                                        value={state}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '50ch' }}\n                                        InputLabelProps={{ shrink: true }}\n                                    >\n                                        {stateArray.map((option) => (\n                                            <option key={option.label} value={option.value}>\n                                                {option.value}\n                                            </option>\n                                        ))}\n                                    </TextField>\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <TextField\n                                        label=\"Select Country\"\n                                        name=\"country\"\n                                        onChange={handleCountryChange}\n                                        required\n                                        select\n                                        SelectProps={{ native: true }}\n                                        value={country}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '50ch' }}\n                                        InputLabelProps={{ shrink: true }}\n                                    >\n                                        {countryArray.map((option) => (\n                                            <option key={option.label} value={option.value}>\n                                                {option.value}\n                                            </option>\n                                        ))}\n                                    </TextField>\n                                </Grid>\n                            </Grid>\n                                <Grid container rowSpacing={4} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n                                    <Grid item xs={3}>\n                                        {/* <div style={{ color: 'red' }}>{zipcodeError}</div> */}\n                                        <TextField\n                                            required\n                                            error={ifZipcodeError}\n                                            id=\"outlined-required-input\"\n                                            label=\"Zipcode\"\n                                            value={zipcode}\n                                            onChange={handleZipcodeChange}\n                                            variant=\"outlined\"\n                                            sx={{ m: 1, width: '50ch' }}\n                                            InputLabelProps={{ shrink: zipcode?true:false }}\n                                            helperText={zipcodeError}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={3}></Grid>\n                                    <Grid item xs={1}>\n                                        <TextField\n                                            id=\"outlined-read-only-input\"\n                                            sx={{ m: 1 }}\n                                            value={dialCode}\n                                            style = {{width: 70}}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={3}>\n                                        {/* <div style={{ color: 'red' }}>{phoneNumError}</div> */}\n                                        <TextField\n                                            required\n                                            error={ifPhoneNumError}\n                                            id=\"outlined-required-input\"\n                                            label=\"Phone Number\"\n                                            value={phoneNum}\n                                            onChange={handlePhoneNumChange}\n                                            variant=\"outlined\"\n                                            sx={{ m: 1, width: '41ch' }}\n                                            helperText={phoneNumError}\n                                        />\n                                    </Grid>\n                                </Grid>\n                            <Divider sx={{ pt: 4 }} />\n                            <Grid\n                                container\n                                rowSpacing={1}\n                                columnSpacing={{ xs: 3, sm: 3, md: 3 }}\n                                zIndex={1}\n                                paddingTop={3}\n                            >\n                                <Grid item xs={3}>\n                                    <input type=\"file\" onChange={handleImageUpload} />\n                                </Grid>\n                                <Grid item xs={1}></Grid>\n                                <Grid item xs={3}>\n                                    <Button\n                                            color=\"primary\"\n                                            variant=\"contained\"\n                                            size=\"medium\"\n                                            onClick={handleImageChange}\n                                        >\n                                            Upload Image\n                                        </Button>\n                                </Grid>\n                                <Grid item xs={2}></Grid>\n                                <Grid item xs={3}>\n                                    <Button\n                                        color=\"primary\"\n                                        variant=\"contained\"\n                                        onClick={handleSubmit}\n                                        size=\"medium\"\n                                    >\n                                        Save details\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </CardContent>\n                    </Card>\n                </form>\n            </Box>\n        </Box>\n    );\n};\nconst mapStateToProps = ({ userProfileReducer }) => ({\n    userProfileReducer,\n});\nconst mapDispatchToProps = {};\n\nconst ConnectedAddServiceCard = connect(mapStateToProps, mapDispatchToProps)(AddServiceCard);\n\nexport default ConnectedAddServiceCard;\n","import * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Container, Grid, Pagination } from '@material-ui/core';\nimport AddServiceCard from '../../components/givehelp/AddServiceCard';\n\nconst AddService = () => (\n    <>\n        <Helmet>\n            <title>WeCare</title>\n        </Helmet>\n        <Box\n            sx={{\n                backgroundColor: 'background.default',\n                minHeight: '100%',\n                py: 3,\n            }}\n        >\n            <Container maxWidth=\"lg\">\n                <Box sx={{ pt: 3 }}>\n                    <AddServiceCard />\n                </Box>\n                <Box\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'center',\n                        pt: 3,\n                    }}\n                ></Box>\n            </Container>\n        </Box>\n    </>\n);\n\nexport default AddService;\n","import * as React from 'react';\nimport { Box, Card, CardContent, CardHeader, Divider, Button, Grid } from '@material-ui/core';\nimport Stack from '@mui/material/Stack';\nimport { Link } from 'react-router-dom';\nconst giveHelpLogo = 'https://firebasestorage.googleapis.com/v0/b/cmpe295-wecare.appspot.com/o/givehelp-landing-page-logo.jpeg?alt=media&token=e39dac41-4437-473c-bfaf-7939037ec9ed';\n\n\nconst LandingPageCard = (props) => (\n    <Box {...props}>\n        <Box\n            sx={{\n                width: 900,\n                height: 700,\n                p: 1,\n            }}\n        >\n            <Card\n                sx={{\n                    height: 750,\n                    maxWidth: 900,\n                }}\n            >\n                <CardHeader\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'flex-start',\n                    }}\n                    titleTypographyProps={{ variant: 'h2' }}\n                    subheader=\"select from below type resource/service to enter details\"\n                    title=\"Select type\"\n                />\n                <Divider />\n                <CardContent>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'flex-start',\n                        }}\n                    >\n                        <Link to=\"/app/givehelp/addresource\">\n                            <Button color=\"primary\" variant=\"contained\">\n                                Add a Resource\n                            </Button>\n                        </Link>\n                    </Box>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            justifyContent: 'flex-start',\n                            pt: 6,\n                        }}\n                    >\n                        <Link to=\"/app/givehelp/addservice\">\n                            <Button color=\"primary\" variant=\"contained\">\n                                Add a Service\n                            </Button>\n                        </Link>\n                    </Box>\n                    <Divider sx={{ pt: 3 }}/>\n                    <div>\n                        <img src={giveHelpLogo} \n                        alt=\"GiveHelp logo\"\n                        style= {{\n                            width: 865,\n                            verticalAlign: \"center\"\n                        }}\n                        />\n                    </div>\n                </CardContent>\n            </Card>\n        </Box>\n    </Box>\n);\n\nexport default LandingPageCard;\n","import * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Container, Grid, Pagination } from '@material-ui/core';\nimport LandingPageCard from '../../components/givehelp/LandingPageCard';\n\nconst LandingPage = () => (\n    <>\n        <Helmet>\n            <title>WeCare</title>\n        </Helmet>\n        <Box\n            sx={{\n                backgroundColor: 'background.default',\n                minHeight: '100%',\n                py: 3,\n            }}\n        >\n            <Container maxWidth=\"lg\">\n                <Box sx={{ pt: 3 }}>\n                    <LandingPageCard />\n                </Box>\n                <Box\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'center',\n                        pt: 3,\n                    }}\n                ></Box>\n            </Container>\n        </Box>\n    </>\n);\n\nexport default LandingPage;\n","import * as React from 'react';\nimport {\n    Box,\n    Button,\n    Card,\n    CardContent,\n    CardHeader,\n    TextField,\n    Divider,\n    FormControlLabel,\n    FormGroup,\n    Grid,\n} from '@material-ui/core';\nimport Checkbox from '@mui/material/Checkbox';\nimport { useState, FunctionComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { getStorage, ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport countries from 'i18n-iso-countries';\nconst { getStates } = require('country-state-picker');\nconst { getCode } =require('country-list');\nimport CountryData from \"./CountryData.json\";\n\n\n// const Input = styled('input')({\n//     display: 'none',\n//   });\n\n// const Alert = React.forwardRef(function Alert(props, ref) {\n//     return <MuiAlert elevation={6}  ref={ref} variant=\"filled\" {...props} />;\n//   });\n\nconst metadata = {\n    contentType: 'image/jpeg',\n};\n\nconst AddResourceCard: FunctionComponent<any> = ({ userProfileReducer = {}, ...props }) => {\n    const [check, setCheck] = useState(false);\n    const userId = userProfileReducer._id;\n    const [resourceName, setResourceName] = useState(\"\");\n    const [category, setCategory] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [phoneNum, setPhoneNum] = useState(\"\");\n    const [dialCode, setDialCode] = useState(\"+1\");\n    const [address, setAddress] = useState(\"\");\n    const [sku, setSku] = useState(null);\n    const [city, setCity] = useState(\"\");\n    const [state, setState] = useState(\"\");\n    const [zipcode, setZipcode] = useState(null);\n    const [country, setCountry] = useState(\"United States of America\");\n    const [countryNames, setCountryNames] = useState(CountryData);\n    const [code,setCode] = useState('us');\n    const [showErrorMsg, setShowErrorMsg] = React.useState('');\n    const storage = getStorage();\n    const [image, setImage] = useState(null);\n    const [url, setUrl] = useState('');\n    const [fileUploadTitle, setFileUploadTitle] = React.useState('Upload Resource Pic');\n    const [findImage, setFindImage] = React.useState(false);\n\n    const [resourceNameError, setResourceNameError] = useState(\"\");\n    const [ifResourceError, setIfResourceError] = useState(false);\n    const [categoryError, setCategoryError] = useState(\"\");\n    const [ifCategoryError, setIfCategoryError] = useState(false);\n    const [descriptionError, setDescriptionError] = useState(\"\");\n    const [ifDescriptionError, setIfDescriptionError] = useState(false);\n    const [phoneNumError, setPhoneNumError] = useState(\"\");\n    const [ifPhoneNumError, setIfPhoneNumError] = useState(false);\n    const [addressError, setAddressError] = useState(\"\");\n    const [ifAddressError, setIfAddressError] = useState(false);\n    const [skuError, setSkuError] = useState(\"\");\n    const [ifSkuError, setIfSkuError] = useState(false);\n    const [cityError, setCityError] = useState(\"\");\n    const [ifCityError, setIfCityError] = useState(false);\n    const [stateError, setStateError] = useState(\"\");\n    const [zipcodeError, setZipcodeError] = useState(\"\");\n    const [ifZipcodeError, setIfZipcodeError] = useState(false);\n    const [countryError, setCountryError] = useState(\"\");\n\n    let validateForm = () => {\n        if (resourceName === \"\" || resourceName === null) {\n            setResourceNameError(\"Please enter resource name\");\n            setIfResourceError(true);\n            return false;\n        } else if (category === \"\" || category === null) {\n            setCategoryError(\"Please enter a category\");\n            setIfCategoryError(true);\n            return false;\n        } else if (sku.toString() === \"0\" || sku === null) {\n            setSkuError(\"Please enter valid quantity\");\n            setIfSkuError(true);\n            return false;\n        } else if (sku < 0) {\n            setSkuError(\"Please enter a valid quantity\");\n            setIfSkuError(true);\n            return false;\n        } else if (description === \"\" || description === null) {\n            setDescriptionError(\"Please enter description of resource\");\n            setIfDescriptionError(true);\n            return false;\n        } else if (address === \"\" || address === null) {\n            setAddressError(\"Please enter a valid address\");\n            setIfAddressError(true);\n            return false;\n        }  else if (city === \"\" || city === null) {\n            setCityError(\"Please enter your city of residence\");\n            setIfCityError(true)\n            return false;\n        } else if (state === \"\" || city === null) {\n            setStateError(\"Please enter your state of residence\");\n            return false;\n        } else if (country === \"\" || country === null) {\n            setCountryError(\"Please enter your country of residence\");\n            return false;\n        } else if (zipcode === null || zipcode === \"\") {\n            setZipcodeError(\"Please enter your zipcode\");\n            setIfZipcodeError(true);\n            return false;\n        } else if (zipcode.toString().length != 5) {\n            setZipcodeError(\"Please enter a valid zipcode!\");\n            setIfZipcodeError(true);\n            return false;\n        } else if (phoneNum === \"\" || phoneNum === null) {\n            setPhoneNumError(\"Please enter your contact number\");\n            setIfPhoneNumError(true);\n            return false;\n        } else if (phoneNum.toString().length != 10) {\n            setPhoneNumError(\"Please enter a valid phone number!\");\n            setIfPhoneNumError(true);\n            return false;\n        } else {\n            return true;\n        }\n    };\n\n    countries.registerLocale(require('i18n-iso-countries/langs/en.json'));\n    const countryObj = countries.getNames('en', { select: 'official' });\n    const countryArray = Object.entries(countryObj).map(([key, value]) => {\n        return {\n            label: key,\n            value: value,\n        };\n    });\n\n    \n\n    const handleNameChange = (e) => {\n        setResourceNameError(\"\")\n        setIfResourceError(false);\n        setResourceName(e.target.value)\n    };\n\n\n    const handleImageUpload = (event) => {\n        console.log('Reached upload image task');\n        var file = event.target.files[0];\n        if (file == null || !file) {\n            console.log('No image');\n            setShowErrorMsg('Error: No image available');\n            setFindImage(false)\n        } else {\n            setImage(file);\n            setFindImage(true)\n            console.log(file);\n            const storageRef = ref(\n                storage,\n                `/${userProfileReducer.userName}/resources/${file.name}`\n            );\n            uploadBytes(storageRef, file).then((snapshot) => {\n                console.log('Uploaded a blob or file!', snapshot.metadata);\n                setFileUploadTitle(snapshot.metadata.name);\n                setShowErrorMsg('Image Uploaded successfully to firebase!');\n                getDownloadURL(storageRef)\n                    .then((url) => {\n                        console.log(url);\n                        setUrl(url);\n                        console.log('url', url);\n                    })\n                    .catch((error) => {\n                        switch (error.code) {\n                            case 'storage/object-not-found':\n                                setUrl('');\n                                break;\n                        }\n                    });\n            });\n        }\n    };\n\n    const handleImageChange = (e) => {\n        console.log('Reached image change');\n        if (!findImage) {\n            console.log('Image upload failed!');\n            alert('Image upload failed! Please try again');\n        } else {\n            console.log('Image uploaded successfully');\n            alert('Image uploaded to firebase!');\n        }\n    };\n\n    const handleSetCheck = (e) => {\n        setAddressError(\"\");\n        setCityError(\"\");\n        setStateError(\"\");\n        setCountryError(\"\");\n        setZipcodeError(\"\");\n        setPhoneNumError(\"\");\n        setCheck(!check);\n        if (!check) {\n            const { address = {}, profile = {} } = userProfileReducer;\n            const obj = countryNames.find(({ code }) => code === getCode(address.country));\n            setAddress(address.location);\n            setCity(address.city);\n            setCountry(address.country);\n            setZipcode(address.zipCode);\n            setState(address.state);\n            setCode(getCode(address.country))\n            setDialCode(obj.dial_code)\n            setPhoneNum(profile.phoneNumber);\n        } else {\n            setAddress('');\n            setCity('');\n            setCountry('United States of America');\n            setZipcode('');\n            setState('');\n            setPhoneNum('');\n        }\n    };\n\n    const handleCategoryChange = (e) => {\n        setCategoryError(\"\")\n        setIfCategoryError(false)\n        setCategory(e.target.value)\n    };\n\n    const handleDescriptionChange = (e) => {\n        setDescriptionError(\"\")\n        setIfDescriptionError(false)\n        setDescription(e.target.value)\n    };\n\n    const handlePhoneNumChange = (e) => {\n        setPhoneNumError(\"\")\n        setIfPhoneNumError(false)\n        setPhoneNum(e.target.value)\n    };\n\n    const handleAddressChange = (e) => {\n        setAddressError(\"\")\n        setIfAddressError(false)\n        setAddress(e.target.value)\n    };\n\n    const handleSkuChange = (e) => {\n        setSkuError(\"\")\n        setIfSkuError(false)\n        setSku(e.target.value)\n    };\n\n    const handleCityChange = (e) => {\n        setCityError(\"\")\n        setIfCityError(false);\n        setCity(e.target.value)\n    };\n\n    const handleStateChange = (e) => {\n        setStateError(\"\")\n        setState(e.target.value)\n    };\n\n    const handleZipcodeChange = (e) => {\n        setZipcodeError(\"\")\n        setIfZipcodeError(false)\n        setZipcode(e.target.value)\n    };\n\n    const handleCountryChange = (e) => {\n        setCountryError(\"\")\n        setCountry(e.target.value)\n        const obj = countryNames.find(({ name }) => name === e.target.value);\n        setCode(getCode(e.target.value))\n        setDialCode(obj.dial_code)\n    };\n\n\n    \n    const stateObj = getStates(code.toLowerCase())   \n    const stateArray = Object.entries(stateObj).map(([key, value]) => {\n        return {\n            label: value,\n            value: value,\n        };\n    });\n\n\n    const handleSubmit = async (e) => {\n                e.preventDefault();\n                const isValid = validateForm();\n\n                if (isValid) {\n                    const res = await fetch(\"/api/givehelp/resource\", {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\" : \"application/json\"\n                            \n                        },\n                        body: JSON.stringify({\n                        UserId:userId, Resource_Name:resourceName, Category:category, Description:description, Phone_Number:phoneNum, Address:address, SKU:sku, \n                        City:city, State:state, Zipcode:zipcode, Country:country, ImageUrl:url, \n                        })\n                    })\n            \n                    const data = await res.json();\n                    console.log(data);\n            \n                    if (res.status === 200){\n                        window.alert(\"Resource added!\");\n                        console.log(\"Resource added!\");\n                        window.location.reload();\n                    } else if (!findImage){\n                        window.alert(\"Please select an image to upload!\");\n                        console.log(\"Please select an image to upload!\");\n                    } else {\n                        window.alert(\"Failed to upload resource data! Please try again.\");\n                        console.log(\"Failed to upload resource data! Please try again.\");\n                        window.location.reload();\n                    }\n                }\n                \n            }\n \n    \n\n    return (\n        <Box {...props}>\n            <Box\n                sx={{\n                    display: 'flex',\n                    justifyContent: 'flex-start',\n                    width: 500,\n                    height: 700,\n                    p: 1,\n                }}\n            >\n                <form autoComplete=\"off\" noValidate {...props} method=\"POST\">\n                    <Card\n                        sx={{\n                            height: 750,\n                            width: 900,\n                            justifyContent: 'center',\n                        }}\n                    >\n                        <CardHeader\n                            sx={{\n                                display: 'flex',\n                                justifyContent: 'flex-start',\n                            }}\n                            titleTypographyProps={{ variant: 'h2' }}\n                            subheader=\"update the resource/service details you would like to provide\"\n                            title=\"Give Help\"\n                        />\n                        <Divider />\n                        <CardContent>\n                            <Grid container rowSpacing={1} columnSpacing={{ xs: 3, sm: 9, md: 3 }}>\n                                <Grid item xs={3}>\n                                    <TextField\n                                        id=\"filled-basic\"\n                                        label=\"Type\"\n                                        variant=\"filled\"\n                                        sx={{ m: 1, width: '50ch' }}\n                                        value=\"Resource\"\n                                    />\n                                </Grid>\n                                <Grid item xs={3}>\n                                </Grid>\n                                <Grid item xs={3}>\n                                    {/* <div style={{ color: 'red' }}>{resourceNameError}</div> */}\n                                    <TextField\n                                        required\n                                        error={ifResourceError}\n                                        label=\"Resource Name\"\n                                        defaultValue={resourceName}\n                                        onChange={handleNameChange}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '50ch' }}\n                                        helperText={resourceNameError}\n                                        \n                                    />\n                                </Grid>\n                            </Grid>\n                            <Grid container rowSpacing={1} columnSpacing={{ xs: 3, sm: 9, md: 3 }}>\n                                <Grid item xs={3}>\n                                {/* <div style={{ color: 'red' }}>{categoryError}</div> */}\n                                    <TextField\n                                        required\n                                        error={ifCategoryError}\n                                        id=\"outlined-required\"\n                                        label=\"Category Name\"\n                                        defaultValue={category}\n                                        onChange={handleCategoryChange}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '50ch' }}\n                                        helperText={categoryError}\n                                        \n                                    />\n                                </Grid>\n                                <Grid item xs={3}>\n                                </Grid>\n                                <Grid item xs={3}>\n                                {/* <div style={{ color: 'red' }}>{skuError}</div> */}\n                                    <TextField\n                                        required\n                                        error={ifSkuError}\n                                        id=\"outlined-number\"\n                                        label=\"Quantity\"\n                                        type=\"number\"\n                                        defaultValue={sku}\n                                        onChange={handleSkuChange}\n                                        sx={{ m: 1, width: '50ch' }}\n                                        placeholder=\"Quanity should not be less than or equal to 0.\"\n                                        helperText={skuError}\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}     \n                                    />\n                                </Grid>\n                            </Grid>\n                            <Grid container rowSpacing={1} columnSpacing={{ xs: 3, sm: 9, md: 3 }}>\n                                <Grid item xs={4}>\n                                    {/* <div style={{ color: 'red' }}>{descriptionError}</div> */}\n                                    <TextField\n                                        id=\"outlined-decsription-input\"\n                                        error={ifDescriptionError}\n                                        label=\"Description\"\n                                        value={description}\n                                        onChange={handleDescriptionChange}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '106ch' }}\n                                        helperText={descriptionError}\n                                        \n                                    />\n                                </Grid>\n                            </Grid>\n                            <Grid container rowSpacing={4} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n                                <Grid item xs={6}>\n                                    <FormGroup>\n                                        <FormControlLabel control={<Checkbox/>} label=\"Use my profile address\" onChange={handleSetCheck} />\n                                    </FormGroup>\n                                </Grid>\n                            </Grid>\n                            <Grid container rowSpacing={4} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n                                <Grid item xs={3}>\n                                    {/* <div style={{ color: 'red' }}>{addressError}</div> */}\n                                    <TextField\n                                        required\n                                        error={ifAddressError}\n                                        id=\"outlined-required\"\n                                        label=\"Address\"\n                                        value={address}\n                                        onChange={handleAddressChange}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '50ch' }}\n                                        helperText={addressError}\n                                        \n                                    />\n                                </Grid>\n                                <Grid item xs={3}></Grid>\n                                <Grid item xs={3}>\n                                    {/* <div style={{ color: 'red' }}>{cityError}</div> */}\n                                    <TextField\n                                        required\n                                        error={ifCityError}\n                                        id=\"outlined-required\"\n                                        label=\"City\"\n                                        value={city}\n                                        onChange={handleCityChange}\n                                        variant=\"outlined\"\n                                        helperText={cityError}\n                                        sx={{ m: 1, width: '50ch' }}\n                                        \n                                    />\n                                </Grid>\n                            </Grid>\n                            <Grid container rowSpacing={4} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n                                <Grid item xs={3}>\n                                    <TextField\n                                        label=\"Select State\"\n                                        name=\"state\"\n                                        onChange={handleStateChange}\n                                        required\n                                        select\n                                        SelectProps={{ native: true }}\n                                        value={state}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '50ch' }}\n                                        InputLabelProps={{ shrink: true }} \n                                    >\n                                        {stateArray.map((option) => (\n                                            <option key={option.label} value={option.value}>\n                                                {option.value}\n                                            </option>\n                                        ))}\n\n                                    </TextField>\n                                </Grid>\n                                <Grid item xs={3}></Grid>\n                                <Grid item xs={3}>\n                                    {/* <div style={{ color: 'red' }}>{countryError}</div> */}\n                                    <TextField\n                                        label=\"Select Country\"\n                                        name=\"country\"\n                                        onChange={handleCountryChange}\n                                        required\n                                        select\n                                        SelectProps={{ native: true }}\n                                        value={country}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '400px' }}\n                                        InputLabelProps={{ shrink: true }} \n                                    >\n                                        {countryArray.map((option) => (\n                                            <option key={option.label} value={option.value}>\n                                                {option.value}\n                                            </option>\n                                        ))}\n                                    </TextField>\n                                </Grid>\n                            </Grid>\n                            <Grid container rowSpacing={4} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n                                <Grid item xs={3}>\n                                    {/* <div style={{ color: 'red' }}>{zipcodeError}</div> */}\n                                    <TextField\n                                        required\n                                        error={ifZipcodeError}\n                                        id=\"outlined-required-input\"\n                                        label=\"Zipcode\"\n                                        value={zipcode}\n                                        onChange={handleZipcodeChange}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '400px' }}\n                                        InputLabelProps={{ shrink: zipcode?true:false }}\n                                        helperText={zipcodeError}   \n                                    />\n                                </Grid>\n                                <Grid item xs={3}></Grid>\n                                <Grid item xs={1}>\n                                    <TextField\n                                        id=\"outlined-read-only-input\"\n                                        sx={{ m: 1 }}\n                                        value={dialCode}\n                                        style = {{width: 70}}\n                                    />\n                                </Grid>\n                                <Grid item xs={3}>\n                                    {/* <div style={{ color: 'red' }}>{phoneNumError}</div> */}\n                                    <TextField\n                                        required\n                                        error={ifPhoneNumError}\n                                        id=\"outlined-required-input\"\n                                        label=\"Phone Number\"\n                                        value={phoneNum}\n                                        onChange={handlePhoneNumChange}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '41ch' }}\n                                        helperText={phoneNumError}\n                                    />\n                                </Grid>\n                            </Grid>\n                            <Divider sx={{ pt: 4 }} />\n                            <Grid\n                                container\n                                rowSpacing={4}\n                                columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n                                zIndex={1}\n                                paddingTop={3}\n                            >\n                                <Grid item xs={3}>\n                                    <input type=\"file\" onChange={handleImageUpload} />\n                                    \n                                    {/* {showErrorMsg? (\n                                        <Alert severity=\"error\">This is an error message!</Alert>\n                                    ): ''} */}\n                                    {/* <Modal setOpenModal={showModal} onClose={() => setShowModal(false)} /> */}\n                                </Grid>\n                                <Grid item xs={1}></Grid>\n                                <Grid item xs={3}>\n                                    <Button\n                                            color=\"primary\"\n                                            variant=\"contained\"\n                                            size=\"medium\"\n                                            onClick={handleImageChange}\n                                        >\n                                            Upload Image\n                                        </Button>\n                                </Grid>\n                                \n                                <Grid item xs={2}></Grid>\n                                <Grid item xs={3}>\n                                    <Button\n                                        color=\"primary\"\n                                        variant=\"contained\"\n                                        onClick={handleSubmit}\n                                        size=\"medium\"\n                                    >\n                                        Save details\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </CardContent>\n                    </Card>\n                </form>\n            </Box>\n        </Box>\n    );\n};\nconst mapStateToProps = ({ userProfileReducer }) => ({\n    userProfileReducer,\n});\nconst mapDispatchToProps = {};\n\nconst ConnectedAddResourceCard = connect(mapStateToProps, mapDispatchToProps)(AddResourceCard);\n\nexport default ConnectedAddResourceCard;\n","import * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Container, Grid, Pagination } from '@material-ui/core';\nimport AddResourceCard from '../../components/givehelp/AddResourceCard';\n\nconst AddResource = () => (\n    <>\n        <Helmet>\n            <title>WeCare</title>\n        </Helmet>\n        <Box\n            sx={{\n                backgroundColor: 'background.default',\n                minHeight: '100%',\n                py: 3,\n            }}\n        >\n            <Container maxWidth=\"lg\">\n                <Box sx={{ pt: 3 }}>\n                    <AddResourceCard />\n                </Box>\n                <Box\n                    sx={{\n                        display: 'flex',\n                        justifyContent: 'center',\n                        pt: 3,\n                    }}\n                ></Box>\n            </Container>\n        </Box>\n    </>\n);\n\nexport default AddResource;\n","/*global google*/\nimport React, { Component, useRef, useEffect, useState, FunctionComponent } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { Box, Grid,FormControlLabel,\n    FormGroup,\nContainer,\nTypography,Card,\nCardContent,TextField,Divider,CardHeader,Table,TableBody,TableCell,TableRow,TableHead,\nInputAdornment,CardActions,\nSvgIcon,Button, CardMedia,Pagination,Dialog,DialogActions,DialogTitle,DialogContent,TablePagination \n} from '@material-ui/core';\nimport axios from 'axios';\nimport { withRouter,useLocation ,Link,useHistory} from 'react-router-dom';\nimport { getStorage, ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport countries from 'i18n-iso-countries';\nconst { getStates } = require('country-state-picker');\nconst { getCode } =require('country-list');\nimport CountryData from \"./CountryData.json\";\nconst metadata = {\n    contentType: 'image/jpeg',\n};\nconst ManageTransactionsCard: FunctionComponent<any> = ({userProfileReducer,props}) => {\n    const token = (typeof window !== 'undefined' && window.localStorage.getItem('token')) || null;\n           // set the with credentials to true\n           axios.defaults.withCredentials = true;\n    const history = useHistory();\n    const [givedata,setGiveData]= useState(null);\n    const [getdata,setGetData]= useState(null);\n    const [error,setError]= useState(null);\n    const [service,setService]= useState(null);\n    const UserId=userProfileReducer.id;\n    const [check, setCheck] = useState(false);\n    const userId = userProfileReducer.id;\n    const [resourceName, setResourceName] = useState(\"\");\n    const [category, setCategory] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [phoneNum, setPhoneNum] = useState(\"\");\n    \n    const [dialCode, setDialCode] = useState(\"+1\");\n    const [address, setAddress] = useState(\"\");\n    const [sku, setSku] = useState(0);\n    const [city, setCity] = useState(\"\");\n    const [state, setState] = useState(\"\");\n    const [zipcode, setZipcode] = useState(null);\n    const [country, setCountry] = useState(\"United States of America\");\n    const [countryNames, setCountryNames] = useState(CountryData);\n    const [code,setCode] = useState('us');\n    const [showErrorMsg, setShowErrorMsg] = React.useState('');\n    const storage = getStorage();\n    const [image, setImage] = useState(null);\n    const [url, setUrl] = useState('');\n    const [fileUploadTitle, setFileUploadTitle] = React.useState('Upload Resource Pic');\n    const [findImage, setFindImage] = React.useState(false);\n\n    const [resourceNameError, setResourceNameError] = useState(\"\");\n    const [availabilityError, setAvailabilityError] = useState(\"\");\n    const [categoryError, setCategoryError] = useState(\"\");\n    const [descriptionError, setDescriptionError] = useState(\"\");\n    const [phoneNumError, setPhoneNumError] = useState(\"\");\n    const [addressError, setAddressError] = useState(\"\");\n    const [skuError, setSkuError] = useState(\"\");\n    const [cityError, setCityError] = useState(\"\");\n    const [stateError, setStateError] = useState(\"\");\n    const [zipcodeError, setZipcodeError] = useState(\"\");\n    const [countryError, setCountryError] = useState(\"\");\n    const [serviceName, setServiceName] = useState(\"\");\n    const [availability, setAvailability] = useState(new Date());\n    const [datePickerIsOpen,togglePicker] = useState(false);\n    let validateFormResource = () => {\n        if (resourceName === \"\" || resourceName === null) {\n            setResourceNameError(\"Please enter resource name\");\n            return false;\n        } else if (category === \"\" || category === null) {\n            setCategoryError(\"Please enter a category\");\n            return false;\n        } else if (sku.toString() === \"0\" || sku === null) {\n            setSkuError(\"Please enter valid quantity\");\n            return false;\n        } else if (sku < 0) {\n            setSkuError(\"Please enter a valid quantity\");\n            return false;\n        } else if (description === \"\" || description === null) {\n            setDescriptionError(\"Please enter description of resource\");\n            return false;\n        } else if (address === \"\" || address === null) {\n            setAddressError(\"Please enter a valid address\");\n            return false;\n        }  else if (city === \"\" || city === null) {\n            setCityError(\"Please enter your city of residence\");\n            return false;\n        } else if (state === \"\" || city === null) {\n            setCityError(\"Please enter your state of residence\");\n            return false;\n        } else if (country === \"\" || country === null) {\n            setCountryError(\"Please enter your country of residence\");\n            return false;\n        } else if (zipcode === null || zipcode === \"\") {\n            setZipcodeError(\"Please enter your zipcode\");\n            return false;\n        } else if (zipcode.toString().length != 5) {\n            setZipcodeError(\"Please enter a valid zipcode!\");\n            return false;\n        } else if (phoneNum === \"\" || phoneNum === null) {\n            setPhoneNumError(\"Please enter your contact number\");\n            return false;\n        } else if (phoneNum.toString().length != 10) {\n            setPhoneNumError(\"Please enter a valid phone number!\");\n            return false;\n        } else {\n            return true;\n        }\n    };\n    let validateForm = () => {\n        if (serviceName === \"\" || serviceName === null) {\n            setServiceNameError(\"Please enter service name\");\n            return false;\n        } else if(availability.getTime() < today.getTime()) {\n            setAvailabilityError(\"Please select a valid date!\");\n        } else if (category === \"\" || category === null) {\n            setCategoryError(\"Please enter a category\");\n            return false;\n        } else if (description === \"\" || description === null) {\n            setDescriptionError(\"Please enter description of service\");\n            return false;\n        } else if (address === \"\" || address === null) {\n            setAddressError(\"Please enter a valid address\");\n            return false;\n        }  else if (city === \"\" || city === null) {\n            setCityError(\"Please enter your city of residence\");\n            return false;\n        } else if (state === \"\" || city === null) {\n            setCityError(\"Please enter your state of residence\");\n            return false;\n        } else if (country === \"\" || country === null) {\n            setCountryError(\"Please enter your country of residence\");\n            return false;\n        } else if (zipcode === null || zipcode === \"\") {\n            setZipcodeError(\"Please enter your zipcode\");\n            return false;\n        } else if (zipcode.toString().length != 5) {\n            setZipcodeError(\"Please enter a valid zipcode!\");\n            return false;\n        } else if (phoneNum === \"\" || phoneNum === null) {\n            setPhoneNumError(\"Please enter your contact number\");\n            return false;\n        } else if (phoneNum.toString().length != 10) {\n            setPhoneNumError(\"Please enter a valid phone number!\");\n            return false;\n        } else {\n            return true;\n        }\n    };\n\n   \n\n\n    countries.registerLocale(require('i18n-iso-countries/langs/en.json'));\n    const countryObj = countries.getNames('en', { select: 'official' });\n    const countryArray = Object.entries(countryObj).map(([key, value]) => {\n        return {\n            label: key,\n            value: value,\n        };\n    });\n\n    const handleNameChange = (e) => {\n        console.log(e.target.value);\n        setResourceNameError(\"\");\n        setResourceName(e.target.value);\n    };\n    const handleServiceNameChange = (e) => {\n        console.log(e.target.value);\n        setServiceName(e.target.value);\n    };\n\n    const handleImageUpload = (event) => {\n        console.log('Reached upload image task');\n        var file = event.target.files[0];\n        if (file == null || !file) {\n            console.log('No image');\n            setShowErrorMsg('Error: No image available');\n            setFindImage(false);\n        } else {\n            setImage(file);\n            setFindImage(true);\n            console.log(file);\n            const storageRef = ref(\n                storage,\n                `/${userProfileReducer.userName}/resources/${file.name}`\n            );\n            uploadBytes(storageRef, file).then((snapshot) => {\n                console.log('Uploaded a blob or file!', snapshot.metadata);\n                setFileUploadTitle(snapshot.metadata.name);\n                setFindImage(true);\n                setShowErrorMsg('Image Uploaded successfully to firebase!');\n                getDownloadURL(storageRef)\n                    .then((url) => {\n                        console.log(url);\n                        setUrl(url);\n                        console.log('url', url);\n                    })\n                    .catch((error) => {\n                        switch (error.code) {\n                            case 'storage/object-not-found':\n                                setUrl('');\n                                break;\n                        }\n                    });\n            });\n        }\n    };\n\n    const handleImageChange = (e) => {\n        console.log('Reached image change');\n        if (!findImage) {\n            console.log('Image upload failed!');\n            alert('Image upload failed! Please try again');\n        } else {\n            console.log('Image uploaded successfully');\n            alert('Image uploaded to firebase!');\n        }\n    };\n\n    const handleSetCheck = (e) => {\n        setAddressError(\"\");\n        setCityError(\"\");\n        setStateError(\"\");\n        setCountryError(\"\");\n        setZipcodeError(\"\");\n        setPhoneNumError(\"\");\n        setCheck(!check);\n        if (!check) {\n            const { address = {}, profile = {} } = userProfileReducer;\n            const obj = countryNames.find(({ code }) => code === getCode(address.country));\n            setAddress(address.location);\n            setCity(address.city);\n            setCountry(address.country);\n            setZipcode(address.zipCode);\n            setState(address.state);\n            setCode(getCode(address.country))\n            setDialCode(obj.dial_code)\n            setPhoneNum(profile.phoneNumber);\n        } else {\n            setAddress('');\n            setCity('');\n            setCountry('');\n            setZipcode('');\n            setState('');\n            setPhoneNum('');\n        }\n    };\n            \n      \n\n    const handleCategoryChange = (e) => {\n        setCategoryError(\"\")\n        setCategory(e.target.value)\n    };\n\n    const handleDescriptionChange = (e) => {\n        setDescriptionError(\"\")\n        setDescription(e.target.value)\n    };\n\n    const handlePhoneNumChange = (e) => {\n        setPhoneNumError(\"\")\n        setPhoneNum(e.target.value)\n    };\n\n    const handleAddressChange = (e) => {\n        setAddressError(\"\")\n        setAddress(e.target.value)\n    };\n\n    const handleSkuChange = (e) => {\n        setSkuError(\"\")\n        setSku(e.target.value)\n    };\n\n    const handleCityChange = (e) => {\n        setCityError(\"\")\n        setCity(e.target.value)\n    };\n\n    const handleStateChange = (e) => {\n        setStateError(\"\")\n        setState(e.target.value)\n    };\n\n    const handleZipcodeChange = (e) => {\n        setZipcodeError(\"\")\n        setZipcode(e.target.value)\n    };\n\n    const handleCountryChange = (e) => {\n        setCountryError(\"\")\n        setCountry(e.target.value)\n        const obj = countryNames.find(({ name }) => name === e.target.value);\n        setCode(getCode(e.target.value))\n        setDialCode(obj.dial_code)\n    };\n\n    const stateObj = getStates(code.toLowerCase())   \n    const stateArray = Object.entries(stateObj).map(([key, value]) => {\n        return {\n            label: value,\n            value: value,\n        };\n    });\n    const handleSubmit = async (e) => {\n                e.preventDefault();\n                const token = localStorage.getItem('token');\n                // set the with credentials to true\n                axios.defaults.withCredentials = true;\n            if(service?.type==\"resource\"){\n                const isValid = validateFormResource();\n                console.log(isValid);\n\n               if (isValid) {\n                \n                axios\n                .post('/api/gethelp/update_resource', {id:service?._id,UserId:userProfileReducer.id, Resource_Name:resourceName, Category:category, Description:description, Phone_Number:phoneNum, Address:address, SKU:sku, \n                    City:city, State:state, Zipcode:zipcode, Country:country, ImageUrl:url},{\n                  headers : {\n                      authtoken: token\n                  }}) \n                .then(\n                    (response) => {\n                        \n                       //history.push('/app/mytransactions');\n                       //setOpenresource(false);\n                       \n                       handleTransactionSearch();\n                      // history.push('/app/mytransactions');\n                      //.filter((m) => m.Availability != 'false')\n                    },\n                    (error) => {\n                        alert(\"Failed to upload resource data! Please try again.\");\n                        //console.log(\"Failed to upload resource data! Please try again.\");\n                        console.log(error);\n                        setError(error);\n                    }\n                );\n            \n                  \n                }}\n                else{\n                    axios\n                    .post('/api/gethelp/update_service', {id:service?._id,UserId:userProfileReducer.id, Service_Name:serviceName, Category:category, Description:description, Phone_Number:phoneNum, Address:address, availableDate:availability,\n                        City:city, State:state, Zipcode:zipcode, Country:country, ImageUrl:url},{ headers : {\n                          authtoken: token\n                      }}) \n                    .then(\n                        (response) => {\n                            \n                           //history.push('/app/mytransactions');\n                           //setOpenresource(false);\n                           handleTransactionSearch();\n                           //handleTransactionSearch();\n                           //history.push('/app/mytransactions');\n                          //.filter((m) => m.Availability != 'false')\n                        },\n                        (error) => {\n                            console.log(\"Failed to upload resource data! Please try again.\");\n                            console.log(error);\n                            setError(error);\n                        }\n                    );   \n                }\n            }\n    React.useEffect(() => {\n        \n                 handleTransactionSearch();\n\n                  \n             }, []);\n\n    const [openresource, setOpenresource] = React.useState(false);\n    const [openservice, setOpenservice] = React.useState(false);\n\n   const handleTransactionSearch =()=> {\n    const token = localStorage.getItem('token');\n    // set the with credentials to true\n    axios.defaults.withCredentials = true;\n       axios.get('/api/gethelp/search/userid', { params: {userid:userProfileReducer.id}},{\n     headers : {\n         authtoken: token\n     }}) \n   .then(\n       (response) => {\n         console.log(response?.data?.resources);\n         setGiveData(response?.data?.resources.filter((m) => m.Availability != 'false'));\n         setGetData(response?.data?.getresources);\n         setOpenresource(false);\n         setOpenservice(false);\n\n         //.filter((m) => m.Availability != 'false')\n       },\n       (error) => {\n           console.log(error);\n           setError(error);\n       }\n   );\n    }\n    const handleEdit= (service) => {\n        \nsetService(service);\nif(service?.type==\"resource\"){\n    setOpenresource(true);\n    setSku(service?.SKU);\n    \nsetResourceName(service?.Name);\n}\nelse\n{\n    setOpenservice(true);\n    setServiceName(service?.Name);\n    setAvailability(new Date(new Date(service?.availableDate).toISOString()));\n}\n\n           \nsetAddress(service?.Address);\nsetCity(service?.City);\nsetCountry(service?.Country);\nsetZipcode(service?.Zipcode);\nsetState(service?.State);\nsetPhoneNum(service?.Phone_Number);\n\n\nsetCategory(service?.Category);\nsetDescription(service?.Description);\nsetUrl(service?.ImageUrl);\n    }\n\n\n    \n    const handleImageUploadService = (event) => {\n        console.log(\"Reached upload image task\");\n        var file = event.target.files[0];\n        if(file==null || !file){\n            console.log(\"No image\")\n            setShowErrorMsg(\"Error: No image available\");\n        } else \n            {\n                setImage(file)\n                console.log(file)\n                const storageRef = ref(storage, `/${userProfileReducer.userName}/services/${file.name}`);\n                uploadBytes(storageRef, file).then((snapshot) => {\n                    console.log('Uploaded a blob or file!', snapshot.metadata);\n                    setFileUploadTitle(snapshot.metadata.name);\n                    setFindImage(true);\n                    setShowErrorMsg(\"Image Uploaded successfully to firebase!\")\n                    getDownloadURL(storageRef)\n                    .then((url) => {\n                        console.log(url);\n                        setUrl(url);\n                        console.log('url', url);\n                        setFindImage(true);\n                    })\n                    .catch((error) => {\n                        switch (error.code) {\n                        case 'storage/object-not-found':\n                            setUrl(\"\");\n                            setFindImage(false);\n                            break;\n                        }\n                    });\n                });\n            }\n    }\n\n    \n\n    \n    const handleAvailabilityChange = (date) => {\n        setAvailability(date);\n    };\n\n    const handleTogglePicker = (e) => {\n        togglePicker(!datePickerIsOpen)\n    }\n\n    \n    const handleCancel= () => {\n        setOpenresource(false);\n        setOpenservice(false);\n        //history.push('/app/mytransactions');\n\n    }\n    const handleDelete= (service) => {\n        console.log(service._id);\n        const token = localStorage.getItem('token');\n                // set the with credentials to true\n                axios.defaults.withCredentials = true;\n        axios\n        .post('/api/gethelp/delete/id', {id:service._id,type:service.type}) \n        .then(\n            (response) => {\n              console.log(response);\n              //window.location.reload();\n              handleTransactionSearch();\n            },\n            (error) => {\n                console.log(error);\n                setError(error);\n            }\n        );\n    }\n//Pagination gethelp\nconst [page, setPage] = React.useState(0);\n\nconst [rowsPerPage, setRowsPerPage] = React.useState(5);\n\nconst [pageGive, setPageGive] = React.useState(0);\nconst [rowsPerPageGive, setRowsPerPageGive] = React.useState(5);\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n      };\n    \n      const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n      };\n//pagination Givehelp data\n      const handleChangePageGive = (event, newPage) => {\n        setPageGive(newPage);\n      };\n    \n      const handleChangeRowsPerPageGive = (event) => {\n        setRowsPerPageGive(parseInt(event.target.value, 10));\n        setPageGive(0);\n      };\n    \n      \n    \n      // Avoid a layout jump when reaching the last page with empty rows.\n      const emptyRows =\n        page > 0 ? Math.max(0, (1 + page) * 5 - getdata?.length) : 0;\n\n\nreturn (\n    <Grid container spacing={2}>\n<Grid item>\n                        <Card {...props}>\n                            <CardHeader title=\"GiveHelp Transactions\" titleTypographyProps={{variant:'h4' }}/>\n                            <Divider />\n                                <Box sx={{ minWidth: 800 }}>\n                                   \n                                {givedata != null ? ( <Table>\n                                        <TableHead>\n                                            <TableRow>\n                                                <TableCell>Name</TableCell>\n                                                <TableCell>Type</TableCell>\n                                                <TableCell>Description</TableCell>\n                                                <TableCell>Available Quantity</TableCell>\n                                                <TableCell>AvailableDate</TableCell>\n                                                {/*<TableCell sortDirection=\"desc\">\n                                <Tooltip enterDelay={300} title=\"Sort\">\n                                    <TableSortLabel active direction=\"desc\">\n                                        Available Date\n                                    </TableSortLabel>\n                                </Tooltip>\n                    </TableCell>*/}           <TableCell>Address</TableCell>\n                    <TableCell>Phone Number</TableCell>\n                    <TableCell>Edit</TableCell>\n                                                <TableCell>Delete</TableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                            <TableBody>\n                                                {givedata?.slice(pageGive * rowsPerPageGive, pageGive * rowsPerPageGive + rowsPerPageGive).map((service) => (\n                                                    <TableRow hover key={service._id}>\n                                                        <TableCell align='center'>\n                                                            {service?.ImageUrl===''?<img src=\"/static/images/avatars/resource.png\" height=\"75\"/>:\n                                                        <img src={service.ImageUrl} height=\"75\"/>}\n                                                        <br />{service.Name}</TableCell>\n                                                        <TableCell>{service.type}</TableCell>\n                                                        <TableCell>{service.Description}</TableCell>\n                                                       <TableCell>{service.SKU}</TableCell>\n                                                        <TableCell>{service.type==='resource'?service.availableDate:moment(service.availableDate).format(\n                                                                'MM/DD/YYYY' )}</TableCell>\n                                                        <TableCell>{service.Address+\", \"+service.City+\", \"+service.State+\", \"+service.Country+\", \"+service.Zipcode}</TableCell>\n                                                        <TableCell>{service.Phone_Number}</TableCell>\n                                                        <TableCell><Button component={Link} to=\"/app/mytransactions\" onClick={() => handleEdit(service)}>Edit</Button></TableCell>\n                                                        <TableCell><Button component={Link} to=\"/app/mytransactions\" onClick={() => handleDelete(service)}>Delete</Button></TableCell>\n                                                    </TableRow>\n                                                ))}\n                                            </TableBody>\n                                       \n                                    </Table> ) : <Typography>You do not have any GiveHelp Transactions.</Typography>}\n                                    <TablePagination\n                                    rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={givedata?.length}\n          rowsPerPage={rowsPerPageGive}\n          page={pageGive}\n          onPageChange={handleChangePageGive}\n          \n          onRowsPerPageChange={handleChangeRowsPerPageGive}\n        />\n                                </Box> </Card>\n                    </Grid>\n                    <Grid item>\n                    <Card {...props}>\n                            <CardHeader title=\"GetHelp Transactions\" titleTypographyProps={{variant:'h4' }}/>\n                            <Divider />\n                                <Box sx={{ minWidth: 800 }}>\n                                {getdata != null ? (\n                                    <Table>\n                                        <TableHead>\n                                            <TableRow>\n                                                <TableCell>Name</TableCell>\n                                                <TableCell>Type</TableCell>\n                                                <TableCell>Description</TableCell>\n                                                <TableCell>Quantity</TableCell>\n                                                <TableCell>AvailableDate</TableCell>           \n                                                <TableCell>Address</TableCell>\n                                                <TableCell>PhoneNumber</TableCell>\n                                                <TableCell>TransactionDate</TableCell>\n                    \n                                            </TableRow>\n                                        </TableHead>\n                                        \n                                            <TableBody>\n                                                {getdata?.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((service) => (\n                                                    <TableRow hover key={service._id}>\n                                                        <TableCell align='center'>\n                                                            {service.ImageUrl===''?<img src=\"/static/images/avatars/resource.png\" height=\"75\"/>:\n                                                        <img src={service.ImageUrl} height=\"75\"/>}\n                                                        <br />\n                                                            {service.Name}\n                                                        </TableCell>\n                                                        <TableCell>{service.type}</TableCell>\n                                                        <TableCell>{service.Description}</TableCell>\n                                                        <TableCell>{service.SKU}</TableCell>\n                                                        <TableCell>\n                                                        {service.type==='resource'?service.availableDate:moment(service.availableDate).format(\n                                                                'MM/DD/YYYY'\n                                                                )}\n                                                        </TableCell>\n                                                        <TableCell>{service.address}</TableCell>\n                                                        <TableCell>{service.Phone_Number}</TableCell>\n                                                        <TableCell>{moment(service.Date).format(\n                                                                'MM/DD/YYYY'\n                                                                )}</TableCell>\n                                                    </TableRow>\n                                                ))}\n                                            </TableBody>\n                                       \n                                    </Table> ) : <Typography>You do not have any GetHelp Transactions.</Typography>}\n                                    <TablePagination\n                                    rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={getdata?.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          \n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n                                    \n                                </Box>\n                           \n                        </Card>\n                </Grid><Dialog open={openresource} fullWidth maxWidth=\"xl\"  style={{display:'flex',alignItems:'center',justifyContent:'center'}}>\n                 <DialogContent>\n                 <form autoComplete=\"off\" noValidate {...props} method=\"POST\">\n                    <Card\n                        sx={{\n                            height: 750,\n                            width: 900,\n                            justifyContent: 'center',\n                        }}\n                    >\n                        <CardHeader\n                            sx={{\n                                display: 'flex',\n                                justifyContent: 'flex-start',\n                            }}\n                            title=\"Edit Give Help Transaction\"\n                        />\n                        <Divider />\n                        <CardContent>\n                        <Grid container rowSpacing={1} columnSpacing={{ xs: 3, sm: 9, md: 3 }}>\n                            <Grid container rowSpacing={1} columnSpacing={{ xs: 3, sm: 9, md: 3 }}  style={{display:'flex',alignItems:'center',justifyContent:'center'}}>\n                            <Grid item xs={3} style={{display:'flex',alignSelf:'center'}}>\n                            {url===''?<img src=\"/static/images/avatars/resource.png\" width=\"200\" height=\"150\"/>:\n                                                        <img src={url} width=\"200\" height=\"150\"/>}\n                             </Grid>\n                             \n                             <Grid item xs={6}>\n                             <Grid container direction=\"row\" rowSpacing={3}>\n                                <Grid item xs={6}>\n                                    <input type=\"file\" onChange={handleImageUpload} />\n                                    \n                        \n                                </Grid>\n                                \n                                <Grid item xs={6}>\n                                    <Button\n                                            color=\"primary\"\n                                            variant=\"contained\"\n                                            size=\"medium\"\n                                            onClick={handleImageChange}\n                                        >\n                                            Update Image\n                                        </Button>\n                                </Grid>\n                                </Grid>\n                                </Grid>\n                                <Grid item xs={3}>\n                                </Grid>\n                                </Grid>\n                                <Grid container rowSpacing={1} columnSpacing={{ xs: 3, sm: 9, md: 3 }}>\n                                <Grid item xs={3}>\n                                    <TextField\n                                        id=\"filled-basic\"\n                                        label=\"Type\"\n                                        variant=\"filled\"\n                                        sx={{ m: 1, width: '50ch' }}\n                                        value=\"Resource\"\n                                    />\n                                </Grid>\n                                <Grid item xs={3}>\n                                </Grid>\n                                <Grid item xs={3}>\n                                    <div style={{ color: 'red' }}>{resourceNameError}</div>\n                                    <TextField\n                                        required\n                                        label=\"Resource Name\"\n                                        defaultValue={service?.Name}\n                                        onChange={handleNameChange}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '50ch' }}\n                                        helperText=\"Mask, Oxygen Cylinder, Sanitizer etc.\"\n                                        \n                                    />\n                                </Grid>\n                            </Grid>\n                            <Grid container rowSpacing={1} columnSpacing={{ xs: 3, sm: 9, md: 3 }}>\n                                <Grid item xs={3}>\n                                <div style={{ color: 'red' }}>{categoryError}</div>\n                                    <TextField\n                                        required\n                                        id=\"outlined-required\"\n                                        label=\"Category Name\"\n                                        defaultValue={service?.Category}\n                                        onChange={handleCategoryChange}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '50ch' }}\n                                        \n                                    />\n                                </Grid>\n                                <Grid item xs={3}>\n                                </Grid>\n                                <Grid item xs={3}>\n                                <div style={{ color: 'red' }}>{skuError}</div>\n                                    <TextField\n                                        required\n                                        id=\"outlined-number\"\n                                        label=\"Quantity\"\n                                        type=\"number\"\n                                        defaultValue={service?.SKU}\n                                        onChange={handleSkuChange}\n                                        sx={{ m: 1, width: '50ch' }}\n                                        helperText=\"Quanity should be greater than 0\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    />\n                                </Grid>\n                            </Grid>\n                            <Grid container rowSpacing={1} columnSpacing={{ xs: 3, sm: 9, md: 3 }}>\n                                <Grid item xs={4}>\n                                    <div style={{ color: 'red' }}>{descriptionError}</div>\n                                    <TextField\n                                        id=\"outlined-decsription-input\"\n                                        label=\"Description\"\n                                        defaultValue={service?.Description}\n                                        onChange={handleDescriptionChange}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '106ch' }}\n                                        \n                                    />\n                                </Grid>\n                            </Grid>\n            \n                            <Grid container rowSpacing={4} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n                                <Grid item xs={3}>\n                                    <div style={{ color: 'red' }}>{addressError}</div>\n                                    <TextField\n                                        required\n                                        id=\"outlined-required\"\n                                        label=\"Address\"\n                                        defaultValue={service?.Address}\n                                        onChange={handleAddressChange}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '50ch' }}\n                                        \n                                    />\n                                </Grid>\n                                <Grid item xs={3}></Grid>\n                                <Grid item xs={3}>\n                                    <div style={{ color: 'red' }}>{cityError}</div>\n                                    <TextField\n                                        required\n                                        id=\"outlined-required\"\n                                        label=\"City\"\n                                        defaultValue={service?.City}\n                                        onChange={handleCityChange}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '50ch' }}\n                                        \n                                    />\n                                </Grid>\n                            </Grid>\n                            <Grid container rowSpacing={4} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n                                <Grid item xs={3}>\n                                    <div style={{ color: 'red' }}>{stateError}</div>\n                                    <TextField\n                                        label=\"Select State\"\n                                        name=\"state\"\n                                        onChange={handleStateChange}\n                                        required\n                                        select\n                                        SelectProps={{ native: true }}\n                                        defaultValue={service?.State}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '50ch' }}\n                                    >\n                                        {stateArray.map((option) => (\n                                            <option key={option.label} value={option.value}>\n                                                {option.value}\n                                            </option>\n                                        ))}\n\n                                    </TextField>\n                                   {/* <TextField\n                                        required\n                                        id=\"outlined-required\"\n                                        label=\"State\"\n                                        defaultValue={service?.State}\n                                        onChange={handleStateChange}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '50ch' }}\n                                        \n                                    />*/}\n                                </Grid>\n                                <Grid item xs={3}></Grid>\n                                <Grid item xs={3}>\n                                    <div style={{ color: 'red' }}>{countryError}</div>\n                                    <TextField\n                                        label=\"Select Country\"\n                                        name=\"country\"\n                                        onChange={handleCountryChange}\n                                        required\n                                        select\n                                        SelectProps={{ native: true }}\n                                        defaultValue={service?.Country}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '50ch' }}\n                                    >\n                                        {countryArray.map((option) => (\n                                            <option key={option.label} value={option.value}>\n                                                {option.value}\n                                            </option>\n                                        ))}\n                                    </TextField> \n                                    {/*<TextField\n                                        required\n                                        id=\"outlined-required-input\"\n                                        label=\"Country\"\n                                        defaultValue={service?.Country}\n                                        onChange={handleCountryChange}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '50ch' }}\n                                        \n                                        />*/}\n                                </Grid>\n                            </Grid>\n                            <Grid container rowSpacing={4} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n                                <Grid item xs={3}>\n                                    <div style={{ color: 'red' }}>{zipcodeError}</div>\n                                    <TextField\n                                        required\n                                        id=\"outlined-required-input\"\n                                        label=\"Zipcode\"\n                                        defaultValue={service?.Zipcode}\n                                        onChange={handleZipcodeChange}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '50ch' }}\n                                    />\n                                </Grid>\n                                <Grid item xs={3}></Grid>\n                                <Grid item xs={1}>\n                                    <TextField\n                                        id=\"outlined-read-only-input\"\n                                        sx={{ m: 1 }}\n                                        value={dialCode}\n                                        style = {{width: 70}}\n                                        // InputProps={{\n                                        //     readOnly: true,\n                                        // }}\n                                    />\n                                </Grid>\n                                <Grid item xs={3}>\n                                    <div style={{ color: 'red' }}>{phoneNumError}</div>\n                                    <TextField\n                                        required\n                                        id=\"outlined-required-input\"\n                                        label=\"Phone Number\"\n                                        defaultValue={service?.Phone_Number}\n                                        onChange={handlePhoneNumChange}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '50ch' }}\n                                    />\n                                </Grid>\n                            </Grid>\n                            <Grid\n                                container\n                                rowSpacing={4}\n                                columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n                                zIndex={1}\n                                paddingTop={3} style={{display:'flex',alignItems:'right',justifyContent:'right'}}\n                            >\n                                <Grid item xs={3}>\n                                <Button component={Link} to=\"/app/mytransactions\" onClick={handleCancel} color=\"primary\"\n                                size=\"medium\"\n                                        variant=\"contained\"> Cancel</Button>\n                                        &nbsp;&nbsp;&nbsp;\n                                    <Button component={Link} to=\"/app/mytransactions\" \n                                        color=\"primary\"\n                                        variant=\"contained\"\n                                        onClick={handleSubmit}\n                                        size=\"medium\"\n                                    >\n                                        Update\n                                    </Button>\n                                </Grid>\n                        \n                            </Grid>\n                            </Grid>\n                        </CardContent>\n                    </Card>\n                    </form>\n                 </DialogContent>\n               </Dialog>\n               <Dialog open={openservice} fullWidth maxWidth=\"xl\"  style={{display:'flex',alignItems:'center',justifyContent:'center'}}>\n                 <DialogContent>\n                 <form autoComplete=\"off\" noValidate {...props} method=\"POST\">\n                    <Card\n                        sx={{\n                            height: 750,\n                            width: 900,\n                            justifyContent: 'center',\n                        }}\n                    >\n                        <CardHeader\n                            sx={{\n                                display: 'flex',\n                                justifyContent: 'flex-start',\n                            }}\n                            title=\"Edit Give Help Transaction\"\n                        />\n                        <Divider />\n                        <CardContent>\n                        <Grid container rowSpacing={1} columnSpacing={{ xs: 3, sm: 9, md: 3 }}>\n                            <Grid container rowSpacing={1} columnSpacing={{ xs: 3, sm: 9, md: 3 }}  style={{display:'flex',alignItems:'center',justifyContent:'center'}}>\n                            <Grid item xs={3} style={{display:'flex',alignSelf:'center'}}>\n                            {url===''?<img src=\"/static/images/avatars/resource.png\" width=\"200\" height=\"150\"/>:\n                                                        <img src={url} width=\"200\" height=\"150\"/>}\n                             </Grid>\n                             \n                             <Grid item xs={6}>\n                             <Grid container direction=\"row\" rowSpacing={3}>\n                                <Grid item xs={6}>\n                                    <input type=\"file\" onChange={handleImageUploadService} />\n                                    \n                        \n                                </Grid>\n                                \n                                <Grid item xs={6}>\n                                    <Button\n                                            color=\"primary\"\n                                            variant=\"contained\"\n                                            size=\"medium\"\n                                            onClick={handleImageChange}\n                                        >\n                                            Update Image\n                                        </Button>\n                                </Grid>\n                                </Grid>\n                                </Grid>\n                                <Grid item xs={3}>\n                                </Grid>\n                                </Grid>\n                                <Grid container rowSpacing={1} columnSpacing={{ xs: 3, sm: 9, md: 3 }}>\n                                <Grid item xs={3}>\n                                    <TextField\n                                        id=\"filled-basic\"\n                                        label=\"Type\"\n                                        variant=\"filled\"\n                                        sx={{ m: 1, width: '50ch' }}\n                                        value=\"Service\"\n                                    />\n                                </Grid>\n                                <Grid item xs={3}>\n                                </Grid>\n                                <Grid item xs={3}>\n                                    <TextField\n                                        required\n                                        id=\"outlined-required\"\n                                        label=\"Service Name\"\n                                        defaultValue={service?.Name}\n                                        onChange={handleServiceNameChange}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '50ch' }}\n                                        helperText=\"Car pool, Accomodation etc. \"\n                                    />\n                                </Grid> \n                               \n                            </Grid>\n                               \n                            <Grid container rowSpacing={1} columnSpacing={{ xs: 3, sm: 9, md: 3 }}>\n                                <Grid item xs={3}>\n                                <div style={{ color: 'red' }}>{categoryError}</div>\n                                    <TextField\n                                        required\n                                        id=\"outlined-required\"\n                                        label=\"Category Name\"\n                                        defaultValue={service?.Category}\n                                        onChange={handleCategoryChange}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '50ch' }}\n                                        \n                                    />\n                                </Grid>\n                                <Grid item xs={3}>\n                                </Grid>\n                                <Grid item xs={4} alignItems=\"right\">\n                                    <Button color=\"primary\" variant=\"contained\" onClick={handleTogglePicker} size=\"small\">\n                                        Select Availability\n                                    </Button>\n                                    <DatePicker\n                                        popperProps={{\n                                            positionFixed: true \n                                          }}\n                                        selected={availability}\n                                        onChange={handleAvailabilityChange}\n                                        // todayButton={\"Today\"}\n                                        open={datePickerIsOpen}\n                                        onClickOutside={handleTogglePicker}\n                                        showOverlay\n                                        confirmBtnText=\"OK\"\n                                        cancelBtnText=\"Cancel\"\n                                    /> \n                                </Grid>\n                            </Grid>\n                            <Grid container rowSpacing={1} columnSpacing={{ xs: 3, sm: 9, md: 3 }}>\n                                <Grid item xs={4}>\n                                    <div style={{ color: 'red' }}>{descriptionError}</div>\n                                    <TextField\n                                        id=\"outlined-decsription-input\"\n                                        label=\"Description\"\n                                        defaultValue={service?.Description}\n                                        onChange={handleDescriptionChange}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '106ch' }}\n                                        \n                                    />\n                                </Grid>\n                            </Grid>\n            \n                            <Grid container rowSpacing={4} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n                                <Grid item xs={3}>\n                                    <div style={{ color: 'red' }}>{addressError}</div>\n                                    <TextField\n                                        required\n                                        id=\"outlined-required\"\n                                        label=\"Address\"\n                                        defaultValue={service?.Address}\n                                        onChange={handleAddressChange}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '50ch' }}\n                                        \n                                    />\n                                </Grid>\n                                <Grid item xs={3}></Grid>\n                                <Grid item xs={3}>\n                                    <div style={{ color: 'red' }}>{cityError}</div>\n                                    <TextField\n                                        required\n                                        id=\"outlined-required\"\n                                        label=\"City\"\n                                        defaultValue={service?.City}\n                                        onChange={handleCityChange}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '50ch' }}\n                                        \n                                    />\n                                </Grid>\n                            </Grid>\n                            <Grid container rowSpacing={4} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n                                <Grid item xs={3}>\n                                    <div style={{ color: 'red' }}>{stateError}</div>\n                                    <TextField\n                                        label=\"State\"\n                                        name=\"state\"\n                                        onChange={handleStateChange}\n                                        required\n                                        select\n                                        SelectProps={{ native: true }}\n                                        defaultValue={service?.State}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '50ch' }}\n                                    >\n                                        {stateArray.map((option) => (\n                                            <option key={option.label} value={option.value}>\n                                                {option.value}\n                                            </option>\n                                        ))}\n\n                                    </TextField>\n                                    {/*<TextField\n                                        required\n                                        id=\"outlined-required\"\n                                        label=\"State\"\n                                        defaultValue={service?.State}\n                                        onChange={handleStateChange}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '50ch' }}\n                                        \n                                        />*/}\n                                </Grid>\n                                <Grid item xs={3}></Grid>\n                                <Grid item xs={3}>\n                                    <div style={{ color: 'red' }}>{countryError}</div>\n                                    <TextField\n                                        label=\"Country\"\n                                        name=\"country\"\n                                        onChange={handleCountryChange}\n                                        required\n                                        select\n                                        SelectProps={{ native: true }}\n                                        defaultValue={service?.Country}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '50ch' }}\n                                    >\n                                        {countryArray.map((option) => (\n                                            <option key={option.label} value={option.value}>\n                                                {option.value}\n                                            </option>\n                                        ))}\n                                    </TextField>\n                                   {/* <TextField\n                                        required\n                                        id=\"outlined-required-input\"\n                                        label=\"Country\"\n                                        defaultValue={service?.Country}\n                                        onChange={handleCountryChange}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '50ch' }}\n                                        \n                                        />*/}\n                                </Grid>\n                            </Grid>\n                            <Grid container rowSpacing={4} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n                                <Grid item xs={3}>\n                                    <div style={{ color: 'red' }}>{zipcodeError}</div>\n                                    <TextField\n                                        required\n                                        id=\"outlined-required-input\"\n                                        label=\"Zipcode\"\n                                        defaultValue={service?.Zipcode}\n                                        onChange={handleZipcodeChange}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '50ch' }}\n                                    />\n                                </Grid>\n                                <Grid item xs={3}></Grid>\n                                <Grid item xs={1}>\n                                    <TextField\n                                        id=\"outlined-read-only-input\"\n                                        sx={{ m: 1 }}\n                                        value={dialCode}\n                                        style = {{width: 70}}\n                                        // InputProps={{\n                                        //     readOnly: true,\n                                        // }}\n                                    />\n                                </Grid>\n                                <Grid item xs={3}>\n                                    <div style={{ color: 'red' }}>{phoneNumError}</div>\n                                    <TextField\n                                        required\n                                        id=\"outlined-required-input\"\n                                        label=\"Phone Number\"\n                                        defaultValue={service?.Phone_Number}\n                                        onChange={handlePhoneNumChange}\n                                        variant=\"outlined\"\n                                        sx={{ m: 1, width: '50ch' }}\n                                    />\n                                </Grid>\n                            </Grid>\n                            <Grid\n                                container\n                                rowSpacing={4}\n                                columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n                                zIndex={1}\n                                paddingTop={3} style={{display:'flex',alignItems:'right',justifyContent:'right'}}\n                            >\n                                <Grid item xs={3}>\n                                <Button component={Link} to=\"/app/mytransactions\" onClick={handleCancel} color=\"primary\"\n                                size=\"medium\"\n                                        variant=\"contained\"> Cancel</Button>\n                                        &nbsp;&nbsp;&nbsp;\n                                    <Button component={Link} to=\"/app/mytransactions\" \n                                        color=\"primary\"\n                                        variant=\"contained\"\n                                        onClick={handleSubmit}\n                                        size=\"medium\"\n                                    >\n                                        Update\n                                    </Button>\n                                </Grid>\n                        \n                            </Grid>\n                            </Grid>\n                        </CardContent>\n                    </Card>\n                    </form>\n                 </DialogContent>\n               </Dialog></Grid>\n                 \n)}\n\nconst mapStateToProps = ({ userProfileReducer }) => ({\n    userProfileReducer,\n});\n\nconst mapDispatchToProps = {};\n\nconst ConnectedManageTransactionsCard = connect(mapStateToProps, mapDispatchToProps)(ManageTransactionsCard);\nexport default ConnectedManageTransactionsCard; ","import * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Container, Grid,Typography } from '@material-ui/core';\n\nimport ManageTransactionsCard from '../../components/mytransactions/ManageTransactionsCard';\n\nconst GiveHelp = () => (\n    <>\n        <Helmet>\n            <title>My Transactions | WeCare</title>\n        </Helmet>\n        <Box\n            sx={{\n                backgroundColor: 'background.default',\n                minHeight: '100%',\n                py: 3,\n            }}\n        >\n            <Container maxWidth=\"lg\">\n                <Grid container spacing={3}>\n                <Grid item lg={8} md={6} xs={12}>\n          <Typography variant=\"h2\" component=\"h2\">\n            My Transactions\n          </Typography>\n        </Grid>\n                    <Grid item lg={8} md={6} xs={12}>\n                        <ManageTransactionsCard />\n                    </Grid>\n                </Grid>\n            </Container>\n        </Box>\n    </>\n);\n\nexport default GiveHelp;\n","import * as React from 'react';\nimport { Redirect, Route, Switch, useHistory, useLocation } from 'react-router-dom';\nimport { ThemeProvider, StyledEngineProvider } from '@material-ui/core';\n// import CustomerList from 'pages/CustomerList';\nimport { connect } from 'react-redux';\nimport Dashboard from 'pages/Dashboard/Dashboard';\nimport Account from 'pages/Account/Account';\nimport MedicalAssistance from 'pages/MedicalAssistance/MedicalAssistance';\nimport LookForMedicalAssistance from 'pages/MedicalAssistance/LookForMedicalAssistance';\n\nimport Settings from 'pages/Settings/Settings';\nimport Login from 'pages/Login/Login';\nimport RegisterThruLogin from 'pages/Login/RegisterThruLogin';\nimport Register1 from 'pages/Register/RegisterFirstPage';\nimport Register2 from 'pages/Register/RegisterSecondPage';\nimport ForgotPassword from 'pages/ForgotPassword/ForgotPassword';\nimport ResetPassword from 'pages/ForgotPassword/ResetPassword';\nimport NotFound from 'pages/NotFound';\nimport AuthContextProvider, { useAuth } from 'contexts/AuthContext';\nimport GetHelp from 'pages/GetHelp/GetHelp';\nimport GetHelpItem from 'pages/GetHelpItem/GetHelpItem';\nimport theme from './theme';\nimport MainLayout from './components/MainLayout';\nimport DashboardLayout from './components/DashboardLayout';\nimport RegisterDoctorModal from './components/RegisterDoctorModal';\nimport AddServiceScreen from './pages/GiveHelp/AddService';\nimport GiveHelpScreen from './pages/GiveHelp/LandingPage';\nimport AddResourceScreen from './pages/GiveHelp/AddResource';\nimport MyTransactions from './pages/MyTransactions/MyTransactions';\nimport './styles.css';\nconst App: React.FC<any> = ({ _id, id }) => {\n    const history = useHistory();\n    const { search } = useLocation();\n    React.useEffect(() => {\n        const token = typeof window !== 'undefined' && window.localStorage.getItem('token');\n        const query = new URLSearchParams(search);\n        const isSignedIn = _id || id || token || query.get('mode');\n        if (!isSignedIn) {\n            history.push('/login');\n        }\n    }, [_id, id]);\n    return (\n        <AuthContextProvider>\n            <StyledEngineProvider injectFirst>\n                <ThemeProvider theme={theme}>\n                    <div>\n                        <Switch>\n                            <Route path={'/app'}>\n                                <DashboardLayout>\n                                    <Switch>\n                                        <Route path={'/app/account'} component={Account} />\n                                        \n                                        <Route \n                                            path={'/app/gethelp/:id/:type/:pagetype'} \n                                            component={GetHelpItem} \n                                        /> \n                                        <Route path={'/app/gethelp'} component={GetHelp} />\n                                        <Route path={'/app/dashboard'} component={Dashboard} />\n                                        <Route\n                                            path={'/app/mytransactions'}\n                                            component={MyTransactions}\n                                        />\n                                        <Route\n                                            path={'/app/medicalAssistance'}\n                                            component={MedicalAssistance}\n                                        />\n                                        <Route\n                                            path={'/app/lookformedicalAssistance'}\n                                            component={LookForMedicalAssistance}\n                                        />\n                                        <Route\n                                            path={'/app/givehelp/addservice'}\n                                            component={AddServiceScreen}\n                                        />\n                                        <Route\n                                            path={'/app/givehelp/addresource'}\n                                            component={AddResourceScreen}\n                                        />\n                                        <Route\n                                            path={'/app/registerdoctor'}\n                                            component={RegisterDoctorModal}\n                                        />\n                                        <Route path={'/app/givehelp'} component={GiveHelpScreen} />\n                                        <Route path={'/app/settings'} component={Settings} />\n                                    </Switch>\n                                </DashboardLayout>\n                            </Route>\n\n                            <Route path={'/login'}>\n                                <MainLayout>\n                                    <Login />\n                                </MainLayout>\n                            </Route>\n                            <Route path={'/login2register'}>\n                                <MainLayout>\n                                    <RegisterThruLogin />\n                                </MainLayout>\n                            </Route>\n                            <Route path={'/register1'}>\n                                <MainLayout>\n                                    <Register1 />\n                                </MainLayout>\n                            </Route>\n                            <Route path={'/register2'}>\n                                <MainLayout>\n                                    <Register2 />\n                                </MainLayout>\n                            </Route>\n                            <Route path={'/forgot-password'}>\n                                <MainLayout>\n                                    <ForgotPassword />\n                                </MainLayout>\n                            </Route>\n                            <Route path={'/reset-password'}>\n                                <MainLayout>\n                                    <ResetPassword />\n                                </MainLayout>\n                            </Route>\n                            <Route exact path=\"/\">\n                                <Redirect to={_id ? '/app/dashboard' : '/login'} />\n                            </Route>\n                            <Route path={'/404'} component={NotFound} />\n                            <Redirect to=\"/404\" />\n                        </Switch>\n                    </div>\n                </ThemeProvider>\n            </StyledEngineProvider>\n        </AuthContextProvider>\n    );\n};\n\nconst mapStateToProps = ({ userProfileReducer }) => ({\n    ...userProfileReducer,\n});\n\nconst mapDispatchToProps = {};\nconst ConnectedApp = connect(mapStateToProps, mapDispatchToProps)(App);\nexport default ConnectedApp;\n","import * as React from 'react';\nimport { hydrate } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { HelmetProvider } from 'react-helmet-async';\nimport { persistStore } from 'redux-persist';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { configureStore } from '../shared/store';\nimport App from '../shared/App';\n\nconst preloadedState = window.__PRELOADED_STATE__ ? window.__PRELOADED_STATE__ : {};\ndelete window.__PRELOADED_STATE__;\n\n// Create redux store\nconst { persistor, store } = configureStore(preloadedState);\n// Create/use the store\n// history MUST be passed here if you want syncing between server on initial route\n// const store =\n//     window.store ||\n//     configureStore({\n//         initialState: window.__PRELOADED_STATE__,\n//     });\n\n// const persistor = persistStore(store);\n\nhydrate(\n    <Provider store={store}>\n        <BrowserRouter>\n            <HelmetProvider>\n                <PersistGate loading={null} persistor={persistor}>\n                    <App />\n                </PersistGate>\n            </HelmetProvider>\n        </BrowserRouter>  \n    </Provider>,\n    document.getElementById('app')\n);\n\nif (process.env.NODE_ENV === 'development') {\n    if (module.hot) {\n        module.hot.accept();\n    }\n\n    if (!window.store) {\n        window.store = store;\n    }\n}\n","import { createContext, useContext, useEffect, useState } from 'react';\nimport { auth } from '../utils/firebase';\nimport {\n    createUserWithEmailAndPassword,\n    signInWithEmailAndPassword,\n    onAuthStateChanged,\n    signOut,\n    GoogleAuthProvider,\n    signInWithPopup,\n    sendPasswordResetEmail,\n    confirmPasswordReset,\n} from 'firebase/auth';\n\nconst AuthContext = createContext({\n    currentUser: null,\n    register: (email, password) => new Promise((resolve, reject) => {}),\n    login: (email, password) => new Promise((resolve, reject) => {}),\n    logout: () => new Promise((resolve, reject) => {}),\n    signinWithGoogle: () => new Promise((resolve, reject) => {}),\n    forgotPassword: (email) => new Promise((resolve, reject) => {}),\n    resetPassword: (oobCode, newPassword) => new Promise((resolve, reject) => {}),\n});\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport default function AuthContextProvider({ children }) {\n    const [currentUser, setCurrentUser] = useState(null);\n    useEffect(() => {\n        const unsubscribe = onAuthStateChanged(auth, (user) => setCurrentUser(user));\n        return () => {\n            unsubscribe();\n        };\n    }, []);\n    function register(email, password) {\n        return createUserWithEmailAndPassword(auth, email, password);\n    }\n\n    function login(email, password) {\n        return signInWithEmailAndPassword(auth, email, password);\n    }\n\n    function logout() {\n        return signOut(auth);\n    }\n\n    function signinWithGoogle() {\n        const provider = new GoogleAuthProvider();\n        return signInWithPopup(auth, provider);\n    }\n\n    function forgotPassword(email) {\n        return sendPasswordResetEmail(auth, email, { url: 'http://localhost:8500/login' });\n    }\n\n    function resetPassword(oobCode, newPassword) {\n        return confirmPasswordReset(auth, oobCode, newPassword);\n    }\n    const value = {\n        currentUser,\n        register,\n        login,\n        logout,\n        signinWithGoogle,\n        forgotPassword,\n        resetPassword,\n    };\n\n    return <AuthContext.Provider value={value}> {children}</AuthContext.Provider>;\n}\n","import { initializeApp } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\nimport { getStorage, ref } from 'firebase/storage';\nimport 'firebase/storage';\n\nconst firebaseConfig = {\n    // apiKey: process.env.REACT_APP_API_KEY,\n    // authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    // projectId: process.env.REACT_APP_PROJECT_ID,\n    // storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    // messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    // appId: process.env.REACT_AP_APP_ID,\n    // measurementId: process.env.REACT_APP_MEASUREMENT_ID,\n    apiKey: 'AIzaSyBRhY61TgBU4o_iav8XPGUevbIcO74fmgs',\n    authDomain: 'cmpe295-wecare.firebaseapp.com',\n    projectId: 'cmpe295-wecare',\n    storageBucket: 'cmpe295-wecare.appspot.com',\n    messagingSenderId: '181804813353',\n    appId: '1:181804813353:web:a22ff89a9c9c1397292038',\n    measurementId: 'G-JKZYL2KZQV',\n};\n\nconst app = initializeApp(firebaseConfig);\nconst storage = getStorage();\nconst auth = getAuth(app);\nexport { auth, storage };\n"],"sourceRoot":""}