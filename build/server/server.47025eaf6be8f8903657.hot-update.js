exports.id = "server";
exports.modules = {

/***/ "./src/server/routes/appointments.ts":
/*!*******************************************!*\
  !*** ./src/server/routes/appointments.ts ***!
  \*******************************************/
/*! exports provided: createAppointmentHandler, getAllDoctorsAppointmentHandler, equalDates, greaterThanDate, getAllAvailableDoctorsHandler, setDoctorsAvailabilityHandler, deleteAppointmentHandler, setAppointmentHandler, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createAppointmentHandler\", function() { return createAppointmentHandler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getAllDoctorsAppointmentHandler\", function() { return getAllDoctorsAppointmentHandler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"equalDates\", function() { return equalDates; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"greaterThanDate\", function() { return greaterThanDate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getAllAvailableDoctorsHandler\", function() { return getAllAvailableDoctorsHandler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setDoctorsAvailabilityHandler\", function() { return setDoctorsAvailabilityHandler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"deleteAppointmentHandler\", function() { return deleteAppointmentHandler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setAppointmentHandler\", function() { return setAppointmentHandler; });\n/* harmony import */ var regenerator_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! regenerator-runtime */ \"regenerator-runtime\");\n/* harmony import */ var regenerator_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(regenerator_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! express */ \"express\");\n/* harmony import */ var express__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(express__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var models_doctor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! models/doctor */ \"./src/server/models/doctor.ts\");\n/* harmony import */ var models_doctorAppointment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! models/doctorAppointment */ \"./src/server/models/doctorAppointment.ts\");\n/* harmony import */ var utils_dao__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! utils/dao */ \"./src/server/utils/dao.ts\");\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n        var info = gen[key](arg);\n        var value = info.value;\n    } catch (error) {\n        reject(error);\n        return;\n    }\n    if (info.done) {\n        resolve(value);\n    } else {\n        Promise.resolve(value).then(_next, _throw);\n    }\n}\nfunction _asyncToGenerator(fn) {\n    return function() {\n        var self = this, args = arguments;\n        return new Promise(function(resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n        });\n    };\n}\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === \"function\") {\n            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n            }));\n        }\n        ownKeys.forEach(function(key) {\n            _defineProperty(target, key, source[key]);\n        });\n    }\n    return target;\n}\nfunction _objectWithoutProperties(source, excluded) {\n    if (source == null) return {};\n    var target = _objectWithoutPropertiesLoose(source, excluded);\n    var key, i;\n    if (Object.getOwnPropertySymbols) {\n        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n        for(i = 0; i < sourceSymbolKeys.length; i++){\n            key = sourceSymbolKeys[i];\n            if (excluded.indexOf(key) >= 0) continue;\n            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\n\n\n\n\n\nvar router = Object(express__WEBPACK_IMPORTED_MODULE_1__[\"Router\"])();\nvar createAppointmentHandler = function() {\n    var _ref = _asyncToGenerator(regenerator_runtime__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(param, res) {\n        var body, newAppointment;\n        return regenerator_runtime__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_ctx) {\n            while(1)switch(_ctx.prev = _ctx.next){\n                case 0:\n                    body = param.body;\n                    newAppointment = new models_doctorAppointment__WEBPACK_IMPORTED_MODULE_3__[\"doctorAppointmentModel\"](body);\n                    newAppointment.save().then(function(data) {\n                        res.send(data);\n                    }).catch(function(err) {\n                        res.status(500).json({\n                            message: err.message\n                        });\n                    });\n                case 3:\n                case \"end\":\n                    return _ctx.stop();\n            }\n        }, _callee);\n    }));\n    return function createAppointmentHandler(_, res) {\n        return _ref.apply(this, arguments);\n    };\n}();\nvar getAllDoctorsAppointmentHandler = function() {\n    var _ref = _asyncToGenerator(regenerator_runtime__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(req, res) {\n        var ref, user;\n        return regenerator_runtime__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_ctx) {\n            while(1)switch(_ctx.prev = _ctx.next){\n                case 0:\n                    _ctx.prev = 0;\n                    ;\n                    _ctx.next = 4;\n                    return Object(utils_dao__WEBPACK_IMPORTED_MODULE_4__[\"getUserByIdWithAppointments\"])(req === null || req === void 0 ? void 0 : (ref = req.params) === null || ref === void 0 ? void 0 : ref.id);\n                case 4:\n                    user = _ctx.sent;\n                    if (user) {\n                        res.send(user);\n                    } else {\n                        res.send({\n                            error: \"finding user\"\n                        });\n                    }\n                    _ctx.next = 11;\n                    break;\n                case 8:\n                    _ctx.prev = 8;\n                    _ctx.t0 = _ctx[\"catch\"](0);\n                    res.json({\n                        message: _ctx.t0\n                    });\n                case 11:\n                case \"end\":\n                    return _ctx.stop();\n            }\n        }, _callee, null, [\n            [\n                0,\n                8\n            ]\n        ]);\n    }));\n    return function getAllDoctorsAppointmentHandler(req, res) {\n        return _ref.apply(this, arguments);\n    };\n}();\nvar equalDates = function(d1, d2) {\n    if (!d1 || !d2) {\n        return;\n    }\n    var date1 = typeof d1 === \"string\" && d1 ? new Date(d1) : d1;\n    var date2 = typeof d2 === \"string\" && d2 ? new Date(d2) : d2;\n    return Number(date1) === Number(date2);\n};\nvar greaterThanDate = function(d1, d2) {\n    if (!d1 || !d2) {\n        return;\n    }\n    var date1 = typeof d1 === \"string\" && d1 ? new Date(d1) : d1;\n    var date2 = typeof d2 === \"string\" && d2 ? new Date(d2) : d2;\n    return date1 <= date2;\n};\nvar getAllAvailableDoctorsHandler = function() {\n    var _ref1 = _asyncToGenerator(regenerator_runtime__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee1(req, res) {\n        var _ref, userName, firstName, lastName, _availability, availability, doctorModelQuery;\n        return regenerator_runtime__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_ctx1) {\n            while(1)switch(_ctx1.prev = _ctx1.next){\n                case 0:\n                    _ref = req === null || req === void 0 ? void 0 : req.query, userName = _ref.userName, firstName = _ref.firstName, lastName = _ref.lastName, _availability = _ref.availability, availability = _availability === void 0 ? \"\" : _availability, doctorModelQuery = _objectWithoutProperties(_ref, [\n                        \"userName\",\n                        \"firstName\",\n                        \"lastName\",\n                        \"availability\"\n                    ]);\n                    models_doctor__WEBPACK_IMPORTED_MODULE_2__[\"doctorModel\"].find(doctorModelQuery).then(_asyncToGenerator(regenerator_runtime__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {\n                        var data, userIds, users, doctorsList, _args = arguments;\n                        return regenerator_runtime__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_ctx) {\n                            while(1)switch(_ctx.prev = _ctx.next){\n                                case 0:\n                                    data = _args.length > 0 && _args[0] !== void 0 ? _args[0] : [];\n                                    userIds = data.map(function(x) {\n                                        return x.userId;\n                                    });\n                                    _ctx.next = 4;\n                                    return Object(utils_dao__WEBPACK_IMPORTED_MODULE_4__[\"getAllUsers\"])(userIds, {\n                                        userName: userName,\n                                        firstName: firstName,\n                                        lastName: lastName\n                                    });\n                                case 4:\n                                    users = _ctx.sent;\n                                    doctorsList = data.map(function(doctor) {\n                                        var user = users.find(function(x) {\n                                            var ref;\n                                            return ((x === null || x === void 0 ? void 0 : x.id) || (x === null || x === void 0 ? void 0 : (ref = x._id) === null || ref === void 0 ? void 0 : ref.toString())) === (doctor === null || doctor === void 0 ? void 0 : doctor.userId);\n                                        }) || {};\n                                        user = (user === null || user === void 0 ? void 0 : user.toJSON) ? user.toJSON() : user;\n                                        return _objectSpread({}, user, {\n                                            doctor: doctor,\n                                            password: \"\"\n                                        });\n                                    }).filter(function(x) {\n                                        return x === null || x === void 0 ? void 0 : x._id;\n                                    }).filter(function(x) {\n                                        var ref, ref1, ref2, ref3;\n                                        var now = new Date();\n                                        var isProfileActive = x === null || x === void 0 ? void 0 : (ref = x.profile) === null || ref === void 0 ? void 0 : ref.profileActive;\n                                        var isDateGreaterThanNow = greaterThanDate(now, availability);\n                                        var isDocDateGreaterThanNow = greaterThanDate(now, x === null || x === void 0 ? void 0 : (ref1 = x.doctor) === null || ref1 === void 0 ? void 0 : ref1.availability);\n                                        var hasConflictTime = equalDates(x === null || x === void 0 ? void 0 : (ref2 = x.doctor) === null || ref2 === void 0 ? void 0 : ref2.availability, availability);\n                                        var isGreaterThanDate = greaterThanDate(x === null || x === void 0 ? void 0 : (ref3 = x.doctor) === null || ref3 === void 0 ? void 0 : ref3.availability, availability);\n                                        var isAvailable = availability ? isDateGreaterThanNow && !hasConflictTime && isGreaterThanDate : isDocDateGreaterThanNow;\n                                        return isProfileActive && isAvailable;\n                                    });\n                                    res.send(doctorsList);\n                                case 7:\n                                case \"end\":\n                                    return _ctx.stop();\n                            }\n                        }, _callee);\n                    }))).catch(function(err) {\n                        res.status(500).json({\n                            message: err.message\n                        });\n                    });\n                case 2:\n                case \"end\":\n                    return _ctx1.stop();\n            }\n        }, _callee1);\n    }));\n    return function getAllAvailableDoctorsHandler(req, res) {\n        return _ref1.apply(this, arguments);\n    };\n}();\n\nvar setDoctorsAvailabilityHandler = function() {\n    var _ref = _asyncToGenerator(regenerator_runtime__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(req, res) {\n        var ref;\n        return regenerator_runtime__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_ctx) {\n            while(1)switch(_ctx.prev = _ctx.next){\n                case 0:\n                    ;\n                    models_doctor__WEBPACK_IMPORTED_MODULE_2__[\"doctorModel\"].findOneAndUpdate({\n                        userId: req === null || req === void 0 ? void 0 : (ref = req.params) === null || ref === void 0 ? void 0 : ref.id\n                    }, req === null || req === void 0 ? void 0 : req.body).then(function(data) {\n                        var dataJson = (data === null || data === void 0 ? void 0 : data.toJSON) ? data.toJSON() : data;\n                        var doctor = _objectSpread({}, dataJson, req === null || req === void 0 ? void 0 : req.body);\n                        if (dataJson) {\n                            return res.send({\n                                doctor: doctor\n                            });\n                        }\n                        return res.status(500).json({\n                            message: \"no data\"\n                        });\n                    }).catch(function(err) {\n                        res.status(500).json({\n                            message: err.message\n                        });\n                    });\n                case 2:\n                case \"end\":\n                    return _ctx.stop();\n            }\n        }, _callee);\n    }));\n    return function setDoctorsAvailabilityHandler(req, res) {\n        return _ref.apply(this, arguments);\n    };\n}();\nvar deleteAppointmentHandler = function() {\n    var _ref = _asyncToGenerator(regenerator_runtime__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(req, res) {\n        var ref;\n        return regenerator_runtime__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_ctx) {\n            while(1)switch(_ctx.prev = _ctx.next){\n                case 0:\n                    ;\n                    models_doctorAppointment__WEBPACK_IMPORTED_MODULE_3__[\"doctorAppointmentModel\"].findOneAndDelete({\n                        doctorId: req === null || req === void 0 ? void 0 : (ref = req.params) === null || ref === void 0 ? void 0 : ref.id\n                    }, req === null || req === void 0 ? void 0 : req.body).then(function(data) {\n                        res.send(data);\n                    }).catch(function(err) {\n                        res.status(500).json({\n                            message: err.message\n                        });\n                    });\n                case 2:\n                case \"end\":\n                    return _ctx.stop();\n            }\n        }, _callee);\n    }));\n    return function deleteAppointmentHandler(req, res) {\n        return _ref.apply(this, arguments);\n    };\n}();\nvar setAppointmentHandler = function() {\n    var _ref = _asyncToGenerator(regenerator_runtime__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(req, res) {\n        var ref;\n        return regenerator_runtime__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_ctx) {\n            while(1)switch(_ctx.prev = _ctx.next){\n                case 0:\n                    ;\n                    models_doctorAppointment__WEBPACK_IMPORTED_MODULE_3__[\"doctorAppointmentModel\"].findOneAndUpdate({\n                        userId: req === null || req === void 0 ? void 0 : (ref = req.params) === null || ref === void 0 ? void 0 : ref.id\n                    }, req === null || req === void 0 ? void 0 : req.body).then(function(data) {\n                        var dataJson = (data === null || data === void 0 ? void 0 : data.toJSON) ? data.toJSON() : data;\n                        var doctor = _objectSpread({}, dataJson, req === null || req === void 0 ? void 0 : req.body);\n                        if (dataJson) {\n                            return res.send({\n                                doctor: doctor\n                            });\n                        }\n                        return res.status(500).json({\n                            message: \"no data\"\n                        });\n                    }).catch(function(err) {\n                        res.status(500).json({\n                            message: err.message\n                        });\n                    });\n                case 2:\n                case \"end\":\n                    return _ctx.stop();\n            }\n        }, _callee);\n    }));\n    return function setAppointmentHandler(req, res) {\n        return _ref.apply(this, arguments);\n    };\n}();\nrouter.get(\"/doctors\", getAllAvailableDoctorsHandler);\nrouter.get(\"/doctors/:id\", getAllDoctorsAppointmentHandler);\nrouter.post(\"/doctors/:id\", setDoctorsAvailabilityHandler);\nrouter.post(\"/\", createAppointmentHandler);\nrouter.put(\"/\", setAppointmentHandler);\nrouter.delete(\"/:id\", deleteAppointmentHandler);\n/* harmony default export */ __webpack_exports__[\"default\"] = (router);\n\n\n//# sourceURL=webpack:///./src/server/routes/appointments.ts?");

/***/ })

};